(window["webpackJsonpmapboard"] = window["webpackJsonpmapboard"] || []).push([["mapPanelLoader"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&":
/*!***********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& ***!
  \***********************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.i, \"\\n.mb-panel-map[data-v-3106ea10] {\\n  /*this allows the loading mask to fill the div*/\\n  position: relative;\\n}\\n.mb-map-with-widget[data-v-3106ea10] {\\n  height: 50%;\\n}\\n.widget-slot[data-v-3106ea10] {\\n  display: inline-block;\\n  float: left;\\n}\\n.mb-map-loading-mask[data-v-3106ea10] {\\n  /*display: inline;*/\\n  position: absolute;\\n  top: 0;\\n  height: 100%;\\n  width: 100%;\\n  background: rgba(0, 0 ,0 , 0.25);\\n  z-index: 1000;\\n  text-align: center;\\n  vertical-align: middle;\\n}\\n.mb-map-loading-mask-inner[data-v-3106ea10] {\\n  position: absolute;\\n  top: 40%;\\n  left: 40%;\\n}\\n\\n/*small retina*/\\n/*@media\\n(-webkit-min-device-pixel-ratio: 2),\\n(min-resolution: 192dpi),\\n(max-width: 39.9375em) {\\n  .mb-search-control-input {\\n    max-width: 250px;\\n  }\\n}*/\\n\\n\", \"\"]);\n\n\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/style-loader/index.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&":
/*!***************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\nvar content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib??vue-loader-options!./MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& */ \"./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&\");\n\nif(typeof content === 'string') content = [[module.i, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ \"./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(false) {}\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?./node_modules/style-loader!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib??vue-loader-options!./src/components/MapPanel.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! leaflet */ \"./node_modules/leaflet/dist/leaflet-src.js\");\n/* harmony import */ var leaflet__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(leaflet__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _markers_mixin__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markers-mixin */ \"./src/components/markers-mixin.js\");\n/* harmony import */ var _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @cityofphiladelphia/phila-vue-mapping */ \"./node_modules/@cityofphiladelphia/phila-vue-mapping/dist/phila-vue-mapping.js\");\n/* harmony import */ var _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconsole.log('in MapPanel, this.$config:', undefined.$config);\n\n// console.log('L:', L)\nconst FeatureGroup = leaflet__WEBPACK_IMPORTED_MODULE_0___default.a.featureGroup;\nconst GeoJSON = leaflet__WEBPACK_IMPORTED_MODULE_0___default.a.geoJSON;\nconst Lmarker = leaflet__WEBPACK_IMPORTED_MODULE_0___default.a.marker;\n// console.log('FeatureGroup:', FeatureGroup, 'GeoJSON:', GeoJSON)\n// import { featureGroup, geoJSON } from 'leaflet';\n// import { marker as Lmarker } from 'leaflet';\n// import { FeatureGroup, GeoJSON } from 'leaflet';\n// import { Marker as Lmarker } from 'leaflet';\n\n// mixins\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'MapPanel',\n  mixins: [\n    _markers_mixin__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"cyclomediaMixin\"],\n    _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"pictometryMixin\"],\n  ],\n  components: {\n    Map_: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"Map_\"],\n    Control: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"Control\"],\n    MapAddressInput: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"MapAddressInput\"],\n    MapAddressCandidateList: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"MapAddressCandidateList\"],\n    EsriTiledMapLayer: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"EsriTiledMapLayer\"],\n    EsriTiledOverlay: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"EsriTiledOverlay\"],\n    EsriDynamicMapLayer: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"EsriDynamicMapLayer\"],\n    EsriFeatureLayer: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"EsriFeatureLayer\"],\n    Geojson: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"Geojson\"],\n    CircleMarker: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"CircleMarker\"],\n    // OpacitySlider,\n    VectorMarker: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"VectorMarker\"],\n    PngMarker: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"PngMarker\"],\n    BasemapToggleControl: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"BasemapToggleControl\"],\n    BasemapSelectControl: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"BasemapSelectControl\"],\n    FullScreenMapToggleTab: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"FullScreenMapToggleTab\"],\n    LocationControl: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"LocationControl\"],\n    PictometryButton: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"PictometryButton\"],\n    CyclomediaButton: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"CyclomediaButton\"],\n    CyclomediaRecordingCircle: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"CyclomediaRecordingCircle\"],\n    SvgViewConeMarker: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"SvgViewConeMarker\"],\n    MeasureControl: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"MeasureControl\"],\n    LegendControl: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"LegendControl\"],\n    BasemapTooltip: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"BasemapTooltip\"],\n    ControlCorner: _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"ControlCorner\"],\n  },\n  // data: {\n  data() {\n    const data = {\n      zoomToShape: {\n        geojsonParcels: [],\n        geojsonForTopic: [],\n        markersForAddress: [],\n        markersForTopic: [],\n      },\n    };\n    return data;\n  },\n  created() {\n    // if there's a default address, navigate to it\n    const defaultAddress = this.$config.defaultAddress;\n    if (defaultAddress) {\n      this.$controller.goToDefaultAddress(defaultAddress);\n    }\n\n    const cyclomediaConfig = this.$config.cyclomedia || {};\n    if (cyclomediaConfig.enabled) {\n    // create cyclomedia recordings client\n      this.$cyclomediaRecordingsClient = new _cityofphiladelphia_phila_vue_mapping__WEBPACK_IMPORTED_MODULE_2__[\"CyclomediaRecordingsClient\"](\n        this.$config.cyclomedia.recordingsUrl,\n        this.$config.cyclomedia.username,\n        this.$config.cyclomedia.password,\n        4326\n      );\n    }\n  },\n  computed: {\n    // shouldShowAddressInput() {\n    //   if (this.$config.addressInputLocation == 'map') {\n    //     return true;\n    //   } else {\n    //     return false;\n    //   }\n    // },\n    addressAutocompleteEnabled() {\n      // TODO tidy up the code\n      if (this.$config.addressInput) {\n        if (this.$config.addressInput.autocompleteEnabled === true) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    },\n    addressInputPosition() {\n      if (this.isMobileOrTablet) {\n        return 'topleft'\n      } else {\n        return 'topalmostleft'\n      }\n    },\n    addressInputWidth() {\n      if (this.$config.addressInput) {\n        return this.$config.addressInput.mapWidth;\n      } else {\n        return 415;\n      }\n    },\n    addressInputPlaceholder() {\n      if (this.$config.addressInput) {\n        return this.$config.addressInput.placeholder;\n      } else {\n        return null\n      }\n    },\n    basemapSelectControlPosition() {\n      if (this.isMobileOrTablet) {\n        return 'topright'\n      } else {\n        return 'topalmostright'\n      }\n    },\n    shouldShowAddressCandidateList() {\n      return this.$store.state.shouldShowAddressCandidateList;\n    },\n    measureControlEnabled() {\n      if (this.$config.measureControlEnabled === false) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    fullScreenMapEnabled() {\n      return this.$store.state.fullScreenMapEnabled;\n    },\n    fullScreenTopicsEnabled() {\n      return this.$store.state.fullScreenTopicsEnabled;\n    },\n    mapPanelContainerClass() {\n      // return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n      if (this.fullScreenMapEnabled) {\n        return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n      } else if (this.fullScreenMapOnly) {\n        return 'medium-1 small-order-1 small-1 medium-order-2 mb-panel mb-panel-map'\n      } else if (this.fullScreenTopicsEnabled) {\n        return 'medium-1 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n      } else {\n        return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\n      }\n    },\n    cycloLatlng() {\n      if (this.$store.state.cyclomedia.orientation.xyz !== null) {\n        const xyz = this.$store.state.cyclomedia.orientation.xyz;\n        return [xyz[1], xyz[0]];\n      } else {\n        const center = this.$config.map.center;\n        return center;\n      }\n    },\n    cycloRotationAngle() {\n      return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\n    },\n    cycloHFov() {\n      return this.$store.state.cyclomedia.orientation.hFov;\n    },\n    isMobileOrTablet() {\n      return this.$store.state.isMobileOrTablet;\n    },\n    shouldShowCyclomediaButton() {\n      return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\n    },\n    shouldShowPictometryButton() {\n      return this.$config.pictometry.enabled && !this.isMobileOrTablet;\n    },\n    geolocationEnabled() {\n      if (this.$config.geolocation) {\n        return this.$config.geolocation.enabled;\n      } else {\n        return false;\n      }\n    },\n    activeDorParcel() {\n      // return this.$store.state.activeDorParcel;\n      return this.$store.state.parcels.dor.activeParcel;\n    },\n    legendControls() {\n      return this.$config.legendControls || {};\n    },\n    imageOverlay() {\n      return this.$store.state.map.imageOverlay;\n    },\n    imageOverlayItems() {\n      // console.log('calculating imageOverlayItem');\n      if (this.activeTopicConfig.imageOverlayGroup) {\n        const overlayGroup = this.activeTopicConfig.imageOverlayGroup;\n        const state = this.$store.state;\n        const overlay = this.$config.imageOverlayGroups[overlayGroup].items(state);\n        // console.log('returning imageOverlayItem', overlay);\n        return overlay;\n      } else {\n        return [];\n      }\n    },\n    imageOverlayInfo() {\n      // console.log('config:', this.$config);\n      return this.$config.map.dynamicMapLayers.regmaps;\n    },\n    activeBasemap() {\n      const shouldShowImagery = this.$store.state.map.shouldShowImagery;\n      if (shouldShowImagery) {\n        return this.$store.state.map.imagery;\n      }\n      const defaultBasemap = this.$config.map.defaultBasemap;\n      const basemap = this.$store.state.map.basemap || defaultBasemap;\n      return basemap;\n    },\n    tiledLayers() {\n      const activeBasemap = this.activeBasemap;\n      const activeBasemapConfig = this.configForBasemap(activeBasemap)\n\n      return activeBasemapConfig.tiledLayers || [];\n    },\n    activeTiledOverlays() {\n      if (!this.activeTopicConfig || !this.activeTopicConfig.tiledOverlays) {\n        return [];\n      } else {\n        return this.activeTopicConfig.tiledOverlays;\n      }\n    },\n    activeDynamicMaps() {\n      if (!this.activeTopicConfig || !this.activeTopicConfig.dynamicMapLayers) {\n        return [];\n      } else {\n        return this.activeTopicConfig.dynamicMapLayers;\n      }\n    },\n    activeFeatureLayers() {\n      if (!this.activeTopicConfig || !this.activeTopicConfig.featureLayers) {\n        return [];\n      } else {\n        return this.activeTopicConfig.featureLayers;\n      }\n    },\n    activeFeature() {\n      return this.$store.state.activeFeature;\n    },\n    basemaps() {\n      return Object.values(this.$config.map.basemaps);\n    },\n    imageryBasemaps() {\n      return this.basemaps.filter(basemap => basemap.type === 'imagery');\n    },\n    hasImageryBasemaps() {\n      return this.imageryBasemaps.length > 0;\n    },\n    shouldShowImageryToggle() {\n      if (this.$config.map.imagery) {\n        return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\n      } else {\n        return this.hasImageryBasemaps;\n      }\n    },\n    identifyFeature() {\n      let configFeature;\n      if (this.geocodeType === 'intersection') {\n        configFeature = \"address-marker\";\n      } else if (this.activeTopicConfig.identifyFeature) {\n        configFeature = this.activeTopicConfig.identifyFeature;\n      } else {\n        if (this.$config) {\n          configFeature = this.$config.map.defaultIdentifyFeature;\n        }\n      }\n      return configFeature;\n    },\n    activeTopic() {\n      return this.$store.state.activeTopic;\n    },\n    activeTopicConfig() {\n      const key = this.activeTopic;\n      let config;\n\n      // if no active topic, return null\n      if (key) {\n        config = this.$config.topics.filter((topic) => {\n          return topic.key === key;\n        })[0];\n      }\n\n      return config || {};\n    },\n    activeParcelLayer() {\n      return this.activeTopicConfig.parcels;\n    },\n    dorParcels() {\n      return this.$store.state.parcels.dor.data;\n    },\n    pwdParcel() {\n      return this.$store.state.parcels.pwd;\n    },\n    geocodeResult() {\n      return this.$store.state.geocode.data || {};\n    },\n    geocodeGeom() {\n      return this.geocodeResult.geometry;\n    },\n    geocodeType() {\n      return this.geocodeResult.ais_feature_type;\n    },\n    streetAddress() {\n      return this.geocodeResult.properties.street_address;\n    },\n    picOrCycloActive() {\n      if (this.cyclomediaActive || this.pictometryActive) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    mapBounds() {\n      // TODO calculate map bounds based on leaflet markers above\n    },\n    boundsBasedOnShape() {\n      return this.$store.state.map.boundsBasedOnShape;\n    },\n    isGeocoding() {\n      return this.$store.state.geocode.status === 'waiting';\n    },\n  },\n  watch: {\n    picOrCycloActive(value) {\n      this.$nextTick(() => {\n        this.$store.state.map.map.invalidateSize();\n      })\n    },\n    geojsonForTopic(nextGeojson) {\n      let czts = this.activeTopicConfig.zoomToShape;\n      let dzts = this.$data.zoomToShape;\n      if (!czts || !czts.includes('geojsonForTopic')) {\n        dzts.geojsonForTopic = [];\n        return;\n      } else {\n        dzts.geojsonForTopic = nextGeojson;\n        // console.log('exiting geojsonForTopic');\n        this.checkBoundsChanges();\n      }\n    },\n\n    geojsonParcels(nextGeojson) {\n      let czts = this.activeTopicConfig.zoomToShape;\n      let dzts = this.$data.zoomToShape;\n      if (!czts || !czts.includes('geojsonParcels')) {\n        dzts.geojsonParcels = [];\n        return;\n      } else {\n        dzts.geojsonParcels = nextGeojson;\n        // console.log('exiting geojsonParcels');\n        this.checkBoundsChanges();\n      }\n    },\n\n    markersForAddress(nextMarkers) {\n      let czts = this.activeTopicConfig.zoomToShape;\n      let dzts = this.$data.zoomToShape;\n      if (!czts || !czts.includes('markersForAddress')) {\n        dzts.markersForAddress = [];\n        return;\n      } else {\n        dzts.markersForAddress = nextMarkers;\n        // console.log('exiting markersForAddress')\n        this.checkBoundsChanges();\n      }\n    },\n\n    // watches computed markersForTopic, adds info to data zoomToShape.markersForTopic\n    // it does not update zoomToShape unless there is a change\n    // because the markers computed recalculates extremely often, this is needed\n    markersForTopic(nextMarkers) {\n      let czts = this.activeTopicConfig.zoomToShape;\n      let dzts = this.$data.zoomToShape;\n      if (!czts || !czts.includes('markersForTopic')) {\n      // if (!czts.includes('markersForTopic')) {\n        dzts.markersForTopic = [];\n        return;\n      } else {\n        dzts.markersForTopic = nextMarkers;\n        // console.log('exiting markersForTopic');\n        this.checkBoundsChanges();\n      }\n    },\n\n    fullScreenTopicsEnabled() {\n      this.$nextTick(() => {\n        this.$store.state.map.map.invalidateSize();\n      })\n    },\n  },\n  methods: {\n    checkBoundsChanges() {\n      let czts = this.activeTopicConfig.zoomToShape;\n      if (!czts) {\n        return;\n      }\n      let dzts = this.$data.zoomToShape;\n      // console.log('dzts:', dzts, 'czts:', czts);\n      let tf = [];\n      for (let shape of czts) {\n        if (dzts[shape] !== false && dzts[shape].length > 0) {\n          tf.push(true);\n        } else {\n          tf.push(false);\n        }\n      }\n      // console.log('MapPanel.vue checkBoundsChanges, tf:', tf);\n      if (tf.includes(false)) {\n        return;\n      } else {\n        this.setMapToBounds();\n      }\n    },\n\n    setMapToBounds() {\n      // console.log('setMapToBounds is running');\n      let featureArray = []\n      let czts = this.activeTopicConfig.zoomToShape;\n      if (czts) {\n        if (czts.includes('geojsonParcels')) {\n          for (let geojsonFeature of this.geojsonParcels) {\n            // featureArray.push(geoJson(geojsonFeature.geojson))\n            // featureArray.push(L.geoJSON(geojsonFeature.geojson))\n            featureArray.push(GeoJSON(geojsonFeature.geojson))\n          }\n        }\n        if (czts.includes('geojsonForTopic')) {\n          for (let geojsonFeature of this.geojsonForTopic) {\n            // featureArray.push(geoJson(geojsonFeature.geojson))\n            // featureArray.push(L.geoJSON(geojsonFeature.geojson))\n            featureArray.push(GeoJSON(geojsonFeature.geojson))\n          }\n        }\n        if (czts.includes('markersForAddress')) {\n          for (let marker of this.markersForAddress) {\n            featureArray.push(Lmarker(marker.latlng))\n            // featureArray.push(L.marker(marker.latlng))\n          }\n        }\n        if (czts.includes('markersForTopic')) {\n          for (let marker of this.markersForTopic) {\n            featureArray.push(Lmarker(marker.latlng))\n            // featureArray.push(L.marker(marker.latlng))\n          }\n        }\n        const group = new FeatureGroup(featureArray);\n        // const group = new featureGroup(featureArray);\n        // const group = new L.featureGroup(featureArray);\n        const bounds = group.getBounds();\n        this.$store.commit('setMapBounds', bounds);\n      }\n    },\n    configForBasemap(basemap) {\n      return this.$config.map.basemaps[basemap] || {};\n    },\n    shouldShowGeojson(key) {\n      if (this.activeTopicConfig.basemap === 'pwd') {\n        return true;\n      } else {\n        return key === this.activeDorParcel;\n      }\n    },\n    shouldShowImageOverlay(key) {\n      return key === this.imageOverlay;\n    },\n    shouldShowFeatureLayer(key) {\n      if (this.activeFeatureLayers.includes(key)) {\n        return true;\n      }\n      return false;\n    },\n    handleMapClick(e) {\n      // console.log('MapPanel.vue handleMapClick e:', e);\n      // latLng = L.latLng(e.lat, e.lng)\n      this.$controller.handleMapClick(e);\n    },\n\n    handleMapMove(e) {\n      const map = this.$store.state.map.map;\n\n      const pictometryConfig = this.$config.pictometry || {};\n\n      const center = map.getCenter();\n      const { lat, lng } = center;\n      const coords = [lng, lat];\n\n      if (pictometryConfig.enabled) {\n        // update state for pictometry\n        this.$store.commit('setPictometryMapCenter', coords);\n\n        const zoom = map.getZoom();\n        this.$store.commit('setPictometryMapZoom', zoom);\n      }\n\n      const cyclomediaConfig = this.$config.cyclomedia || {};\n\n      if (cyclomediaConfig.enabled) {\n        // update cyclo recordings\n        this.updateCyclomediaRecordings();\n        this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\n      }\n    },\n    fillColorForOverlayMarker(markerId, tableId) {\n      // get map overlay style and hover style for table\n      const tableConfig = this.getConfigForTable(tableId);\n      const mapOverlay = tableConfig.options.mapOverlay;\n      const { style, hoverStyle } = mapOverlay;\n\n      // compare id to active feature id\n      const activeFeature = this.activeFeature;\n      const useHoverStyle = (\n        markerId === activeFeature.featureId &&\n        tableId === activeFeature.tableId\n      );\n      const curStyle = useHoverStyle ? hoverStyle : style;\n\n      return curStyle.fillColor;\n    },\n  }, // end of methods\n}); //end of export\n\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true& ***!
  \**************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:this.mapPanelContainerClass,attrs:{\"id\":\"map-panel-container\"}},[_vm._m(0),_vm._v(\" \"),_c('map_',{class:{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active },attrs:{\"id\":\"map-tag\",\"center\":this.$store.state.map.center,\"zoom\":this.$store.state.map.zoom,\"zoom-control-position\":\"bottomright\",\"min-zoom\":this.$config.map.minZoom,\"max-zoom\":this.$config.map.maxZoom},on:{\"l-click\":_vm.handleMapClick,\"l-moveend\":_vm.handleMapMove}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isGeocoding),expression:\"isGeocoding\"}],staticClass:\"mb-map-loading-mask\"},[_c('div',{staticClass:\"mb-map-loading-mask-inner\"},[_c('i',{staticClass:\"fa fa-spinner fa-4x spin\"}),_vm._v(\" \"),_c('h1',[_vm._v(\"Finding address...\")])])]),_vm._v(\" \"),_vm._l((this.$config.map.basemaps),function(basemap,key){return (_vm.activeBasemap === key)?_c('esri-tiled-map-layer',{key:key,attrs:{\"url\":basemap.url,\"max-zoom\":basemap.maxZoom,\"attribution\":basemap.attribution}}):_vm._e()}),_vm._v(\" \"),_vm._l((this.$config.map.tiledLayers),function(tiledLayer,key){return (_vm.tiledLayers.includes(key))?_c('esri-tiled-map-layer',{key:key,attrs:{\"url\":tiledLayer.url,\"zIndex\":tiledLayer.zIndex,\"attribution\":tiledLayer.attribution}}):_vm._e()}),_vm._v(\" \"),_vm._l((this.$config.map.tiledOverlays),function(tiledLayer,key){return (_vm.activeTiledOverlays.includes(key))?_c('esri-tiled-overlay',{key:key,attrs:{\"url\":tiledLayer.url,\"zIndex\":tiledLayer.zIndex,\"opacity\":tiledLayer.opacity}}):_vm._e()}),_vm._v(\" \"),_vm._l((this.$config.map.dynamicMapLayers),function(dynamicLayer,key){return (_vm.activeDynamicMaps.includes(key))?_c('esri-dynamic-map-layer',{key:key,attrs:{\"url\":dynamicLayer.url,\"attribution\":dynamicLayer.attribution,\"transparent\":true,\"opacity\":dynamicLayer.opacity}}):_vm._e()}),_vm._v(\" \"),_vm._l((this.$config.map.featureLayers),function(featureLayer,key){return (_vm.shouldShowFeatureLayer(key, featureLayer.minZoom))?_c('esri-feature-layer',{key:key,attrs:{\"layerName\":key,\"url\":featureLayer.url,\"color\":featureLayer.color,\"fillColor\":featureLayer.color,\"fillOpacity\":featureLayer.fillOpacity,\"weight\":featureLayer.weight,\"style_\":featureLayer.style,\"minZoom\":featureLayer.minZoom,\"maxZoom\":featureLayer.maxZoom,\"zIndex\":featureLayer.zIndex,\"markerType\":featureLayer.markerType,\"radius\":featureLayer.radius,\"interactive\":featureLayer.interactive}}):_vm._e()}),_vm._v(\" \"),_vm._l((this.imageOverlayItems),function(item,key){return (_vm.shouldShowImageOverlay(item.properties.RECMAP))?_c('esri-dynamic-map-layer',{key:key,attrs:{\"url\":'//gis.phila.gov/arcgis/rest/services/Atlas/RegMaps/MapServer',\"layers\":[0],\"layerDefs\":'0:NAME=\\'g' + item.properties.RECMAP.toLowerCase() + '.tif\\'',\"transparent\":true,\"opacity\":0.5}}):_vm._e()}),_vm._v(\" \"),_vm._l((_vm.markersForAddress),function(marker,index){return _c('vector-marker',{key:marker.key,attrs:{\"latlng\":marker.latlng,\"markerColor\":marker.color,\"icon\":marker.icon}})}),_vm._v(\" \"),_vm._l((_vm.markersForTopic),function(marker,index){return _c('vector-marker',{key:marker.key,attrs:{\"latlng\":marker.latlng,\"markerColor\":marker.color,\"icon\":marker.icon}})}),_vm._v(\" \"),(this.cyclomediaActive)?_c('png-marker',{attrs:{\"icon\":'images/camera.png',\"latlng\":_vm.cycloLatlng,\"rotationAngle\":_vm.cycloRotationAngle}}):_vm._e(),_vm._v(\" \"),(this.cyclomediaActive)?_c('svg-view-cone-marker',{attrs:{\"latlng\":_vm.cycloLatlng,\"rotationAngle\":_vm.cycloRotationAngle,\"hFov\":_vm.cycloHFov}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.geojsonParcels),function(geojsonFeature){return (_vm.shouldShowGeojson(geojsonFeature.key))?_c('geojson',{key:geojsonFeature.key,attrs:{\"geojson\":geojsonFeature.geojson,\"fillColor\":geojsonFeature.fillColor,\"color\":geojsonFeature.color,\"weight\":geojsonFeature.weight,\"opacity\":geojsonFeature.opacity,\"fillOpacity\":geojsonFeature.fillOpacity,\"data\":{\n               featureId: geojsonFeature.featureId,\n               tableId: geojsonFeature.tableId\n             }}}):_vm._e()}),_vm._v(\" \"),_vm._l((_vm.geojsonForTopic),function(geojsonFeature){return (_vm.shouldShowGeojson(geojsonFeature.key))?_c('geojson',{key:geojsonFeature.key,attrs:{\"geojson\":geojsonFeature.geojson,\"fillColor\":geojsonFeature.fillColor,\"color\":geojsonFeature.color,\"weight\":geojsonFeature.weight,\"opacity\":geojsonFeature.opacity,\"fillOpacity\":geojsonFeature.fillOpacity,\"data\":{\n               featureId: geojsonFeature.featureId,\n               tableId: geojsonFeature.tableId\n             }}}):_vm._e()}),_vm._v(\" \"),_vm._l((_vm.reactiveGeojsonFeatures),function(geojsonFeature){return (_vm.shouldShowGeojson(geojsonFeature.key))?_c('geojson',{key:geojsonFeature.key,attrs:{\"geojson\":geojsonFeature.geojson,\"fillColor\":geojsonFeature.fillColor,\"color\":geojsonFeature.color,\"weight\":geojsonFeature.weight,\"opacity\":geojsonFeature.opacity,\"fillOpacity\":geojsonFeature.fillOpacity,\"data\":{\n                featureId: geojsonFeature.featureId,\n                tableId: geojsonFeature.tableId\n              }},on:{\"l-mouseover\":_vm.handleMarkerMouseover,\"l-click\":_vm.handleMarkerClick,\"l-mouseout\":_vm.handleMarkerMouseout}}):_vm._e()}),_vm._v(\" \"),(this.$store.state.map.location.lat != null)?_c('circle-marker',{key:Math.random(),attrs:{\"latlng\":this.locationMarker.latlng,\"radius\":this.locationMarker.radius,\"fillColor\":this.locationMarker.fillColor,\"color\":this.locationMarker.color,\"weight\":this.locationMarker.weight,\"opacity\":this.locationMarker.opacity,\"fillOpacity\":this.locationMarker.fillOpacity}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.reactiveCircleMarkers),function(circleMarker){return _c('circle-marker',{key:Math.random(),attrs:{\"latlng\":circleMarker.latlng,\"radius\":circleMarker.radius,\"fillColor\":circleMarker.fillColor,\"color\":circleMarker.color,\"weight\":circleMarker.weight,\"opacity\":circleMarker.opacity,\"fillOpacity\":circleMarker.fillOpacity,\"data\":{\n                     featureId: circleMarker.featureId,\n                     tableId: circleMarker.tableId\n                   }},on:{\"l-mouseover\":_vm.handleMarkerMouseover,\"l-click\":_vm.handleMarkerClick,\"l-mouseout\":_vm.handleMarkerMouseout}})}),_vm._v(\" \"),_c('control-corner',{attrs:{\"vSide\":'top',\"hSide\":'almostright'}}),_vm._v(\" \"),_c('control-corner',{attrs:{\"vSide\":'top',\"hSide\":'almostleft'}}),_vm._v(\" \"),_vm._m(2),_vm._v(\" \"),_vm._m(3),_vm._v(\" \"),_vm._m(5),_vm._v(\" \"),_vm._m(7),_vm._v(\" \"),(this.measureControlEnabled)?_vm._m(8):_vm._e(),_vm._v(\" \"),_vm._m(9),_vm._v(\" \"),_vm._m(11),_vm._v(\" \"),_vm._m(12),_vm._v(\" \"),(this.addressAutocompleteEnabled)?_c('map-address-candidate-list',{attrs:{\"position\":this.addressInputPosition,\"widthFromConfig\":this.addressInputWidth}}):_vm._e(),_vm._v(\" \"),_vm._l((_vm.cyclomediaRecordings),function(recording){return (_vm.cyclomediaActive)?_c('cyclomedia-recording-circle',{key:recording.imageId,attrs:{\"imageId\":recording.imageId,\"latlng\":[recording.lat, recording.lng],\"size\":1.2,\"color\":'#3388ff',\"weight\":1},on:{\"l-click\":_vm.handleCyclomediaRecordingClick}}):_vm._e()})],2),_vm._v(\" \"),_vm._t(\"cycloWidget\"),_vm._v(\" \"),_vm._t(\"pictWidget\")],2)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('full-screen-map-toggle-tab')},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('basemap-toggle-control',{attrs:{\"position\":'topright'}})},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.shouldShowImageryToggle)?_vm._m(1):_vm._e()],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('basemap-select-control',{attrs:{\"position\":this.basemapSelectControlPosition}})],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('pictometry-button',{attrs:{\"position\":'topright',\"link\":'pictometry',\"imgSrc\":'images/pictometry.png'}})},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(this.shouldShowPictometryButton)?_vm._m(4):_vm._e()],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('cyclomedia-button',{attrs:{\"position\":'topright',\"link\":'cyclomedia',\"imgSrc\":'images/cyclomedia.png'},on:{\"click\":_vm.handleCyclomediaButtonClick}})},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(this.shouldShowCyclomediaButton)?_vm._m(6):_vm._e()],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('measure-control',{attrs:{\"position\":'bottomleft'}})],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',_vm._l((Object.keys(_vm.legendControls)),function(legendControl){return _c('legend-control',{key:legendControl,attrs:{\"position\":'bottomleft',\"options\":_vm.legendControls[legendControl].options,\"items\":_vm.legendControls[legendControl].data}})}),1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('location-control',{attrs:{\"position\":'bottomright'}})},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(this.geolocationEnabled)?_vm._m(10):_vm._e()],1)},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('map-address-input',{attrs:{\"position\":this.addressInputPosition,\"placeholder\":this.addressInputPlaceholder,\"widthFromConfig\":this.addressInputWidth}})],1)}]\n\n\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options");

/***/ }),

/***/ "./src/components/MapPanel.vue":
/*!*************************************!*\
  !*** ./src/components/MapPanel.vue ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MapPanel.vue?vue&type=template&id=3106ea10&scoped=true& */ \"./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true&\");\n/* harmony import */ var _MapPanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapPanel.vue?vue&type=script&lang=js& */ \"./src/components/MapPanel.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& */ \"./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&\");\n/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\n  _MapPanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"3106ea10\",\n  null\n  \n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?");

/***/ }),

/***/ "./src/components/MapPanel.vue?vue&type=script&lang=js&":
/*!**************************************************************!*\
  !*** ./src/components/MapPanel.vue?vue&type=script&lang=js& ***!
  \**************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/vue-loader/lib??vue-loader-options!./MapPanel.vue?vue&type=script&lang=js& */ \"./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); \n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?");

/***/ }),

/***/ "./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&":
/*!**********************************************************************************************!*\
  !*** ./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/style-loader!../../node_modules/css-loader/dist/cjs.js!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/vue-loader/lib??vue-loader-options!./MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css& */ \"./node_modules/style-loader/index.js!./node_modules/css-loader/dist/cjs.js!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=style&index=0&id=3106ea10&scoped=true&lang=css&\");\n/* harmony import */ var _node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__);\n/* harmony reexport (unknown) */ for(var __WEBPACK_IMPORT_KEY__ in _node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== 'default') (function(key) { __webpack_require__.d(__webpack_exports__, key, function() { return _node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__[key]; }) }(__WEBPACK_IMPORT_KEY__));\n /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_style_loader_index_js_node_modules_css_loader_dist_cjs_js_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_style_index_0_id_3106ea10_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default.a); \n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?");

/***/ }),

/***/ "./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true&":
/*!********************************************************************************!*\
  !*** ./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true& ***!
  \********************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/vue-loader/lib??vue-loader-options!./MapPanel.vue?vue&type=template&id=3106ea10&scoped=true& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./src/components/MapPanel.vue?vue&type=template&id=3106ea10&scoped=true&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_MapPanel_vue_vue_type_template_id_3106ea10_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n\n\n//# sourceURL=webpack://mapboard/./src/components/MapPanel.vue?");

/***/ }),

/***/ "./src/components/markers-mixin.js":
/*!*****************************************!*\
  !*** ./src/components/markers-mixin.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n  watch: {\r\n    activeFeature(nextActiveFeature, prevActiveFeature) {\r\n      // console.log('WATCH active feature', prevActiveFeature, '=>', nextActiveFeature);\r\n\r\n      const layerMap = this.$store.state.map.map._layers;\r\n      const layers = Object.values(layerMap);\r\n\r\n      let updateFeaturePrev,\r\n          updateFeatureNext,\r\n          tableId,\r\n          featureIdPrev,\r\n          featureIdNext,\r\n          matchingLayerNext,\r\n          matchingLayerPrev;\r\n\r\n      if (prevActiveFeature && prevActiveFeature.tableId && prevActiveFeature.featureId) {\r\n        updateFeaturePrev = prevActiveFeature;\r\n        tableId = updateFeaturePrev.tableId\r\n        featureIdPrev = updateFeaturePrev.featureId;\r\n        matchingLayerPrev = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdPrev && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerPrev);\r\n      }\r\n\r\n      if (nextActiveFeature && nextActiveFeature.tableId && nextActiveFeature.featureId) {\r\n        updateFeatureNext = nextActiveFeature;\r\n        tableId = updateFeatureNext.tableId\r\n        featureIdNext = updateFeatureNext.featureId;\r\n        matchingLayerNext = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdNext && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerNext);\r\n        this.bringMarkerToFront(matchingLayerNext);\r\n      }\r\n\r\n    },\r\n  },\r\n  computed: {\r\n    locationMarker() {\r\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\r\n      const marker = {\r\n        latlng: latlngArray,\r\n        radius: 6,\r\n        fillColor: '#ff3f3f',\r\n        color: '#ff0000',\r\n        weight: 1,\r\n        opacity: 1,\r\n        fillOpacity: 1.0\r\n      }\r\n      return marker;\r\n    },\r\n\r\n    // returns map markers as simple object with a geometry property, key,\r\n    // and optional properties for symbology\r\n    markersForAddress() {\r\n      // console.log('markers-mixin.js markersForAddress computed is running');\r\n      const markers = [];\r\n      // geocoded address marker\r\n      const geocodeGeom = this.geocodeGeom;\r\n      if (this.identifyFeature === 'address-marker' && geocodeGeom) {\r\n        const latlng = [...geocodeGeom.coordinates].reverse();\r\n        const key = this.geocodeResult.properties.street_address;\r\n        const color = '#2176d2';\r\n        const markerType = 'geocode';\r\n        const icon = {\r\n          prefix: 'fas',\r\n          icon: 'map-marker-alt',\r\n          shadow: true,\r\n          size: 50,\r\n        }\r\n        const addressMarker = {latlng, key, color, markerType, icon};\r\n        markers.push(addressMarker);\r\n      }\r\n      return markers;\r\n    },\r\n\r\n    markersForTopic() {\r\n      // console.log('markers-mixin.js markersForTopic computed is running');\r\n      const markers = [];\r\n\r\n      // marker for topic from config\r\n      const topicMarkers = this.activeTopicConfig.markersForTopic;\r\n      if (topicMarkers) {\r\n        const state = this.$store.state;\r\n        const topicData = topicMarkers.data(state);\r\n        if (topicData !== null) {\r\n          // if (Array.isArray(topicData)) {\r\n          //   for (let marker of topicData) {\r\n          //     console.log('topicData marker:', marker);\r\n          //     // }\r\n          //     // if (path !== null && path !== undefined) {\r\n          //     const latlng = [marker.lat, marker.lng];\r\n          //     const key = marker.key;\r\n          //     const color = marker.color || 'green';\r\n          //     const markerType = 'overlay';\r\n          //     const icon = marker.icon;\r\n          //     const markerObject = {latlng, key, color, markerType, icon};\r\n          //     markers.push(markerObject);\r\n          //   }\r\n          // } else {\r\n            const latlng = [topicData[topicMarkers.lat], topicData[topicMarkers.lng]];\r\n            const key = topicData[topicMarkers.key];\r\n            const color = topicMarkers.color || 'green';\r\n            const markerType = 'overlay';\r\n            const icon = topicMarkers.icon;\r\n            const markerObject = {latlng, key, color, markerType, icon};\r\n            markers.push(markerObject);\r\n          // }\r\n        }\r\n      }\r\n      return markers;\r\n    },\r\n\r\n    reactiveCircleMarkers() {\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // const filteredData = this.filteredData;\r\n      let circleMarkers = [];\r\n\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      // console.log('computed circleMarkers is rerunning, filteredData:', filteredData, 'tableIds:', tableIds);\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        // console.log('tableId:', tableId, 'tableConfig:', tableConfig);\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'circle') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          // console.log('tableId', tableId)\r\n          let latlng;\r\n\r\n          // TODO - get geometry field name from config\r\n          if (item.geometry) {\r\n            const [x, y] = item.geometry.coordinates;\r\n            latlng = [y, x];\r\n          } else if (item.lat) {\r\n            latlng = [item.lat, item.lng]\r\n            // if (item.point_x) {\r\n            //   latlng = [item.point_y, item.point_x];\r\n            // } else if (item.geocode_x) {\r\n            //   latlng = [item.geocode_y, item.geocode_x];\r\n            // }\r\n          }\r\n\r\n          // check for active feature TODO - bind style props to state\r\n          let props = Object.assign({}, style);\r\n          props.latlng = latlng;\r\n          props.featureId = item._featureId;\r\n          props.tableId = tableId;\r\n          circleMarkers.push(props);\r\n        }\r\n      }\r\n\r\n      return circleMarkers;\r\n    },\r\n\r\n    // returns geojson parcels to be rendered on the map along with\r\n    // necessary props.\r\n    geojsonParcels() {\r\n      // console.log('markers-mixin.js geojsonParcels computed is running');\r\n      const features = [];\r\n\r\n      const identifyFeature = this.identifyFeature;\r\n      const activeParcelLayer = this.activeParcelLayer;\r\n\r\n      // TODO - get pwd parcel and dor parcel into the config file\r\n      // pwd parcel\r\n      if (identifyFeature === 'pwd-parcel' && activeParcelLayer === 'pwd' && this.pwdParcel) {\r\n        let props = {};\r\n        props.geojson = this.pwdParcel;\r\n        props.color = 'blue';\r\n        props.fillColor = 'blue';\r\n        props.weight = 2;\r\n        props.opacity = 1;\r\n        props.fillOpacity = 0.3;\r\n        props.key = props.geojson.properties.PARCELID;\r\n        features.push(props);\r\n\r\n      // dor parcel\r\n      } else if (identifyFeature === 'dor-parcel' && activeParcelLayer === 'dor') {\r\n        const color = 'blue';\r\n        const dorParcelFeatures = this.dorParcels.map(dorParcel => {\r\n          let props = {};\r\n          props.geojson = dorParcel;\r\n          props.color = 'blue';\r\n          props.fillColor = 'blue';\r\n          props.weight = 2;\r\n          props.opacity = 1;\r\n          props.fillOpacity = 0.3;\r\n          props.key = dorParcel.properties.OBJECTID;\r\n          return props;\r\n        });\r\n        features.push.apply(features, dorParcelFeatures);\r\n      }\r\n      return features;\r\n    },\r\n\r\n    // returns other geojson from config\r\n    geojsonForTopic() {\r\n      const features = [];\r\n      const topicGeojson = this.activeTopicConfig.geojsonForTopic;\r\n      if (topicGeojson) {\r\n        const state = this.$store.state;\r\n        const topicData = topicGeojson.data(state);\r\n        if (topicData !== null) {\r\n          for (let geojson of topicData) {\r\n            let props = Object.assign({}, topicGeojson.style);\r\n            props.key = geojson[topicGeojson.key];\r\n            props.geojson = geojson\r\n            features.push(props);\r\n          }\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    // these geojson features will have mouseover and mouseout events,\r\n    // for highlighting horizontal table rows\r\n    reactiveGeojsonFeatures() {\r\n      const features = [];\r\n\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'geojson') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n        items.push(tableId);\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          let props = Object.assign({}, style);\r\n\r\n          props.geojson = item.geometry;\r\n          props.key = item.id;\r\n          props.featureId = item._featureId || null;\r\n          props.tableId = items[items.length-1];\r\n          features.push(props);\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    leafletMarkers() {\r\n      const markers = [];\r\n\r\n      markers.push.apply(markers, this.markers);\r\n      markers.push.apply(markers, this.geojsonParcels);\r\n\r\n      return markers;\r\n    },\r\n  },\r\n  methods: {\r\n    getTableFromComps(comps, tableId) {\r\n      const matchingComps = comps.filter(comp => {\r\n        return (\r\n          comp.type === 'horizontal-table' &&\r\n          comp._id == tableId\r\n        );\r\n      }) || [];\r\n      return matchingComps[0];\r\n    },\r\n    getConfigForTable(tableId) {\r\n      const topics = this.$config.topics || [];\r\n\r\n      for (let topic of topics) {\r\n        const comps = topic.components || [];\r\n\r\n        // try outer comps\r\n        const table = this.getTableFromComps(comps, tableId);\r\n\r\n        if (table) return table;\r\n\r\n        // try inner comps\r\n        for (let comp of comps) {\r\n          const options = comp.options || {};\r\n\r\n          const innerComps = options.components || options.tables || [];\r\n\r\n          if (innerComps.length > 0) {\r\n            const innerTable = this.getTableFromComps(innerComps, tableId);\r\n            // console.log('table on 2nd try', innerTable, innerComps);\r\n\r\n            if (innerTable) return innerTable;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    bringMarkerToFront(circleMarker) {\r\n      // put marker on top\r\n      const el = circleMarker._path;\r\n\r\n      // remove from parent\r\n      const group = circleMarker._renderer._rootGroup;\r\n      group.removeChild(el);\r\n\r\n      // append to end (which brings it to the front)\r\n      group.appendChild(el);\r\n    },\r\n    handleMarkerMouseover(e) {\r\n      // console.log('handleMarkerMouseover is starting');\r\n      if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseover actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerClick(e) {\r\n      // console.log('handleMarkerClick is starting');\r\n      if (this.isMobileOrTablet) {\r\n        // console.log('handleMarkerClick actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerMouseout(e) {\r\n      // console.log('handleMarkerMouseout is starting');\r\n      // if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseout actions are running');\r\n        const { target } = e;\r\n        this.$store.commit('setActiveFeature', null);\r\n      // }\r\n    },\r\n    updateMarkerFillColor(marker) {\r\n      // console.log('updateMarkerFillColor, marker:', marker);\r\n      // get next fill color\r\n      const { featureId, tableId } = marker.options.data;\r\n      const nextFillColor = this.fillColorForOverlayMarker(featureId, tableId);\r\n\r\n      // highlight. we're doing this here (non-reactively) because binding the\r\n      // fill color property was not performing well enough.\r\n      const nextStyle = Object.assign({}, marker.options);\r\n      nextStyle.fillColor = nextFillColor;\r\n      marker.setStyle(nextStyle);\r\n    },\r\n  }\r\n});\r\n\n\n//# sourceURL=webpack://mapboard/./src/components/markers-mixin.js?");

/***/ })

}]);