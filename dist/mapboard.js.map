{"version":3,"file":"mapboard.js","sources":["../src/util/is-mobile-device.js","../src/util/merge-deep.js","../src/store.js","../src/util/config-mixin.js","../src/components/TopicPanel.vue","../src/components/markers-mixin.js","../src/components/MapPanel.vue","../src/components/Mapboard.vue","../src/util/unique-id.js","../src/main.js"],"sourcesContent":["export default function () {\r\n  const mobileOrTabletRegexA = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\r\n  const mobileOrTabletRegexB = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\r\n\r\n  // get the user agent and test against both regex patterns\r\n  const userAgent = (navigator.userAgent || navigator.vendor || window.opera || '');\r\n  const isMobileOrTablet = (mobileOrTabletRegexA.test(userAgent) ||\r\n                            mobileOrTabletRegexB.test(userAgent.substr(0,4)));\r\n\r\n  return isMobileOrTablet;\r\n};\r\n","// http://stackoverflow.com/a/37164538/676001\r\n\r\n// helper to verify that an item is an object\r\nexport function isObject(item) {\r\n  return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n};\r\n\r\n// merges n objects, deeply, immutably\r\nexport default function mergeDeep(target, source) {\r\n  let output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target))\r\n          Object.assign(output, { [key]: source[key] });\r\n        else\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n};\r\n","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport isMobileDevice from './util/is-mobile-device';\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch'\r\nimport philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\nconsole.log('in store, philaVueMapping:', philaVueMapping);\r\nimport philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\nconsole.log('in store, philaVueComps:', philaVueComps);\r\n\r\n\r\nimport mergeDeep from './util/merge-deep';\r\n\r\nconst pvdStore = philaVueDatafetch.pvdStore\r\nconst pvmStore = philaVueMapping.pvmStore\r\nconst pvcStore = philaVueComps.pvcStore\r\nconsole.log('pvcStore:', pvcStore);\r\n\r\n// when you load vuex from a script tag this seems to happen automatically\r\nVue.use(Vuex);\r\n\r\n// this grabs horizontal table ids from an array of topic components,\r\n// recursively\r\nfunction getHorizontalTableIdsFromComps(comps = []) {\r\n  // console.log('getHorizontalTableIdsFromComps is running, comps:', comps);\r\n\r\n  let tableIds = [];\r\n\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (innerComps) {\r\n      const innerTableIds = getHorizontalTableIdsFromComps(innerComps);\r\n      tableIds = tableIds.concat(innerTableIds);\r\n      continue;\r\n    }\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table') {\r\n      continue;\r\n    }\r\n\r\n    const tableId = comp._id;\r\n\r\n    tableIds.push(tableId);\r\n  }\r\n\r\n  return tableIds;\r\n}\r\n\r\n// this makes the empty filtered data object given a list of topics.\r\nfunction createFilteredData(config) {\r\n  const topics = config.topics;\r\n  let tableIds = [];\r\n\r\n  for (let topic of topics) {\r\n    const comps = topic.components;\r\n    const compTableIds = getHorizontalTableIdsFromComps(comps);\r\n    tableIds = tableIds.concat(compTableIds);\r\n  }\r\n\r\n  // console.log('createFilteredData is running, tableIds:', tableIds);\r\n\r\n  // const filteredData = tableIds.reduce((acc, tableId) => {\r\n  //   acc[tableId] = [];\r\n  //   return acc;\r\n  // }, {});\r\n\r\n  let filteredData = {}\r\n  for (let index=0; index < tableIds.length; index++) {\r\n    filteredData[tableIds[index]] = [];\r\n  }\r\n\r\n  return filteredData;\r\n}\r\n\r\n// this grabs table group ids from an array of topic components\r\nfunction getHorizontalTableGroupIdsFromComps(comps = []) {\r\n  // console.log('getHorizontalTableGroupIdsFromComps is running, comps:', comps);\r\n  let tableGroupId;\r\n\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // console.log('getHorizontalTableGroupIdsFromComps, comp:', comp);\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (!innerComps) {\r\n      continue;\r\n    }\r\n\r\n    // console.log('getTableGroupIdsFromComps, comp.type:', comp.type);\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table-group') {\r\n      continue;\r\n    }\r\n\r\n    tableGroupId = comp._id;\r\n    // console.log('getHorizontalTableGroupIdsFromComps, tableGroupId:', tableGroupId);\r\n  }\r\n\r\n  return tableGroupId;\r\n}\r\n\r\n// this makes the empty horizontalTableGroups object given a list of topics.\r\nfunction createHorizontalTableGroups(config) {\r\n  const topics = config.topics;\r\n\r\n  let tableGroupIds = [];\r\n\r\n  for (let topic of topics) {\r\n    const comps = topic.components;\r\n    const compTableGroupId = getHorizontalTableGroupIdsFromComps(comps);\r\n    if (compTableGroupId) tableGroupIds.push(compTableGroupId);\r\n  }\r\n  // console.log('createHorizontalTableGroups is running, config:', config, 'tableGroupIds:', tableGroupIds);\r\n\r\n  let horizontalTableGroups = {};\r\n\r\n  for (let tableGroupId of tableGroupIds) {\r\n    horizontalTableGroups[tableGroupId] = {\r\n      activeTable: null,\r\n      activeTableId: null\r\n    };\r\n  }\r\n  return horizontalTableGroups;\r\n}\r\n\r\nfunction createStore(config) {\r\n  const sources = pvdStore.createSources(config);\r\n  const parcels = pvdStore.createParcels(config);\r\n\r\n  const initialState = {\r\n    isMobileOrTablet: isMobileDevice(),\r\n    fullScreen: {\r\n      mapOnly: false,\r\n      topicsOnly: false,\r\n    },\r\n    fullScreenMapEnabled: false,\r\n    fullScreenTopicsEnabled: false,\r\n    candidates: [],\r\n    addressEntered: null,\r\n    parcels,\r\n    sources,\r\n    horizontalTables: {\r\n      // table id => filtered rows\r\n      filteredData: createFilteredData(config),\r\n    },\r\n    horizontalTableGroups: createHorizontalTableGroups(config),\r\n    activeFeature: {\r\n      featureId: null,\r\n      tableId: null\r\n    },\r\n    appData: {\r\n      propertyBalance: 0,\r\n    },\r\n  };\r\n\r\n  const mb = {\r\n    state: initialState,\r\n    getters: {\r\n      visibleTableIds(state) {\r\n        // get active topic\r\n        const activeTopic = state.activeTopic;\r\n\r\n        if (!activeTopic) {\r\n          return [];\r\n        }\r\n\r\n        // get horizontal table ids for that topic\r\n        const activeTopicConfig = (config.topics.filter(topic => topic.key === activeTopic) || [])[0];\r\n        const comps = activeTopicConfig.components;\r\n\r\n        const compTableGroup = getHorizontalTableGroupIdsFromComps(comps);\r\n        if (compTableGroup) {\r\n          // even though there is only 1 value, it has to be in array form in the state\r\n          const array = [];\r\n          array.push(state.horizontalTableGroups[compTableGroup].activeTableId);\r\n          return array;\r\n        } else {\r\n          const compTables = getHorizontalTableIdsFromComps(comps);\r\n          return compTables;\r\n        }\r\n      }\r\n    },\r\n    mutations: {\r\n\r\n      setIsMobileOrTablet(state, payload) {\r\n        state.isMobileOrTablet = payload;\r\n      },\r\n      setMapOnly(state, payload) {\r\n        state.fullScreen.mapOnly = payload;\r\n      },\r\n      setTopicsOnly(state, payload) {\r\n        state.fullScreen.topicsOnly = payload;\r\n      },\r\n      setFullScreenMapEnabled(state, payload) {\r\n        state.fullScreenMapEnabled = payload;\r\n      },\r\n      setFullScreenTopicsEnabled(state, payload) {\r\n        state.fullScreenTopicsEnabled = payload;\r\n      },\r\n      setLocation(state, payload) {\r\n        state.map.location.lat = payload.lat;\r\n        state.map.location.lng = payload.lng;\r\n      },\r\n      setWatchPositionOn(state, payload) {\r\n        state.map.watchPositionOn = payload;\r\n      },\r\n\r\n      setHorizontalTableGroupActiveTable(state, payload) {\r\n        // console.log('setHorizontalTableGroupActiveTable, payload:', payload);\r\n        state.horizontalTableGroups[payload.tableGroupId].activeTableId = payload.activeTableId;\r\n        state.horizontalTableGroups[payload.tableGroupId].activeTable = payload.activeTable;\r\n      },\r\n      setHorizontalTableFilteredData(state, payload) {\r\n        const { tableId, data } = payload;\r\n\r\n        // check for not-null table id\r\n        if (!tableId) return;\r\n\r\n        state.horizontalTables.filteredData[tableId] = data;\r\n      },\r\n\r\n      setMapFilters(state, payload) {\r\n        state.map.filters = payload;\r\n      },\r\n\r\n      setMap(state, payload) {\r\n        state.map.map = payload.map;\r\n      },\r\n\r\n\r\n      setMapBounds(state, payload) {\r\n        // const { northEast, southWest } = payload || {};\r\n        // state.map.bounds.northEast = northEast;\r\n        // state.map.bounds.southWest = southWest;\r\n        state.map.bounds = payload;\r\n      },\r\n      setMapBoundsBasedOnShape(state, payload) {\r\n        state.map.boundsBasedOnShape = payload\r\n      },\r\n      setActiveParcel(state, payload) {\r\n        // console.log('store setActiveParcel:', payload)\r\n        const { parcelLayer, activeParcel, activeAddress, activeMapreg } = payload || {};\r\n        state.parcels[parcelLayer].activeParcel = activeParcel;\r\n        state.parcels[parcelLayer].activeAddress = activeAddress;\r\n        state.parcels[parcelLayer].activeMapreg = activeMapreg;\r\n      },\r\n\r\n      setActiveFeature(state, payload) {\r\n        // console.log('store setActiveFeature is running');\r\n        const { featureId, tableId } = payload || {};\r\n        const nextActiveFeature = { featureId, tableId };\r\n        state.activeFeature = nextActiveFeature;\r\n      },\r\n\r\n      setImageOverlay(state, payload) {\r\n        state.map.imageOverlay = payload;\r\n      },\r\n      setImageOverlayOpacity(state, payload) {\r\n        state.map.imageOverlayOpacity = payload;\r\n      },\r\n      setCandidates(state, payload) {\r\n        state.candidates = payload;\r\n      },\r\n      setAddressEntered(state, payload) {\r\n        state.addressEntered = payload;\r\n      },\r\n\r\n      setPropertyBalance(state, payload) {\r\n        state.appData.propertyBalance = payload;\r\n      },\r\n    }\r\n  }\r\n\r\n  let mergeStore = mergeDeep(mb, pvdStore.store);\r\n  mergeStore = mergeDeep(mergeStore, pvmStore);\r\n  mergeStore = mergeDeep(mergeStore, pvcStore);\r\n\r\n  // reset the map center and zoom based on the config\r\n  mergeStore.state.map.center = config.map.center;\r\n  mergeStore.state.map.zoom = config.map.zoom;\r\n  mergeStore.state.pictometry.map.center = config.map.center;\r\n  mergeStore.state.pictometry.map.zoom = config.map.zoom;\r\n  // mergeStore.state.pictometry.enabled = config.pictometry.enabled;\r\n  // mergeStore.state.cyclomedia.enabled = config.cyclomedia.enabled;\r\n\r\n  console.log('mergeStore:', mergeStore);\r\n\r\n  // TODO standardize how payloads are passed around/handled\r\n  return new Vuex.Store({\r\n    state: mergeStore.state,\r\n    getters: mergeStore.getters,\r\n    mutations: mergeStore.mutations\r\n  });\r\n}\r\n\r\nexport default createStore;\r\n","// shout out to airyland\r\n// https://github.com/airyland/vue-config/blob/master/index.js\r\n\r\nexport default (Vue, config) => {\r\n  Vue.mixin({\r\n    created() {\r\n      this.$config = config;\r\n    }\r\n  });\r\n};\r\n","<template>\r\n  <div id=\"topic-panel-container\"\r\n       :class=\"'mb-panel-topics cell ' + this.topicPanelContainerClass\"\r\n  >\r\n    <full-screen-topics-toggle-tab v-once\r\n                                   v-if=\"!this.fullScreenTopicsOnly\"\r\n    />\r\n\r\n    <!-- address header - it only shows if the app is set to \"fullScreenTopicsOnly\" or there is a geocode -->\r\n    <div class=\"address-header cell small-24 medium-24\"\r\n         v-if=\"this.shouldShowAddressHeader\"\r\n    >\r\n      <div :class=\"'address-container columns ' +  this.addressContainerClass\"\r\n           :style=\"this.addressContainerStyle\"\r\n      >\r\n\r\n        <h1 class=\"address-header-line-1\">\r\n        <!-- there is no map marker if there is no map -->\r\n          <i class=\"fa fa-map-marker-alt\"\r\n             v-if=\"!this.fullScreenTopicsOnly\"\r\n          ></i>\r\n          {{ address }}\r\n        </h1>\r\n        <div class=\"address-header-line-2\"\r\n             v-show=\"!this.geocode\"\r\n        >\r\n\r\n        </div>\r\n        <div class=\"address-header-line-2\"\r\n             v-show=\"this.geocode\"\r\n        >\r\n          PHILADELPHIA, PA {{ zipCode }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"address-input-container columns small-24 medium-12 large-12\"\r\n           :style=\"this.addressInputContainerStyle\"\r\n           v-if=\"this.fullScreenTopicsEnabled && !this.stacked || this.fullScreenTopicsOnly\"\r\n      >\r\n        <address-input :widthFromConfig=\"this.addressInputWidth\"\r\n                       :placeholder=\"this.addressInputPlaceholder\"\r\n        >\r\n          <address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\r\n                                  slot=\"address-candidates-slot\"\r\n                                  :widthFromConfig=\"this.addressInputWidth\"\r\n          />\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- before search -->\r\n    <div v-if=\"shouldShowGreeting\"\r\n         class=\"topics-container cell medium-cell-block-y\"\r\n         :style=\"topicsContainerStyle\"\r\n    >\r\n      <greeting v-show=\"shouldShowGreeting\" />\r\n    </div>\r\n\r\n    <!-- after search -->\r\n    <div v-if=\"!shouldShowGreeting\" class=\"topic-panel-content\">\r\n      <div\r\n           class=\"topics-container cell medium-cell-block-y\"\r\n           :style=\"topicsContainerStyle\"\r\n      >\r\n        <topic-component-group :topic-components=\"this.$config.components\" />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\n  const Topic = philaVueComps.Topic;\r\n  const TopicComponentGroup = philaVueComps.TopicComponentGroup;\r\n  const Greeting = philaVueComps.Greeting;\r\n  const AddressInput = philaVueComps.AddressInput;\r\n  const AddressCandidateList = philaVueComps.AddressCandidateList;\r\n  const FullScreenTopicsToggleTab = philaVueComps.FullScreenTopicsToggleTab;\r\n\r\n  export default {\r\n    components: {\r\n      Greeting,\r\n      TopicComponentGroup,\r\n      Topic,\r\n      AddressInput,\r\n      AddressCandidateList,\r\n      FullScreenTopicsToggleTab,\r\n    },\r\n    data() {\r\n      const data = {\r\n        topicsContainerStyle: {\r\n          'overflow-y': 'auto',\r\n          'height': '100px',\r\n          'min-height': '100px',\r\n        },\r\n        addressContainerStyle: {\r\n          'height': '100%',\r\n          'align-items': 'flex-start',\r\n          'padding-left': '20px',\r\n          'padding-top': '20px',\r\n          'padding-bottom': '20px',\r\n        },\r\n        addressInputContainerStyle: {\r\n          'height': '100%',\r\n          'align-items': 'center',\r\n          'padding-top': '10px',\r\n          'padding-bottom': '10px',\r\n        },\r\n        stacked: false,\r\n      };\r\n      return data;\r\n    },\r\n    mounted() {\r\n      window.addEventListener('click', this.closeAddressCandidateList);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize(25);\r\n    },\r\n    watch: {\r\n      geocodeStatus() {\r\n        this.handleWindowResize();\r\n      }\r\n    },\r\n    computed: {\r\n      shouldShowAddressHeader() {\r\n        if (this.fullScreenTopicsOnly || this.shouldShowGreeting === false) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      inputAlign() {\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.position) {\r\n            const position = this.$config.addressInput.position;\r\n            switch(position) {\r\n              case 'left':\r\n              return 'flex-start';\r\n              case 'right':\r\n              return 'flex-end';\r\n              case 'center':\r\n              return 'center';\r\n            }\r\n          } else {\r\n            return 'flex-start';\r\n          }\r\n        } else {\r\n          return 'flex-start';\r\n        }\r\n      },\r\n      addressInputWidth() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.width;\r\n        } else {\r\n          return 415;\r\n        }\r\n      },\r\n      addressInputPlaceholder() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.placeholder;\r\n        } else {\r\n          return null\r\n        }\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      fullScreenTopicsOnly() {\r\n        return this.$store.state.fullScreen.topicsOnly;\r\n      },\r\n      topicPanelContainerClass() {\r\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\r\n          return 'medium-24 small-order-2 medium-order-1';\r\n        } else if (this.fullScreenMapEnabled) {\r\n          return 'medium-1 small-order-2 medium-order-1';\r\n        } else {\r\n          return 'medium-12 small-order-2 medium-order-1';\r\n        }\r\n      },\r\n      addressContainerClass() {\r\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\r\n          return 'small-24 medium-12 large-12';\r\n        } else {\r\n          return 'small-24';\r\n        }\r\n      },\r\n      geocode() {\r\n        return this.$store.state.geocode.data;\r\n      },\r\n      geocodeStatus() {\r\n        return this.$store.state.geocode.status;\r\n      },\r\n      dorParcels() {\r\n        return this.$store.state.parcels.dor.data.length > 0;\r\n      },\r\n      shouldShowGreeting() {\r\n        return !(this.geocode || this.dorParcels);\r\n      },\r\n      // this returns the address shown in the address header\r\n      address() {\r\n        const geocode = this.geocode;\r\n        const dorParcels = this.$store.state.parcels.dor.data;\r\n        const activeDorAddress = this.$store.state.parcels.dor.activeAddress;\r\n        let address;\r\n        if (this.$config.defaultAddressTextPlaceholder) {\r\n          address = this.$config.defaultAddressTextPlaceholder;\r\n        }\r\n\r\n        if (geocode) {\r\n          // TODO make this not ais-specific\r\n          // REVIEW what's the difference between these two?\r\n          const addressA = geocode.properties.street_address;\r\n          const addressB = geocode.street_address;\r\n\r\n          address = addressA || addressB;\r\n\r\n        // a DOR address might be found even if there is no geocode\r\n        } else if (activeDorAddress) {\r\n          address = activeDorAddress;\r\n        }\r\n\r\n        return address;\r\n      },\r\n      zipCode() {\r\n        const geocode = this.geocode;\r\n        if (!geocode) return null;\r\n        const zipCode = geocode.properties.zip_code;\r\n        const zip4 = geocode.properties.zip_4;\r\n        const parts = [zipCode];\r\n        if (zip4) parts.push(zip4);\r\n        return parts.join('-');\r\n      },\r\n    },\r\n    methods: {\r\n      closeAddressCandidateList() {\r\n        this.$store.state.shouldShowAddressCandidateList = false;\r\n      },\r\n      handleWindowResize(pixelAdjustment) {\r\n        // this is called to run when:\r\n        // 1 - TopicPanel.vue mounted\r\n        // 2 - geocodeStatus change\r\n        // 3 - any resizing of the window\r\n\r\n        const windowHeight = $(window).height();\r\n        // const siteHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('site-header')[0]).getPropertyValue('height').replace('px', ''));\r\n        const siteHeaderHeightNum = parseInt(document.getElementsByClassName('site-header')[0].getBoundingClientRect().height);\r\n        // const appFooterHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('app-footer')[0]).getPropertyValue('height').replace('px', ''));\r\n        const appFooterHeightNum = parseInt(document.getElementsByClassName('app-footer')[0].getBoundingClientRect().height);\r\n        let topicsHeight;\r\n\r\n        if (this.shouldShowAddressHeader) {\r\n          if (document.getElementsByClassName('address-header')[0]) {\r\n            // const addressHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('address-header')[0]).getPropertyValue('height').replace('px', ''));\r\n            const addressHeaderHeightNum = parseInt(document.getElementsByClassName('address-header')[0].getBoundingClientRect().height);\r\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - addressHeaderHeightNum;\r\n            // console.log('handleWindowResize shouldShowAddressHeader and it was found, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n            if (typeof pixelAdjustment === 'number') {\r\n              // console.log('handleWindowResize if pixelAdjustment is true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight, 'pixelAdjustment:', pixelAdjustment);\r\n              topicsHeight = topicsHeight - pixelAdjustment;\r\n            }\r\n          } else {\r\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - 103;\r\n            // console.log('handleWindowResize shouldShowAddressHeader but it was not found so it is using the hardcoded 103, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n          }\r\n        } else {\r\n          topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum;\r\n          // console.log('handleWindowResize shouldShowAddressHeader is NOT true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n        }\r\n\r\n        if ($(window).width() >= 750) {\r\n          this.stacked = false;\r\n          this.addressContainerStyle = {\r\n            'height': '100%',\r\n            'align-items': 'flex-start',\r\n            'padding-left': '20px',\r\n            'padding-top': '20px',\r\n            'padding-bottom': '20px',\r\n          }\r\n          this.addressInputContainerStyle = {\r\n            'height': '100%',\r\n            'align-items': this.inputAlign,\r\n            'padding-top': '30px',\r\n            'padding-bottom': '30px',\r\n          }\r\n          this.topicsContainerStyle.height = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['overflow-y'] = 'auto';\r\n\r\n        } else {\r\n          this.stacked = true;\r\n          this.addressContainerStyle = {\r\n            'height': 'auto',\r\n            'align-items': 'center',\r\n            'padding-left': '0px',\r\n            'padding-top': '10px',\r\n            'padding-bottom': '10px',\r\n          }\r\n          this.addressInputContainerStyle = {\r\n            'height': 'auto',\r\n            'align-items': 'center',\r\n            'padding-top': '10px',\r\n            'padding-bottom': '10px',\r\n          }\r\n          this.topicsContainerStyle.height = 'auto';\r\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['overflow-y'] = 'hidden';\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .mb-panel-topics {\r\n    position: relative;\r\n  }\r\n\r\n  .address-header {\r\n    background: #daedfe;\r\n    color: #0f4d90;\r\n\r\n    /*this keeps the box shadow over the scrollable part of the panel*/\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    -webkit-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    -moz-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    margin-bottom: -5px !important;\r\n    display: inline-block;\r\n  }\r\n\r\n  .address-header-line-1 {\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    padding: 0px !important;\r\n  }\r\n\r\n  .address-header-line-2 {\r\n    padding: 0px;\r\n  }\r\n\r\n  .address-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .address-input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .topics-container {\r\n    padding: 26px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n</style>\r\n","export default {\r\n  watch: {\r\n    activeFeature(nextActiveFeature, prevActiveFeature) {\r\n      // console.log('WATCH active feature', prevActiveFeature, '=>', nextActiveFeature);\r\n\r\n      const layerMap = this.$store.state.map.map._layers;\r\n      const layers = Object.values(layerMap);\r\n\r\n      let updateFeaturePrev,\r\n          updateFeatureNext,\r\n          tableId,\r\n          featureIdPrev,\r\n          featureIdNext,\r\n          matchingLayerNext,\r\n          matchingLayerPrev;\r\n\r\n      if (prevActiveFeature && prevActiveFeature.tableId && prevActiveFeature.featureId) {\r\n        updateFeaturePrev = prevActiveFeature;\r\n        tableId = updateFeaturePrev.tableId\r\n        featureIdPrev = updateFeaturePrev.featureId;\r\n        matchingLayerPrev = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdPrev && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerPrev);\r\n      }\r\n\r\n      if (nextActiveFeature && nextActiveFeature.tableId && nextActiveFeature.featureId) {\r\n        updateFeatureNext = nextActiveFeature;\r\n        tableId = updateFeatureNext.tableId\r\n        featureIdNext = updateFeatureNext.featureId;\r\n        matchingLayerNext = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdNext && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerNext);\r\n        this.bringMarkerToFront(matchingLayerNext);\r\n      }\r\n\r\n    },\r\n  },\r\n  computed: {\r\n    locationMarker() {\r\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\r\n      const marker = {\r\n        latlng: latlngArray,\r\n        radius: 6,\r\n        fillColor: '#ff3f3f',\r\n        color: '#ff0000',\r\n        weight: 1,\r\n        opacity: 1,\r\n        fillOpacity: 1.0\r\n      }\r\n      return marker;\r\n    },\r\n    // returns map markers as simple object with a geometry property, key,\r\n    // and optional properties for symbology\r\n    markers() {\r\n      const markers = [];\r\n\r\n      // geocoded address marker\r\n      const geocodeGeom = this.geocodeGeom;\r\n      if (this.identifyFeature === 'address-marker' && geocodeGeom) {\r\n        const latlng = [...geocodeGeom.coordinates].reverse();\r\n        const key = this.geocodeResult.properties.street_address;\r\n        const color = '#2176d2';\r\n        const markerType = 'geocode';\r\n        const addressMarker = {latlng, key, color, markerType};\r\n        markers.push(addressMarker);\r\n      }\r\n\r\n      // marker for topic from config\r\n      const topicMarker = this.activeTopicConfig.marker;\r\n      // console.log('topicMarker', topicMarker);\r\n      if (topicMarker) {\r\n        const markerPath = topicMarker['path'];\r\n        let path = this.$store.state.sources;\r\n        for (let level of markerPath) {\r\n          console.log('level:', level, 'path:', path);\r\n          if (path !== null && path !== undefined) {\r\n            path = path[level];\r\n          }\r\n        }\r\n        if (path !== null && path !== undefined) {\r\n          const latlng = [path[topicMarker.lat], path[topicMarker.lng]];\r\n          const key = path[topicMarker.key];\r\n          const color = topicMarker.color || 'green';\r\n          const markerType = 'overlay';\r\n          const markerObject = {latlng, key, color, markerType};\r\n          markers.push(markerObject);\r\n        }\r\n      }\r\n\r\n      return markers;\r\n    },\r\n    circleMarkers() {\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // const filteredData = this.filteredData;\r\n      let circleMarkers = [];\r\n\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      // console.log('computed circleMarkers is rerunning, filteredData:', filteredData, 'tableIds:', tableIds);\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        // console.log('tableId:', tableId, 'tableConfig:', tableConfig);\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'circle') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          // console.log('tableId', tableId)\r\n          let latlng;\r\n\r\n          // TODO - get geometry field name from config\r\n          if (item.geometry) {\r\n            const [x, y] = item.geometry.coordinates;\r\n            latlng = [y, x];\r\n          } else if (item.lat) {\r\n            latlng = [item.lat, item.lng]\r\n            // if (item.point_x) {\r\n            //   latlng = [item.point_y, item.point_x];\r\n            // } else if (item.geocode_x) {\r\n            //   latlng = [item.geocode_y, item.geocode_x];\r\n            // }\r\n          }\r\n\r\n          // check for active feature TODO - bind style props to state\r\n          let props = Object.assign({}, style);\r\n          props.latlng = latlng;\r\n          props.featureId = item._featureId;\r\n          props.tableId = tableId;\r\n          circleMarkers.push(props);\r\n        }\r\n      }\r\n\r\n      return circleMarkers;\r\n    },\r\n\r\n    // returns all geojson features to be rendered on the map along with\r\n    // necessary props.\r\n    geojsonFeatures() {\r\n      const features = [];\r\n\r\n      const identifyFeature = this.identifyFeature;\r\n      const activeParcelLayer = this.activeParcelLayer;\r\n\r\n      // TODO - get pwd parcel and dor parcel into the config file\r\n      // pwd parcel\r\n      if (identifyFeature === 'pwd-parcel' && activeParcelLayer === 'pwd' && this.pwdParcel) {\r\n        let props = {};\r\n        props.geojson = this.pwdParcel;\r\n        props.color = 'blue';\r\n        props.fillColor = 'blue';\r\n        props.weight = 2;\r\n        props.opacity = 1;\r\n        props.fillOpacity = 0.3;\r\n        props.key = props.geojson.properties.PARCELID;\r\n        features.push(props);\r\n\r\n      // dor parcel\r\n      } else if (identifyFeature === 'dor-parcel' && activeParcelLayer === 'dor') {\r\n        const color = 'blue';\r\n        const dorParcelFeatures = this.dorParcels.map(dorParcel => {\r\n          let props = {};\r\n          props.geojson = dorParcel;\r\n          props.color = 'blue';\r\n          props.fillColor = 'blue';\r\n          props.weight = 2;\r\n          props.opacity = 1;\r\n          props.fillOpacity = 0.3;\r\n          props.key = dorParcel.properties.OBJECTID;\r\n          return props;\r\n        });\r\n        features.push.apply(features, dorParcelFeatures);\r\n      }\r\n\r\n      // other geojson from config\r\n      const topicGeojson = this.activeTopicConfig.geojson;\r\n      if (topicGeojson) {\r\n        console.log('topicGeojson exists:', topicGeojson);\r\n        const geojsonPath = topicGeojson['path'];\r\n        let path = this.$store.state.sources;\r\n        for (let level of geojsonPath) {\r\n          if (path !== null) {\r\n            path = path[level];\r\n          }\r\n        }\r\n        if (path !== null) {\r\n          console.log('path:', path);\r\n          for (let geojson of path) {\r\n            let props = Object.assign({}, topicGeojson.style);\r\n            props.key = geojson[topicGeojson.key];\r\n            props.geojson = geojson\r\n            features.push(props);\r\n          }\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    // these geojson features will have mouseover and mouseout events,\r\n    // for highlighting horizontal table rows\r\n    reactiveGeojsonFeatures() {\r\n      const features = [];\r\n\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'geojson') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n        items.push(tableId);\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          let props = Object.assign({}, style);\r\n\r\n          props.geojson = item.geometry;\r\n          props.key = item.id;\r\n          props.featureId = item._featureId || null;\r\n          props.tableId = items[items.length-1];\r\n          features.push(props);\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    leafletMarkers() {\r\n      const markers = [];\r\n\r\n      markers.push.apply(markers, this.markers);\r\n      markers.push.apply(markers, this.geojsonFeatures);\r\n\r\n      return markers;\r\n    },\r\n  },\r\n  methods: {\r\n    getTableFromComps(comps, tableId) {\r\n      const matchingComps = comps.filter(comp => {\r\n        return (\r\n          comp.type === 'horizontal-table' &&\r\n          comp._id == tableId\r\n        );\r\n      }) || [];\r\n      return matchingComps[0];\r\n    },\r\n    getConfigForTable(tableId) {\r\n      const topics = this.$config.topics || [];\r\n\r\n      for (let topic of topics) {\r\n        const comps = topic.components || [];\r\n\r\n        // try outer comps\r\n        const table = this.getTableFromComps(comps, tableId);\r\n\r\n        if (table) return table;\r\n\r\n        // try inner comps\r\n        for (let comp of comps) {\r\n          const options = comp.options || {};\r\n\r\n          const innerComps = options.components || options.tables || [];\r\n\r\n          if (innerComps.length > 0) {\r\n            const innerTable = this.getTableFromComps(innerComps, tableId);\r\n            // console.log('table on 2nd try', innerTable, innerComps);\r\n\r\n            if (innerTable) return innerTable;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    bringMarkerToFront(circleMarker) {\r\n      // put marker on top\r\n      const el = circleMarker._path;\r\n\r\n      // remove from parent\r\n      const group = circleMarker._renderer._rootGroup;\r\n      group.removeChild(el);\r\n\r\n      // append to end (which brings it to the front)\r\n      group.appendChild(el);\r\n    },\r\n    handleMarkerMouseover(e) {\r\n      // console.log('handleMarkerMouseover is starting');\r\n      if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseover actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerClick(e) {\r\n      // console.log('handleMarkerClick is starting');\r\n      if (this.isMobileOrTablet) {\r\n        // console.log('handleMarkerClick actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerMouseout(e) {\r\n      // console.log('handleMarkerMouseout is starting');\r\n      // if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseout actions are running');\r\n        const { target } = e;\r\n        this.$store.commit('setActiveFeature', null);\r\n      // }\r\n    },\r\n    updateMarkerFillColor(marker) {\r\n      // console.log('updateMarkerFillColor, marker:', marker);\r\n      // get next fill color\r\n      const { featureId, tableId } = marker.options.data;\r\n      const nextFillColor = this.fillColorForCircleMarker(featureId, tableId);\r\n\r\n      // highlight. we're doing this here (non-reactively) because binding the\r\n      // fill color property was not performing well enough.\r\n      const nextStyle = Object.assign({}, marker.options);\r\n      nextStyle.fillColor = nextFillColor;\r\n      marker.setStyle(nextStyle);\r\n    },\r\n  }\r\n};\r\n","<template>\r\n  <div id=\"map-panel-container\"\r\n       :class=\"this.mapPanelContainerClass\"\r\n  >\r\n    <full-screen-map-toggle-tab v-once />\r\n    <map_ :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\"\r\n          id=\"map-tag\"\r\n          :center=\"this.$store.state.map.center\"\r\n          :zoom=\"this.$store.state.map.zoom\"\r\n          @l-click=\"handleMapClick\"\r\n          @l-moveend=\"handleMapMove\"\r\n          zoom-control-position=\"bottomright\"\r\n          :min-zoom=\"this.$config.map.minZoom\"\r\n          :max-zoom=\"this.$config.map.maxZoom\"\r\n    >\r\n    <!-- :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\" -->\r\n      <!-- loading mask -->\r\n      <div v-show=\"isGeocoding\" class=\"mb-map-loading-mask\">\r\n        <div class=\"mb-map-loading-mask-inner\">\r\n          <i class=\"fa fa-spinner fa-4x spin\"></i>\r\n          <h1>Finding address...</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- basemaps -->\r\n      <esri-tiled-map-layer v-for=\"(basemap, key) in this.$config.map.basemaps\"\r\n                            v-if=\"activeBasemap === key\"\r\n                            :key=\"key\"\r\n                            :url=\"basemap.url\"\r\n                            :max-zoom=\"basemap.maxZoom\"\r\n                            :attribution=\"basemap.attribution\"\r\n      />\r\n\r\n      <!-- basemap labels and parcels outlines -->\r\n      <esri-tiled-map-layer v-for=\"(tiledLayer, key) in this.$config.map.tiledLayers\"\r\n                            v-if=\"tiledLayers.includes(key)\"\r\n                            :key=\"key\"\r\n                            :url=\"tiledLayer.url\"\r\n                            :zIndex=\"tiledLayer.zIndex\"\r\n                            :attribution=\"tiledLayer.attribution\"\r\n      />\r\n\r\n      <esri-tiled-overlay v-for=\"(tiledLayer, key) in this.$config.map.tiledOverlays\"\r\n                          v-if=\"activeTiledOverlays.includes(key)\"\r\n                          :key=\"key\"\r\n                          :url=\"tiledLayer.url\"\r\n                          :zIndex=\"tiledLayer.zIndex\"\r\n                          :opacity=\"tiledLayer.opacity\"\r\n      />\r\n\r\n      <esri-dynamic-map-layer v-for=\"(dynamicLayer, key) in this.$config.map.dynamicMapLayers\"\r\n                              v-if=\"activeDynamicMaps.includes(key)\"\r\n                              :key=\"key\"\r\n                              :url=\"dynamicLayer.url\"\r\n                              :attribution=\"dynamicLayer.attribution\"\r\n                              :transparent=\"true\"\r\n                              :opacity=\"dynamicLayer.opacity\"\r\n      />\r\n\r\n      <!-- dorParcels, pwdParcels, vacantLand, vacantBuilding -->\r\n      <esri-feature-layer v-for=\"(featureLayer, key) in this.$config.map.featureLayers\"\r\n                          v-if=\"shouldShowFeatureLayer(key, featureLayer.minZoom)\"\r\n                          :key=\"key\"\r\n                          :layerName=\"key\"\r\n                          :url=\"featureLayer.url\"\r\n                          :color=\"featureLayer.color\"\r\n                          :fillColor=\"featureLayer.color\"\r\n                          :fillOpacity=\"featureLayer.fillOpacity\"\r\n                          :weight=\"featureLayer.weight\"\r\n                          :style_=\"featureLayer.style\"\r\n                          :minZoom=\"featureLayer.minZoom\"\r\n                          :maxZoom=\"featureLayer.maxZoom\"\r\n                          :zIndex=\"featureLayer.zIndex\"\r\n                          :markerType=\"featureLayer.markerType\"\r\n                          :radius=\"featureLayer.radius\"\r\n                          :interactive=\"featureLayer.interactive\"\r\n      />\r\n\r\n      <!-- regmaps -->\r\n      <esri-dynamic-map-layer v-for=\"(item, key) in this.imageOverlayItems\"\r\n                              v-if=\"shouldShowImageOverlay(item.properties.RECMAP)\"\r\n                              :key=\"key\"\r\n                              :url=\"'//gis.phila.gov/arcgis/rest/services/Atlas/RegMaps/MapServer'\"\r\n                              :layers=\"[0]\"\r\n                              :layerDefs=\"'0:NAME=\\'g' + item.properties.RECMAP.toLowerCase() + '.tif\\''\"\r\n                              :transparent=\"true\"\r\n                              :opacity=\"0.5\"\r\n      />\r\n      <!-- :url=\"'//gis.phila.gov/arcgis/rest/services/DOR_ParcelExplorer/rtt_basemap/MapServer/'\" -->\r\n      <!-- :url=\"this.imageOverlayInfo.url\"\r\n      :opacity=\"this.imageOverlayInfo.opacity\" -->\r\n\r\n      <!-- address marker -->\r\n      <!-- REVIEW why does this need a key? it's not a list... -->\r\n      <!-- <vector-marker v-if=\"identifyFeature === 'address-marker' && geocodeGeom\"\r\n                    :latlng=\"[...geocodeGeom.coordinates].reverse()\"\r\n                    :key=\"streetAddress\"\r\n      /> -->\r\n\r\n      <!-- NEW METHOD: try rendering markers generically based on marker type -->\r\n      <!-- vector markers -->\r\n      <vector-marker v-for=\"(marker, index) in markers\"\r\n                     :latlng=\"marker.latlng\"\r\n                     :key=\"marker.key\"\r\n                     :markerColor=\"marker.color\"\r\n      />\r\n\r\n      <!-- marker using a png and ablility to rotate it -->\r\n      <png-marker v-if=\"this.cyclomediaActive\"\r\n                  :icon=\"'images/camera.png'\"\r\n                  :latlng=\"cycloLatlng\"\r\n                  :rotationAngle=\"cycloRotationAngle\"\r\n      />\r\n\r\n      <!-- marker using custom code extending icons - https://github.com/iatkin/leaflet-svgicon -->\r\n      <svg-view-cone-marker v-if=\"this.cyclomediaActive\"\r\n                            :latlng=\"cycloLatlng\"\r\n                            :rotationAngle=\"cycloRotationAngle\"\r\n                            :hFov=\"cycloHFov\"\r\n      />\r\n\r\n\r\n      <!-- non-reactive geojson features -->\r\n      <geojson v-for=\"geojsonFeature in geojsonFeatures\"\r\n               v-if=\"shouldShowGeojson(geojsonFeature.key)\"\r\n               :geojson=\"geojsonFeature.geojson\"\r\n               :fillColor=\"geojsonFeature.fillColor\"\r\n               :color=\"geojsonFeature.color\"\r\n               :weight=\"geojsonFeature.weight\"\r\n               :opacity=\"geojsonFeature.opacity\"\r\n               :fillOpacity=\"geojsonFeature.fillOpacity\"\r\n               :key=\"geojsonFeature.key\"\r\n               :data=\"{\r\n                 featureId: geojsonFeature.featureId,\r\n                 tableId: geojsonFeature.tableId\r\n               }\"\r\n       />\r\n\r\n       <!-- reactive geojson features -->\r\n       <geojson v-for=\"geojsonFeature in reactiveGeojsonFeatures\"\r\n                v-if=\"shouldShowGeojson(geojsonFeature.key)\"\r\n                @l-mouseover=\"handleMarkerMouseover\"\r\n                @l-click=\"handleMarkerClick\"\r\n                @l-mouseout=\"handleMarkerMouseout\"\r\n                :geojson=\"geojsonFeature.geojson\"\r\n                :fillColor=\"geojsonFeature.fillColor\"\r\n                :color=\"geojsonFeature.color\"\r\n                :weight=\"geojsonFeature.weight\"\r\n                :opacity=\"geojsonFeature.opacity\"\r\n                :fillOpacity=\"geojsonFeature.fillOpacity\"\r\n                :key=\"geojsonFeature.key\"\r\n                :data=\"{\r\n                  featureId: geojsonFeature.featureId,\r\n                  tableId: geojsonFeature.tableId\r\n                }\"\r\n        />\r\n\r\n       <!-- location marker -->\r\n       <circle-marker v-if=\"this.$store.state.map.location.lat != null\"\r\n                      :latlng=\"this.locationMarker.latlng\"\r\n                      :radius=\"this.locationMarker.radius\"\r\n                      :fillColor=\"this.locationMarker.fillColor\"\r\n                      :color=\"this.locationMarker.color\"\r\n                      :weight=\"this.locationMarker.weight\"\r\n                      :opacity=\"this.locationMarker.opacity\"\r\n                      :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                      :key=\"Math.random()\"\r\n       />\r\n\r\n       <!-- TODO give these a real key -->\r\n      <circle-marker v-for=\"circleMarker in circleMarkers\"\r\n                     @l-mouseover=\"handleMarkerMouseover\"\r\n                     @l-click=\"handleMarkerClick\"\r\n                     @l-mouseout=\"handleMarkerMouseout\"\r\n                     :latlng=\"circleMarker.latlng\"\r\n                     :radius=\"circleMarker.radius\"\r\n                     :fillColor=\"circleMarker.fillColor\"\r\n                   \t :color=\"circleMarker.color\"\r\n                   \t :weight=\"circleMarker.weight\"\r\n                   \t :opacity=\"circleMarker.opacity\"\r\n                   \t :fillOpacity=\"circleMarker.fillOpacity\"\r\n                     :key=\"Math.random()\"\r\n                     :data=\"{\r\n                       featureId: circleMarker.featureId,\r\n                       tableId: circleMarker.tableId\r\n                     }\"\r\n      />\r\n\r\n       <!-- <vector-marker v-for=\"marker in threeOneOneMarkers\"\r\n                      v-if=\"activeTopicConfig.key === 'threeOneOne'\"\r\n                      :latlng=\"[marker.geometry.coordinates[1], marker.geometry.coordinates[0]]\"\r\n                      :key=\"marker.id\"\r\n                      :markerColor=\"'#b2ffb2'\"\r\n       /> -->\r\n\r\n      <!-- CONTROLS: -->\r\n      <!-- basemap control -->\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostright'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostleft'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <!-- <basemap-tooltip :position=\"'topright'\"\r\n      /> -->\r\n\r\n      <div v-once>\r\n        <basemap-toggle-control v-if=\"shouldShowImageryToggle\"\r\n                                v-once\r\n                                :position=\"'topright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <basemap-select-control :position=\"this.basemapSelectControlPosition\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <pictometry-button v-if=\"this.shouldShowPictometryButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'pictometry'\"\r\n                           :imgSrc=\"'images/pictometry.png'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <cyclomedia-button v-if=\"this.shouldShowCyclomediaButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'cyclomedia'\"\r\n                           :imgSrc=\"'images/cyclomedia.png'\"\r\n                           @click=\"handleCyclomediaButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once\r\n           v-if=\"this.measureControlEnabled\"\r\n      >\r\n        <measure-control :position=\"'bottomleft'\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <legend-control v-for=\"legendControl in Object.keys(legendControls)\"\r\n                        :key=\"legendControl\"\r\n                        :position=\"'bottomleft'\"\r\n                        :options=\"legendControls[legendControl].options\"\r\n                        :items=\"legendControls[legendControl].data\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <location-control v-once\r\n                          v-if=\"this.geolocationEnabled\"\r\n                          :position=\"'bottomright'\"\r\n        />\r\n      </div>\r\n\r\n      <!-- <basemap-tooltip :position=\"'bottomalmostleft'\"\r\n      /> -->\r\n\r\n      <!-- <scale-control :vSide=\"'top'\"\r\n                     :hSide=\"'almostright'\"\r\n      >\r\n      </scale-control> -->\r\n\r\n      <div v-once>\r\n        <address-input :position=\"this.addressInputPosition\"\r\n                       :placeholder=\"this.addressInputPlaceholder\"\r\n        />\r\n      </div>\r\n      <address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\r\n                              :position=\"this.addressInputPosition\"\r\n      />\r\n\r\n\r\n      <cyclomedia-recording-circle v-for=\"recording in cyclomediaRecordings\"\r\n                                   v-if=\"cyclomediaActive\"\r\n                                   :key=\"recording.imageId\"\r\n                                   :imageId=\"recording.imageId\"\r\n                                   :latlng=\"[recording.lat, recording.lng]\"\r\n                                   :size=\"1.2\"\r\n                                   :color=\"'#3388ff'\"\r\n                                   :weight=\"1\"\r\n                                   @l-click=\"handleCyclomediaRecordingClick\"\r\n      />\r\n    </map_>\r\n    <slot class='widget-slot' name=\"cycloWidget\" />\r\n    <slot class='widget-slot' name=\"pictWidget\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import * as L from 'leaflet';\r\n  import philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  // mixins\r\n  import markersMixin from './markers-mixin';\r\n  const cyclomediaMixin = philaVueMapping.CyclomediaMixin;\r\n  const pictometryMixin = philaVueMapping.PictometryMixin;\r\n\r\n  // vue doesn't like it when you import this as Map (reserved-ish word)\r\n  const Map_ = philaVueMapping.Map_;\r\n  const Control = philaVueMapping.Control;\r\n  const AddressInput = philaVueMapping.AddressInput;\r\n  const AddressCandidateList = philaVueMapping.AddressCandidateList;\r\n  const EsriTiledMapLayer = philaVueMapping.EsriTiledMapLayer;\r\n  const EsriTiledOverlay = philaVueMapping.EsriTiledOverlay;\r\n  const EsriDynamicMapLayer = philaVueMapping.EsriDynamicMapLayer;\r\n  const EsriFeatureLayer = philaVueMapping.EsriFeatureLayer;\r\n  const Geojson = philaVueMapping.Geojson;\r\n  const CircleMarker = philaVueMapping.CircleMarker;\r\n  // const OpacitySlider = philaVueMapping.OpacitySlider;\r\n  const VectorMarker = philaVueMapping.VectorMarker;\r\n  const PngMarker = philaVueMapping.PngMarker;\r\n  const BasemapToggleControl = philaVueMapping.BasemapToggleControl;\r\n  const BasemapSelectControl = philaVueMapping.BasemapSelectControl;\r\n  const FullScreenMapToggleTab = philaVueMapping.FullScreenMapToggleTab;\r\n  const LocationControl = philaVueMapping.LocationControl;\r\n  const CyclomediaButton = philaVueMapping.CyclomediaButton;\r\n  const PictometryButton = philaVueMapping.PictometryButton;\r\n  const CyclomediaRecordingCircle = philaVueMapping.CyclomediaRecordingCircle;\r\n  const CyclomediaRecordingsClient = philaVueMapping.CyclomediaRecordingsClient;\r\n  const SvgViewConeMarker = philaVueMapping.SvgViewConeMarker;\r\n  const MeasureControl = philaVueMapping.MeasureControl;\r\n  const LegendControl = philaVueMapping.LegendControl;\r\n  const BasemapTooltip = philaVueMapping.BasemapTooltip;\r\n  const ControlCorner = philaVueMapping.ControlCorner;\r\n\r\n  export default {\r\n    mixins: [\r\n      markersMixin,\r\n      cyclomediaMixin,\r\n      pictometryMixin,\r\n    ],\r\n    components: {\r\n      Map_,\r\n      Control,\r\n      AddressInput,\r\n      AddressCandidateList,\r\n      EsriTiledMapLayer,\r\n      EsriTiledOverlay,\r\n      EsriDynamicMapLayer,\r\n      EsriFeatureLayer,\r\n      Geojson,\r\n      CircleMarker,\r\n      // OpacitySlider,\r\n      VectorMarker,\r\n      PngMarker,\r\n      BasemapToggleControl,\r\n      BasemapSelectControl,\r\n      FullScreenMapToggleTab,\r\n      LocationControl,\r\n      PictometryButton,\r\n      CyclomediaButton,\r\n      CyclomediaRecordingCircle,\r\n      SvgViewConeMarker,\r\n      MeasureControl,\r\n      LegendControl,\r\n      BasemapTooltip,\r\n      ControlCorner,\r\n    },\r\n    created() {\r\n      // if there's a default address, navigate to it\r\n      const defaultAddress = this.$config.defaultAddress;\r\n      if (defaultAddress) {\r\n        this.$controller.goToDefaultAddress(defaultAddress);\r\n      }\r\n\r\n      const cyclomediaConfig = this.$config.cyclomedia || {};\r\n      if (cyclomediaConfig.enabled) {\r\n      // create cyclomedia recordings client\r\n        this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\r\n          this.$config.cyclomedia.recordingsUrl,\r\n          this.$config.cyclomedia.username,\r\n          this.$config.cyclomedia.password,\r\n          4326\r\n        );\r\n      }\r\n    },\r\n    computed: {\r\n      // shouldShowAddressInput() {\r\n      //   if (this.$config.addressInputLocation == 'map') {\r\n      //     return true;\r\n      //   } else {\r\n      //     return false;\r\n      //   }\r\n      // },\r\n      addressAutocompleteEnabled() {\r\n        // TODO tidy up the code\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      addressInputPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topleft'\r\n        } else {\r\n          return 'topalmostleft'\r\n        }\r\n      },\r\n      addressInputPlaceholder() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.placeholder;\r\n        } else {\r\n          return null\r\n        }\r\n      },\r\n      basemapSelectControlPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topright'\r\n        } else {\r\n          return 'topalmostright'\r\n        }\r\n      },\r\n      shouldShowAddressCandidateList() {\r\n        return this.$store.state.shouldShowAddressCandidateList;\r\n      },\r\n      measureControlEnabled() {\r\n        if (this.$config.measureControlEnabled === false) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      mapPanelContainerClass() {\r\n        // return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.fullScreenMapOnly) {\r\n          return 'medium-1 small-order-1 small-1 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.fullScreenTopicsEnabled) {\r\n          return 'medium-1 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else {\r\n          return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        }\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldShowCyclomediaButton() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPictometryButton() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      geolocationEnabled() {\r\n        if (this.$config.geolocation) {\r\n          return this.$config.geolocation.enabled;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      activeDorParcel() {\r\n        // return this.$store.state.activeDorParcel;\r\n        return this.$store.state.parcels.dor.activeParcel;\r\n      },\r\n      legendControls() {\r\n        return this.$config.legendControls || {};\r\n      },\r\n      imageOverlay() {\r\n        return this.$store.state.map.imageOverlay;\r\n      },\r\n      imageOverlayItems() {\r\n        // console.log('calculating imageOverlayItem');\r\n        if (this.activeTopicConfig.imageOverlayGroup) {\r\n          const overlayGroup = this.activeTopicConfig.imageOverlayGroup;\r\n          const state = this.$store.state;\r\n          const overlay = this.$config.imageOverlayGroups[overlayGroup].items(state);\r\n          // console.log('returning imageOverlayItem', overlay);\r\n          return overlay;\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      imageOverlayInfo() {\r\n        // console.log('config:', this.$config);\r\n        return this.$config.map.dynamicMapLayers.regmaps;\r\n      },\r\n      activeBasemap() {\r\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        if (shouldShowImagery) {\r\n          return this.$store.state.map.imagery;\r\n        }\r\n        const defaultBasemap = this.$config.map.defaultBasemap;\r\n        const basemap = this.$store.state.map.basemap || defaultBasemap;\r\n        return basemap;\r\n      },\r\n      tiledLayers() {\r\n        const activeBasemap = this.activeBasemap;\r\n        const activeBasemapConfig = this.configForBasemap(activeBasemap)\r\n\r\n        return activeBasemapConfig.tiledLayers || [];\r\n      },\r\n      activeTiledOverlays() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.tiledOverlays) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.tiledOverlays;\r\n        }\r\n      },\r\n      activeDynamicMaps() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.dynamicMapLayers) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.dynamicMapLayers;\r\n        }\r\n      },\r\n      activeFeatureLayers() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.featureLayers) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.featureLayers;\r\n        }\r\n      },\r\n      activeFeature() {\r\n        return this.$store.state.activeFeature;\r\n      },\r\n      basemaps() {\r\n        return Object.values(this.$config.map.basemaps);\r\n      },\r\n      imageryBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'imagery');\r\n      },\r\n      hasImageryBasemaps() {\r\n        return this.imageryBasemaps.length > 0;\r\n      },\r\n      shouldShowImageryToggle() {\r\n        if (this.$config.map.imagery) {\r\n          return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\r\n        } else {\r\n          return this.hasImageryBasemaps;\r\n        }\r\n      },\r\n      identifyFeature() {\r\n        let configFeature;\r\n        if (this.geocodeType === 'intersection') {\r\n          configFeature = \"address-marker\";\r\n        } else if (this.activeTopicConfig.identifyFeature) {\r\n          configFeature = this.activeTopicConfig.identifyFeature;\r\n        } else {\r\n          if (this.$config) {\r\n            configFeature = this.$config.map.defaultIdentifyFeature;\r\n          }\r\n        }\r\n        return configFeature;\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      },\r\n      activeTopicConfig() {\r\n        const key = this.activeTopic;\r\n        let config;\r\n\r\n        // if no active topic, return null\r\n        if (key) {\r\n          config = this.$config.topics.filter((topic) => {\r\n            return topic.key === key;\r\n          })[0];\r\n        }\r\n\r\n        return config || {};\r\n      },\r\n      activeParcelLayer() {\r\n        return this.activeTopicConfig.parcels;\r\n      },\r\n      dorParcels() {\r\n        return this.$store.state.parcels.dor.data;\r\n      },\r\n      pwdParcel() {\r\n        return this.$store.state.parcels.pwd;\r\n      },\r\n      geocodeResult() {\r\n        return this.$store.state.geocode.data || {};\r\n      },\r\n      geocodeGeom() {\r\n        return this.geocodeResult.geometry;\r\n      },\r\n      geocodeType() {\r\n        return this.geocodeResult.ais_feature_type;\r\n      },\r\n      streetAddress() {\r\n        return this.geocodeResult.properties.street_address;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      mapBounds() {\r\n        // TODO calculate map bounds based on leaflet markers above\r\n      },\r\n      boundsBasedOnShape() {\r\n        return this.$store.state.map.boundsBasedOnShape;\r\n      },\r\n      isGeocoding() {\r\n        return this.$store.state.geocode.status === 'waiting';\r\n      }\r\n    },\r\n    watch: {\r\n      picOrCycloActive(value) {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      },\r\n      geojsonFeatures() {\r\n        this.setMapToBounds();\r\n      },\r\n      markers() {\r\n        this.setMapToBounds();\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      }\r\n    },\r\n    methods: {\r\n      setMapToBounds() {\r\n        // console.log('setMapToBounds is running');\r\n        let featureArray = []\r\n        if (this.activeTopicConfig.zoomToShape) {\r\n          if (this.activeTopicConfig.zoomToShape.includes('geojson')) {\r\n            for (let geojsonFeature of this.geojsonFeatures) {\r\n              featureArray.push(L.geoJSON(geojsonFeature.geojson))\r\n            }\r\n          }\r\n          if (this.activeTopicConfig.zoomToShape.includes('marker')) {\r\n            for (let marker of this.markers) {\r\n              if (marker.markerType === 'overlay') {\r\n                featureArray.push(L.marker(marker.latlng))\r\n              }\r\n            }\r\n          }\r\n          const group = new L.featureGroup(featureArray);\r\n          const bounds = group.getBounds();\r\n          this.$store.commit('setMapBounds', bounds);\r\n        }\r\n      },\r\n      configForBasemap(basemap) {\r\n        return this.$config.map.basemaps[basemap] || {};\r\n      },\r\n      shouldShowGeojson(key) {\r\n        if (this.activeTopicConfig.basemap === 'pwd') {\r\n          return true;\r\n        } else {\r\n          return key === this.activeDorParcel;\r\n        }\r\n      },\r\n      shouldShowImageOverlay(key) {\r\n        return key === this.imageOverlay;\r\n      },\r\n      shouldShowFeatureLayer(key) {\r\n        if (this.activeFeatureLayers.includes(key)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n      handleMapClick(e) {\r\n        // console.log('MapPanel.vue handleMapClick e:', e);\r\n        // latLng = L.latLng(e.lat, e.lng)\r\n        this.$controller.handleMapClick(e);\r\n      },\r\n\r\n      handleMapMove(e) {\r\n        const map = this.$store.state.map.map;\r\n\r\n        const pictometryConfig = this.$config.pictometry || {};\r\n\r\n        const center = map.getCenter();\r\n        const { lat, lng } = center;\r\n        const coords = [lng, lat];\r\n\r\n        if (pictometryConfig.enabled) {\r\n          // update state for pictometry\r\n          this.$store.commit('setPictometryMapCenter', coords);\r\n\r\n          const zoom = map.getZoom();\r\n          this.$store.commit('setPictometryMapZoom', zoom);\r\n        }\r\n\r\n        const cyclomediaConfig = this.$config.cyclomedia || {};\r\n\r\n        if (cyclomediaConfig.enabled) {\r\n          // update cyclo recordings\r\n          this.updateCyclomediaRecordings();\r\n          this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\r\n        }\r\n      },\r\n      fillColorForCircleMarker(markerId, tableId) {\r\n        // get map overlay style and hover style for table\r\n        const tableConfig = this.getConfigForTable(tableId);\r\n        const mapOverlay = tableConfig.options.mapOverlay;\r\n        const { style, hoverStyle } = mapOverlay;\r\n\r\n        // compare id to active feature id\r\n        const activeFeature = this.activeFeature;\r\n        const useHoverStyle = (\r\n          markerId === activeFeature.featureId &&\r\n          tableId === activeFeature.tableId\r\n        );\r\n        const curStyle = useHoverStyle ? hoverStyle : style;\r\n\r\n        return curStyle.fillColor;\r\n      },\r\n    }, // end of methods\r\n  }; //end of export\r\n</script>\r\n\r\n<style scoped>\r\n  .mb-panel-map {\r\n    /*this allows the loading mask to fill the div*/\r\n    position: relative;\r\n  }\r\n\r\n  .mb-map-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  .widget-slot {\r\n    display: inline-block;\r\n    float: left;\r\n  }\r\n\r\n  .mb-map-loading-mask {\r\n    /*display: inline;*/\r\n    position: absolute;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(0, 0 ,0 , 0.25);\r\n    z-index: 1000;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .mb-map-loading-mask-inner {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 40%;\r\n  }\r\n\r\n  /*small retina*/\r\n  /*@media\r\n  (-webkit-min-device-pixel-ratio: 2),\r\n  (min-resolution: 192dpi),\r\n  (max-width: 39.9375em) {\r\n    .mb-search-control-input {\r\n      max-width: 250px;\r\n    }\r\n  }*/\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"mb-root\"\r\n       :class=\"rootClass\"\r\n       :style=\"mbRootStyle\"\r\n  >\r\n      <topic-panel :class=\"this.shouldShowTopicPanel\" />\r\n\r\n      <map-panel :class=\"this.shouldShowMapPanel\"\r\n                 v-if=\"this.fullScreenTopicsOnly !== true\"\r\n      >\r\n        <cyclomedia-widget v-if=\"this.shouldLoadCyclomediaWidget\"\r\n                           slot=\"cycloWidget\"\r\n                           v-show=\"cyclomediaActive\"\r\n                           screen-percent=\"2\"\r\n        />\r\n        <pictometry-widget v-if=\"this.shouldLoadPictometryWidget\"\r\n                           slot=\"pictWidget\"\r\n                           v-show=\"pictometryActive\"\r\n                           :apiKey=\"this.ak\"\r\n                           :secretKey=\"this.sk\"\r\n        >\r\n          <png-marker v-if=\"this.pictometryShowAddressMarker\"\r\n                      :latlng=\"[this.geocodeData.geometry.coordinates[1], this.geocodeData.geometry.coordinates[0]]\"\r\n                      :icon=\"'images/markers.png'\"\r\n                      :height=\"60\"\r\n                      :width=\"40\"\r\n                      :offsetX=\"0\"\r\n                      :offsetY=\"0\"\r\n          />\r\n          <layer v-if=\"this.pictometryActive\" />\r\n          <png-marker v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                      :latlng=\"cycloLatlng\"\r\n                      :icon=\"'images/camera2.png'\"\r\n                      :height=\"20\"\r\n                      :width=\"30\"\r\n                      :offsetX=\"-2\"\r\n                      :offsetY=\"-2\"\r\n          />\r\n          <view-cone v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                     :latlng=\"cycloLatlng\"\r\n                     :rotationAngle=\"cycloRotationAngle\"\r\n                     :hFov=\"cycloHFov\"\r\n          />\r\n        </pictometry-widget>\r\n      </map-panel>\r\n      <popover :html=\"popover\"\r\n  \t\t\t\t\t\t v-if=\"popover && popover.length > 0\"\r\n  \t\t/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\n  import philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\n  console.log('in Mapboard.vue, philaVueComps:', philaVueComps);\r\n\r\n  import TopicPanel from './TopicPanel.vue';\r\n  import MapPanel from './MapPanel.vue';\r\n\r\n  const CyclomediaWidget = philaVueMapping.CyclomediaWidget;\r\n  const PictometryWidget = philaVueMapping.PictometryWidget;\r\n  const Layer = philaVueMapping.PictometryLayer;\r\n  const ViewCone = philaVueMapping.PictometryViewCone;\r\n  const PngMarker = philaVueMapping.PictometryPngMarker;\r\n  const Popover = philaVueComps.Popover;\r\n\r\n\r\n  export default {\r\n    components: {\r\n      TopicPanel,\r\n      MapPanel,\r\n      CyclomediaWidget,\r\n      PictometryWidget,\r\n      Layer,\r\n      PngMarker,\r\n      ViewCone,\r\n      Popover,\r\n    },\r\n    data() {\r\n      const data = {\r\n        // this will only affect the app size if the app is set to \"plugin\" mode\r\n        mbRootStyle: {\r\n          'height': '100px'\r\n        }\r\n      };\r\n      return data;\r\n    },\r\n    created() {\r\n      console.log('this.$config:', this.$config);\r\n      if (this.$config.panels) {\r\n        if (!this.$config.panels.includes('map')) {\r\n          this.$store.commit('setTopicsOnly', true);\r\n        } else if (!this.$config.panels.includes('topics')) {\r\n          this.$store.commit('setMapOnly', true);\r\n        }\r\n      }\r\n      window.addEventListener('click', this.closeAddressCandidateList);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize();\r\n    },\r\n    mounted() {\r\n      this.$controller.appDidLoad();\r\n    },\r\n    computed: {\r\n      rootClass() {\r\n        if (this.$config.plugin) {\r\n          return 'grid-x';\r\n        } else {\r\n          return 'cell medium-auto grid-x';\r\n        }\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldLoadCyclomediaWidget() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldLoadPictometryWidget() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      fullScreenMapOnly() {\r\n        return this.$store.state.fullScreen.mapOnly;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsOnly() {\r\n        return this.$store.state.fullScreen.topicsOnly;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      shouldShowTopicPanel() {\r\n        let value;\r\n        if (!this.fullScreenMapEnabled && !this.fullScreenMapOnly) {\r\n          value = 'topic-panel-true';\r\n        } else {\r\n          value = 'topic-panel-false';\r\n        }\r\n        return value;\r\n      },\r\n      shouldShowMapPanel() {\r\n        let value;\r\n        if (!this.fullScreenTopicsEnabled && !this.fullScreenTopicsOnly) {\r\n          value = 'map-panel-true';\r\n        } else {\r\n          value = 'map-panel-false';\r\n        }\r\n        return value;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active\r\n      },\r\n      pictometryZoom() {\r\n        return this.$store.state.pictometry.zoom\r\n      },\r\n      pictometryShowAddressMarker() {\r\n        if (!this.pictometryActive || !this.geocodeData) {\r\n          return false;\r\n        } else if (this.pictometryZoom < 20 && this.cyclomediaActive) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      ak() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.apiKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.apiKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.apiKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.apiKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.apiKey;\r\n        }\r\n      },\r\n      sk() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.secretKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.secretKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.secretKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.secretKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.secretKey;\r\n        }\r\n      },\r\n      popover() {\r\n        return this.$store.state.popover;\r\n      },\r\n    },\r\n    watch: {\r\n      pictometryShowAddressMarker(nextValue) {\r\n        console.log('watch pictometryShowAddressMarker', nextValue);\r\n      }\r\n    },\r\n    methods: {\r\n      closeAddressCandidateList() {\r\n        this.$store.commit('setShouldShowAddressCandidateList', false);\r\n      },\r\n      handleWindowResize() {\r\n        // this only actually affects the size if it is set to \"plugin mode\"\r\n        if ($(window).width() >= 750) {\r\n          this.mbRootStyle.height = '600px'\r\n        } else {\r\n          this.mbRootStyle.height = 'auto';\r\n        }\r\n      }\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .mb-panel-topics-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .topic-panel-false {\r\n    /* display: none; */\r\n  }\r\n\r\n  @media screen and (min-width: 46.875em) {\r\n    .topic-panel-false {\r\n      display: none;\r\n    }\r\n\r\n    .map-panel-false {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n</style>\r\n","function generateUniqueId() {\r\n  return Math.random().toString(36).substring(7);\r\n}\r\n\r\nexport default generateUniqueId;\r\n","import Vue from 'vue';\r\nimport axios from 'axios';\r\nimport createStore from './store';\r\nimport configMixin from './util/config-mixin';\r\nimport Mapboard from './components/Mapboard.vue';\r\nimport mergeDeep from './util/merge-deep';\r\nimport generateUniqueId from './util/unique-id';\r\nimport { library } from '@fortawesome/pro-regular-svg-icons';\r\nconsole.log('library:', library);\r\n// import { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\r\n\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch';\r\nconst controllerMixin = philaVueDatafetch.controllerMixin;\r\n\r\n// helper function to auto-assign ids to horizontal tables\r\nfunction assignTableIds(comps) {\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (innerComps) {\r\n      assignTableIds(innerComps);\r\n      // return;\r\n    }\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table') {\r\n      continue;\r\n    }\r\n\r\n     const id = generateUniqueId();\r\n     comp._id = id;\r\n     // the id also needs to get passed to the horizontal table component, so\r\n     // use the options object.\r\n     comp.options.tableId = id;\r\n  }\r\n}\r\n\r\nfunction assignHorizontalTableGroupIds(comps) {\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (!innerComps) {\r\n      continue;\r\n    }\r\n\r\n    // skip comps that aren't horizontal table groups\r\n    if (comp.type !== 'horizontal-table-group') {\r\n      continue;\r\n    }\r\n\r\n     const id = generateUniqueId();\r\n     comp._id = id;\r\n     // the id also needs to get passed to the horizontal table component, so\r\n     // use the options object.\r\n     comp.options.horizontalTableGroupId = id;\r\n  }\r\n}\r\n\r\nfunction initMapboard(clientConfig) {\r\n  const baseConfigUrl = clientConfig.baseConfig;\r\n  // console.log('baseConfigUrl:', baseConfigUrl);\r\n\r\n  // get base config\r\n  return axios.get(baseConfigUrl).then(response => {\r\n    console.log('in axios, clientConfig:', clientConfig);\r\n    const data = response.data;\r\n    // const data = baseConfigUrl;\r\n\r\n    // parse raw js. yes, it's ok to use eval :)\r\n    // http://stackoverflow.com/a/87260/676001\r\n    const baseConfigFn = eval(data);\r\n    const { gatekeeperKey } = clientConfig;\r\n    const baseConfig = baseConfigFn({ gatekeeperKey });\r\n\r\n    // deep merge base config and client config\r\n    const config = mergeDeep(baseConfig, clientConfig);\r\n    // const config = mergeDeep(baseConfigUrl, clientConfig);\r\n\r\n    // assign table ids\r\n    for (let topic of config.topics) {\r\n      assignTableIds(topic.components);\r\n      assignHorizontalTableGroupIds(topic.components);\r\n    }\r\n\r\n    // make config accessible from each component via this.$config\r\n    Vue.use(configMixin, config);\r\n\r\n    // create store\r\n    const store = createStore(config);\r\n\r\n    // mix in controller\r\n    Vue.use(controllerMixin, { config, store });\r\n    // Vue.use(controllerMixin, { config, store, eventBus });\r\n\r\n    Vue.component('font-awesome-icon', FontAwesomeIcon)\r\n    Vue.config.productionTip = false\r\n\r\n    // mount main vue\r\n    const vm = new Vue({\r\n      el: config.el || '#mapboard',\r\n      render: h => h(Mapboard),\r\n      store\r\n    });\r\n\r\n  }).catch(err => {\r\n    console.error('Error loading base config:', err);\r\n  });\r\n}\r\n\r\nexport default initMapboard;\r\n\r\n// also expose the vue component as a named export\r\nexport { Mapboard };\r\n"],"names":["const","userAgent","navigator","vendor","window","opera","test","substr","isObject","item","Array","isArray","mergeDeep","target","source","let","output","Object","assign","keys","forEach","key","console","log","philaVueMapping","philaVueComps","pvdStore","philaVueDatafetch","pvmStore","pvcStore","getHorizontalTableIdsFromComps","comps","tableIds","comp","options","innerComps","components","tables","innerTableIds","concat","type","tableId","_id","push","createFilteredData","config","topics","compTableIds","filteredData","index","length","getHorizontalTableGroupIdsFromComps","tableGroupId","createHorizontalTableGroups","tableGroupIds","compTableGroupId","horizontalTableGroups","activeTable","activeTableId","createStore","sources","createSources","parcels","createParcels","mergeStore","state","isMobileOrTablet","isMobileDevice","fullScreen","mapOnly","topicsOnly","fullScreenMapEnabled","fullScreenTopicsEnabled","candidates","addressEntered","horizontalTables","activeFeature","featureId","appData","propertyBalance","getters","visibleTableIds","activeTopic","filter","topic","compTableGroup","array","mutations","setIsMobileOrTablet","payload","setMapOnly","setTopicsOnly","setFullScreenMapEnabled","setFullScreenTopicsEnabled","setLocation","map","location","lat","lng","setWatchPositionOn","watchPositionOn","setHorizontalTableGroupActiveTable","setHorizontalTableFilteredData","data","setMapFilters","filters","setMap","setMapBounds","bounds","setMapBoundsBasedOnShape","boundsBasedOnShape","setActiveParcel","parcelLayer","activeParcel","activeAddress","activeMapreg","setActiveFeature","nextActiveFeature","setImageOverlay","imageOverlay","setImageOverlayOpacity","imageOverlayOpacity","setCandidates","setAddressEntered","setPropertyBalance","store","center","zoom","pictometry","Vuex","Store","Vue","mixin","created","this","$config","use","Topic","TopicComponentGroup","Greeting","AddressInput","AddressCandidateList","FullScreenTopicsToggleTab","render","topicsContainerStyle","overflow-y","height","min-height","addressContainerStyle","align-items","padding-left","padding-top","padding-bottom","addressInputContainerStyle","stacked","mounted","addEventListener","closeAddressCandidateList","handleWindowResize","watch","geocodeStatus","computed","shouldShowAddressHeader","fullScreenTopicsOnly","shouldShowGreeting","inputAlign","addressInput","position","addressInputWidth","width","addressInputPlaceholder","placeholder","addressAutocompleteEnabled","autocompleteEnabled","$store","topicPanelContainerClass","addressContainerClass","geocode","status","dorParcels","dor","address","activeDorAddress","defaultAddressTextPlaceholder","addressA","properties","street_address","addressB","zipCode","zip_code","zip4","zip_4","parts","join","methods","shouldShowAddressCandidateList","pixelAdjustment","topicsHeight","windowHeight","$","siteHeaderHeightNum","parseInt","document","getElementsByClassName","getBoundingClientRect","appFooterHeightNum","toString","prevActiveFeature","updateFeaturePrev","updateFeatureNext","featureIdPrev","featureIdNext","matchingLayerNext","matchingLayerPrev","layerMap","_layers","layers","values","layer","layerFeatureId","layerTableId","updateMarkerFillColor","bringMarkerToFront","locationMarker","latlng","radius","fillColor","color","weight","opacity","fillOpacity","markers","geocodeGeom","identifyFeature","addressMarker","coordinates","reverse","geocodeResult","topicMarker","activeTopicConfig","marker","markerPath","path","level","undefined","markerObject","circleMarkers","mapOverlay","getConfigForTable","items","style","geometry","x","props","_featureId","geojsonFeatures","features","activeParcelLayer","pwdParcel","geojson","PARCELID","dorParcelFeatures","dorParcel","OBJECTID","apply","topicGeojson","geojsonPath","reactiveGeojsonFeatures","id","leafletMarkers","getTableFromComps","table","innerTable","circleMarker","el","_path","group","_renderer","_rootGroup","removeChild","appendChild","handleMarkerMouseover","e","commit","handleMarkerClick","handleMarkerMouseout","nextFillColor","fillColorForCircleMarker","nextStyle","setStyle","cyclomediaMixin","CyclomediaMixin","pictometryMixin","PictometryMixin","Map_","Control","EsriTiledMapLayer","EsriTiledOverlay","EsriDynamicMapLayer","EsriFeatureLayer","Geojson","CircleMarker","VectorMarker","PngMarker","BasemapToggleControl","BasemapSelectControl","FullScreenMapToggleTab","LocationControl","CyclomediaButton","PictometryButton","CyclomediaRecordingCircle","CyclomediaRecordingsClient","SvgViewConeMarker","MeasureControl","LegendControl","BasemapTooltip","ControlCorner","_vm","mixins","markersMixin","defaultAddress","$controller","goToDefaultAddress","$cyclomediaRecordingsClient","cyclomedia","recordingsUrl","addressInputPosition","basemapSelectControlPosition","measureControlEnabled","mapPanelContainerClass","fullScreenMapOnly","cycloLatlng","orientation","xyz","cycloRotationAngle","yaw","cycloHFov","hFov","shouldShowCyclomediaButton","shouldShowPictometryButton","geolocationEnabled","activeDorParcel","legendControls","imageOverlayItems","overlayGroup","imageOverlayGroups","imageOverlayInfo","activeBasemap","tiledLayers","activeTiledOverlays","activeDynamicMaps","activeFeatureLayers","basemaps","imageryBasemaps","basemap","hasImageryBasemaps","shouldShowImageryToggle","imagery","geocodeType","configFeature","pwd","streetAddress","picOrCycloActive","cyclomediaActive","mapBounds","isGeocoding","value","setMapToBounds","$nextTick","invalidateSize","featureArray","zoomToShape","includes","L.featureGroup","configForBasemap","shouldShowGeojson","shouldShowImageOverlay","shouldShowFeatureLayer","handleMapClick","handleMapMove","getCenter","getZoom","enabled","markerId","CyclomediaWidget","PictometryWidget","Layer","PictometryLayer","ViewCone","PictometryViewCone","PictometryPngMarker","Popover","TopicPanel","MapPanel","mbRootStyle","panels","appDidLoad","rootClass","plugin","shouldLoadCyclomediaWidget","shouldLoadPictometryWidget","shouldShowTopicPanel","shouldShowMapPanel","active","pictometryActive","pictometryZoom","pictometryShowAddressMarker","geocodeData","ak","host","hostname","apiKey","pictometryDev","pictometryCity","pictometryCityDev","pictometryLocal","sk","secretKey","popover","nextValue","generateUniqueId","Math","random","substring","library","controllerMixin","assignTableIds","assignHorizontalTableGroupIds","horizontalTableGroupId","initMapboard","clientConfig","baseConfigUrl","baseConfig","axios","get","then","response","baseConfigFn","eval","gatekeeperKey","configMixin","component","FontAwesomeIcon","productionTip","vm","h","Mapboard","catch","err","error"],"mappings":"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"}