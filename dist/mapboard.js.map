{"version":3,"file":"mapboard.js","sources":["../src/util/is-mobile-device.js","../src/util/merge-deep.js","../src/store.js","../src/util/config-mixin.js","../src/components/TopicPanel.vue","../src/components/markers-mixin.js","../src/components/MapPanel.vue","../src/components/Mapboard.vue","../src/util/unique-id.js","../node_modules/@fortawesome/free-solid-svg-icons/faSpinner.js","../node_modules/@fortawesome/free-solid-svg-icons/faBook.js","../node_modules/@fortawesome/free-solid-svg-icons/faWrench.js","../node_modules/@fortawesome/free-solid-svg-icons/faUniversity.js","../node_modules/@fortawesome/free-solid-svg-icons/faGavel.js","../src/main.js"],"sourcesContent":["export default function () {\r\n  const mobileOrTabletRegexA = /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i;\r\n  const mobileOrTabletRegexB = /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i;\r\n\r\n  // get the user agent and test against both regex patterns\r\n  const userAgent = (navigator.userAgent || navigator.vendor || window.opera || '');\r\n  const isMobileOrTablet = (mobileOrTabletRegexA.test(userAgent) ||\r\n                            mobileOrTabletRegexB.test(userAgent.substr(0,4)));\r\n\r\n  return isMobileOrTablet;\r\n};\r\n","// http://stackoverflow.com/a/37164538/676001\r\n\r\n// helper to verify that an item is an object\r\nexport function isObject(item) {\r\n  return (item && typeof item === 'object' && !Array.isArray(item) && item !== null);\r\n};\r\n\r\n// merges n objects, deeply, immutably\r\nexport default function mergeDeep(target, source) {\r\n  let output = Object.assign({}, target);\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      if (isObject(source[key])) {\r\n        if (!(key in target))\r\n          Object.assign(output, { [key]: source[key] });\r\n        else\r\n          output[key] = mergeDeep(target[key], source[key]);\r\n      } else {\r\n        Object.assign(output, { [key]: source[key] });\r\n      }\r\n    });\r\n  }\r\n  return output;\r\n};\r\n","import Vue from 'vue';\r\nimport Vuex from 'vuex';\r\nimport isMobileDevice from './util/is-mobile-device';\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch'\r\nimport philaVueMapping from '@cityofphiladelphia/phila-vue-mapping';\r\nimport philaVueComps from '@cityofphiladelphia/phila-vue-comps';\r\nimport mergeDeep from './util/merge-deep';\r\n\r\nconst pvdStore = philaVueDatafetch.pvdStore\r\nconst pvmStore = philaVueMapping.pvmStore\r\nconst pvcStore = philaVueComps.pvcStore\r\n\r\n// when you load vuex from a script tag this seems to happen automatically\r\nVue.use(Vuex);\r\n\r\n// this grabs horizontal table ids from an array of topic components,\r\n// recursively\r\nfunction getHorizontalTableIdsFromComps(comps = []) {\r\n  // console.log('getHorizontalTableIdsFromComps is running, comps:', comps);\r\n\r\n  let tableIds = [];\r\n\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (innerComps) {\r\n      const innerTableIds = getHorizontalTableIdsFromComps(innerComps);\r\n      tableIds = tableIds.concat(innerTableIds);\r\n      continue;\r\n    }\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table') {\r\n      continue;\r\n    }\r\n\r\n    const tableId = comp._id;\r\n\r\n    tableIds.push(tableId);\r\n  }\r\n\r\n  return tableIds;\r\n}\r\n\r\n// this makes the empty filtered data object given a list of topics.\r\nfunction createFilteredData(config) {\r\n  const topics = config.topics;\r\n  let tableIds = [];\r\n\r\n  for (let topic of topics) {\r\n    const comps = topic.components;\r\n    const compTableIds = getHorizontalTableIdsFromComps(comps);\r\n    tableIds = tableIds.concat(compTableIds);\r\n  }\r\n\r\n  // console.log('createFilteredData is running, tableIds:', tableIds);\r\n\r\n  // const filteredData = tableIds.reduce((acc, tableId) => {\r\n  //   acc[tableId] = [];\r\n  //   return acc;\r\n  // }, {});\r\n\r\n  let filteredData = {}\r\n  for (let index=0; index < tableIds.length; index++) {\r\n    filteredData[tableIds[index]] = [];\r\n  }\r\n\r\n  return filteredData;\r\n}\r\n\r\n// this grabs table group ids from an array of topic components\r\nfunction getHorizontalTableGroupIdsFromComps(comps = []) {\r\n  // console.log('getHorizontalTableGroupIdsFromComps is running, comps:', comps);\r\n  let tableGroupId;\r\n\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // console.log('getHorizontalTableGroupIdsFromComps, comp:', comp);\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (!innerComps) {\r\n      continue;\r\n    }\r\n\r\n    // console.log('getTableGroupIdsFromComps, comp.type:', comp.type);\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table-group') {\r\n      continue;\r\n    }\r\n\r\n    tableGroupId = comp._id;\r\n    // console.log('getHorizontalTableGroupIdsFromComps, tableGroupId:', tableGroupId);\r\n  }\r\n\r\n  return tableGroupId;\r\n}\r\n\r\n// this makes the empty horizontalTableGroups object given a list of topics.\r\nfunction createHorizontalTableGroups(config) {\r\n  const topics = config.topics;\r\n\r\n  let tableGroupIds = [];\r\n\r\n  for (let topic of topics) {\r\n    const comps = topic.components;\r\n    const compTableGroupId = getHorizontalTableGroupIdsFromComps(comps);\r\n    if (compTableGroupId) tableGroupIds.push(compTableGroupId);\r\n  }\r\n  // console.log('createHorizontalTableGroups is running, config:', config, 'tableGroupIds:', tableGroupIds);\r\n\r\n  let horizontalTableGroups = {};\r\n\r\n  for (let tableGroupId of tableGroupIds) {\r\n    horizontalTableGroups[tableGroupId] = {\r\n      activeTable: null,\r\n      activeTableId: null\r\n    };\r\n  }\r\n  return horizontalTableGroups;\r\n}\r\n\r\nfunction createStore(config) {\r\n  const sources = pvdStore.createSources(config);\r\n  const parcels = pvdStore.createParcels(config);\r\n\r\n  const initialState = {\r\n    isMobileOrTablet: isMobileDevice(),\r\n    fullScreen: {\r\n      mapOnly: false,\r\n      topicsOnly: false,\r\n    },\r\n    fullScreenMapEnabled: false,\r\n    // fullScreenTopicsEnabled: false,\r\n    candidates: [],\r\n    addressEntered: null,\r\n    parcels,\r\n    sources,\r\n    horizontalTables: {\r\n      // table id => filtered rows\r\n      filteredData: createFilteredData(config),\r\n    },\r\n    horizontalTableGroups: createHorizontalTableGroups(config),\r\n    activeFeature: {\r\n      featureId: null,\r\n      tableId: null\r\n    },\r\n    appData: {\r\n      propertyBalance: 0,\r\n    },\r\n    modals: {\r\n      keys: config.modals,\r\n      open: '',\r\n    },\r\n    map: {}\r\n  };\r\n\r\n  if (config.map.initialImagery) {\r\n    initialState.map.imagery = config.map.initialImagery;\r\n  }\r\n\r\n  const mb = {\r\n    state: initialState,\r\n    getters: {\r\n      visibleTableIds(state) {\r\n        // get active topic\r\n        const activeTopic = state.activeTopic;\r\n\r\n        if (!activeTopic) {\r\n          return [];\r\n        }\r\n\r\n        // get horizontal table ids for that topic\r\n        const activeTopicConfig = (config.topics.filter(topic => topic.key === activeTopic) || [])[0];\r\n        const comps = activeTopicConfig.components;\r\n\r\n        const compTableGroup = getHorizontalTableGroupIdsFromComps(comps);\r\n        if (compTableGroup) {\r\n          // even though there is only 1 value, it has to be in array form in the state\r\n          const array = [];\r\n          array.push(state.horizontalTableGroups[compTableGroup].activeTableId);\r\n          return array;\r\n        } else {\r\n          const compTables = getHorizontalTableIdsFromComps(comps);\r\n          return compTables;\r\n        }\r\n      }\r\n    },\r\n    mutations: {\r\n\r\n      setIsMobileOrTablet(state, payload) {\r\n        state.isMobileOrTablet = payload;\r\n      },\r\n      setMapOnly(state, payload) {\r\n        state.fullScreen.mapOnly = payload;\r\n      },\r\n      setTopicsOnly(state, payload) {\r\n        state.fullScreen.topicsOnly = payload;\r\n      },\r\n      setFullScreenMapEnabled(state, payload) {\r\n        state.fullScreenMapEnabled = payload;\r\n      },\r\n      // setFullScreenTopicsEnabled(state, payload) {\r\n      //   state.fullScreenTopicsEnabled = payload;\r\n      // },\r\n      setLocation(state, payload) {\r\n        state.map.location.lat = payload.lat;\r\n        state.map.location.lng = payload.lng;\r\n      },\r\n      setWatchPositionOn(state, payload) {\r\n        state.map.watchPositionOn = payload;\r\n      },\r\n\r\n      setHorizontalTableGroupActiveTable(state, payload) {\r\n        // console.log('setHorizontalTableGroupActiveTable, payload:', payload);\r\n        state.horizontalTableGroups[payload.tableGroupId].activeTableId = payload.activeTableId;\r\n        state.horizontalTableGroups[payload.tableGroupId].activeTable = payload.activeTable;\r\n      },\r\n      setHorizontalTableFilteredData(state, payload) {\r\n        const { tableId, data } = payload;\r\n\r\n        // check for not-null table id\r\n        if (!tableId) return;\r\n\r\n        state.horizontalTables.filteredData[tableId] = data;\r\n      },\r\n\r\n      setMapFilters(state, payload) {\r\n        state.map.filters = payload;\r\n      },\r\n\r\n      setMap(state, payload) {\r\n        state.map.map = payload.map;\r\n      },\r\n\r\n\r\n      setMapBounds(state, payload) {\r\n        // const { northEast, southWest } = payload || {};\r\n        // state.map.bounds.northEast = northEast;\r\n        // state.map.bounds.southWest = southWest;\r\n        state.map.bounds = payload;\r\n      },\r\n      setMapBoundsBasedOnShape(state, payload) {\r\n        state.map.boundsBasedOnShape = payload\r\n      },\r\n      setActiveParcel(state, payload) {\r\n        // console.log('store setActiveParcel:', payload)\r\n        const { parcelLayer, activeParcel, activeAddress, activeMapreg } = payload || {};\r\n        state.parcels[parcelLayer].activeParcel = activeParcel;\r\n        state.parcels[parcelLayer].activeAddress = activeAddress;\r\n        state.parcels[parcelLayer].activeMapreg = activeMapreg;\r\n      },\r\n\r\n      setActiveFeature(state, payload) {\r\n        // console.log('store setActiveFeature is running');\r\n        const { featureId, tableId } = payload || {};\r\n        const nextActiveFeature = { featureId, tableId };\r\n        state.activeFeature = nextActiveFeature;\r\n      },\r\n\r\n      setImageOverlay(state, payload) {\r\n        state.map.imageOverlay = payload;\r\n      },\r\n      setImageOverlayOpacity(state, payload) {\r\n        state.map.imageOverlayOpacity = payload;\r\n      },\r\n      setCandidates(state, payload) {\r\n        state.candidates = payload;\r\n      },\r\n      setAddressEntered(state, payload) {\r\n        state.addressEntered = payload;\r\n      },\r\n\r\n      setPropertyBalance(state, payload) {\r\n        state.appData.propertyBalance = payload;\r\n      },\r\n      setDidToggleModal(state, name) {\r\n        // console.log('setDidToggleModal, name:', name, 'open:', open);\r\n        // console.log('setDidToggleModal, name:', name);\r\n        // state.modals[name].open = open === null ? !state.modals[name].open : open\r\n        state.modals.open = name;\r\n      },\r\n    }\r\n  }\r\n\r\n  let mergeStore = mergeDeep(pvdStore.store, pvmStore);\r\n  mergeStore = mergeDeep(mergeStore, pvcStore);\r\n  mergeStore = mergeDeep(mergeStore, mb);\r\n  // let mergeStore = mergeDeep(mb, pvdStore.store);\r\n  // mergeStore = mergeDeep(mergeStore, pvmStore);\r\n  // mergeStore = mergeDeep(mergeStore, pvcStore);\r\n\r\n  // reset the map center and zoom based on the config\r\n  mergeStore.state.map.center = config.map.center;\r\n  mergeStore.state.map.zoom = config.map.zoom;\r\n  mergeStore.state.pictometry.map.center = config.map.center;\r\n  mergeStore.state.pictometry.map.zoom = config.map.zoom;\r\n  // mergeStore.state.pictometry.enabled = config.pictometry.enabled;\r\n  // mergeStore.state.cyclomedia.enabled = config.cyclomedia.enabled;\r\n\r\n  // console.log('mergeStore:', mergeStore);\r\n\r\n  // TODO standardize how payloads are passed around/handled\r\n  return new Vuex.Store({\r\n    state: mergeStore.state,\r\n    getters: mergeStore.getters,\r\n    mutations: mergeStore.mutations\r\n  });\r\n}\r\n\r\nexport default createStore;\r\n","// shout out to airyland\r\n// https://github.com/airyland/vue-config/blob/master/index.js\r\n\r\nexport default (Vue, config) => {\r\n  Vue.mixin({\r\n    created() {\r\n      this.$config = config;\r\n    }\r\n  });\r\n};\r\n","<template>\r\n  <div id=\"topic-panel-container\"\r\n       :class=\"'mb-panel-topics cell ' + this.topicPanelContainerClass\"\r\n  >\r\n    <full-screen-topics-toggle-tab v-once\r\n                                   v-if=\"!this.fullScreenTopicsOnly\"\r\n    />\r\n\r\n    <!-- address header - it only shows if the app is set to \"fullScreenTopicsOnly\" or there is a geocode -->\r\n    <div class=\"address-header cell small-24 medium-24\"\r\n         v-if=\"this.shouldShowAddressHeader\"\r\n    >\r\n      <div :class=\"'address-container columns ' +  this.addressContainerClass\"\r\n           :style=\"this.addressContainerStyle\"\r\n      >\r\n\r\n        <div v-if=\"!this.address\"\r\n             class=\"default-address-text\"\r\n             :style=\"this.defaultAddressTextPlaceholderStyle\"\r\n        >\r\n          {{ this.$config.defaultAddressTextPlaceholder.text }}\r\n        </div>\r\n        <h1 class=\"address-header-line-1\">\r\n        <!-- there is no map marker if there is no map -->\r\n          <font-awesome-icon icon=\"map-marker-alt\"\r\n                             v-if=\"!this.fullScreenTopicsOnly\"\r\n          />\r\n          <!-- <i class=\"fa fa-map-marker-alt\"\r\n             v-if=\"!this.fullScreenTopicsOnly\"\r\n          ></i> -->\r\n          {{ address }}\r\n        </h1>\r\n        <!-- <div class=\"address-header-line-2\"\r\n             v-show=\"!this.geocode\"\r\n        >\r\n\r\n        </div> -->\r\n        <div v-show=\"this.geocode\"\r\n             class=\"address-header-line-2\"\r\n        >\r\n          PHILADELPHIA, PA {{ zipCode }}\r\n        </div>\r\n        <any-header v-if=\"this.addressHeaderAdditionalInfo\"\r\n                    :options=\"this.addressHeaderAdditionalHeaderOptions\"\r\n                    :slots=\"this.addressHeaderAdditionalHeaderSlots\"\r\n        />\r\n          <!-- <div class=\"address-header-line-3\"\r\n          >\r\n            {{ addressHeaderAdditionalInfo }}\r\n          </div> -->\r\n        <!-- </any-header> -->\r\n        <!-- <div class=\"address-header-line-3\"\r\n             v-if=\"this.addressHeaderAdditionalInfo && !this.addressHeaderAdditionalHeaderOptions\"\r\n        >\r\n          {{ addressHeaderAdditionalInfo }}\r\n        </div> -->\r\n\r\n      </div>\r\n\r\n      <div class=\"address-input-container columns small-24 medium-12 large-12\"\r\n           :style=\"this.addressInputContainerStyle\"\r\n           v-if=\"this.fullScreenTopicsEnabled && !this.stacked || this.fullScreenTopicsOnly\"\r\n      >\r\n        <address-input :widthFromConfig=\"this.addressInputWidth\"\r\n                       :placeholder=\"this.addressInputPlaceholder\"\r\n        >\r\n          <address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\r\n                                  slot=\"address-candidates-slot\"\r\n                                  :widthFromConfig=\"this.addressInputWidth\"\r\n          />\r\n        </address-input>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <!-- before search -->\r\n    <div v-if=\"shouldShowGreeting\"\r\n         class=\"topics-container cell medium-cell-block-y\"\r\n         :style=\"topicsContainerStyle\"\r\n    >\r\n      <greeting v-show=\"shouldShowGreeting\"\r\n                :message=\"greetingText\"\r\n                :options=\"greetingOptions\"\r\n      />\r\n    </div>\r\n\r\n    <!-- after search -->\r\n    <div v-if=\"!shouldShowGreeting\" class=\"topic-panel-content\">\r\n      <div\r\n           class=\"topics-container cell medium-cell-block-y\"\r\n           :style=\"topicsContainerStyle\"\r\n      >\r\n        <topic-component-group :topic-components=\"this.$config.components\" />\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import {\r\n    Topic,\r\n    TopicComponentGroup,\r\n    AnyHeader,\r\n    Greeting,\r\n    AddressInput,\r\n    AddressCandidateList,\r\n    FullScreenTopicsToggleTab,\r\n  } from '@cityofphiladelphia/phila-vue-comps';\r\n\r\n  export default {\r\n    components: {\r\n      Greeting,\r\n      TopicComponentGroup,\r\n      Topic,\r\n      AnyHeader,\r\n      AddressInput,\r\n      AddressCandidateList,\r\n      FullScreenTopicsToggleTab,\r\n    },\r\n    data() {\r\n      const data = {\r\n        defaultAddressTextPlaceholderStyle: {},\r\n        topicsContainerStyle: {\r\n          'overflow-y': 'auto',\r\n          'height': '100px',\r\n          'min-height': '100px',\r\n        },\r\n        addressContainerStyle: {\r\n          'height': '100%',\r\n          'align-items': 'flex-start',\r\n          'padding-left': '20px',\r\n          'padding-top': '20px',\r\n          'padding-bottom': '20px',\r\n        },\r\n        addressInputContainerStyle: {\r\n          'height': '100%',\r\n          'align-items': 'center',\r\n          'padding-top': '10px',\r\n          'padding-bottom': '10px',\r\n        },\r\n        stacked: false,\r\n      };\r\n      return data;\r\n    },\r\n    // created() {\r\n    //   console.log('TopicPanel created, this.$config:', this.$config);\r\n    //   TopicComponentGroup.components.PropertyCallout = this.$config.customComps.propertyCallout;\r\n    //   console.log('TopicPanel created, TopicComponentGroup:', TopicComponentGroup);\r\n    // },\r\n    mounted() {\r\n      window.addEventListener('click', this.closeAddressCandidateList);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize(25);\r\n    },\r\n    watch: {\r\n      geocodeStatus() {\r\n        this.handleWindowResize();\r\n      }\r\n    },\r\n    computed: {\r\n      greetingText() {\r\n        return this.$config.greeting.message;\r\n      },\r\n      greetingOptions() {\r\n        return this.$config.greeting.options;\r\n      },\r\n      shouldShowAddressHeader() {\r\n        if (this.fullScreenTopicsOnly || this.shouldShowGreeting === false) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      // shouldShowAddressHeaderAdditionalInfo() {\r\n      //   if (this.addressHeaderAdditionalHeaderOptions.headerType) {\r\n      //     return 'anyHeader'\r\n      //   } else if (this.addressHeaderAdditionalHeaderOptions && !this.addressHeaderAdditionalHeaderOptions.headerType) {\r\n      //     return ''\r\n      //   }\r\n      // }\r\n      addressHeaderAdditionalHeaderOptions() {\r\n        if (this.$config.addressHeaderAdditionalInfo) {\r\n          const ahai = this.$config.addressHeaderAdditionalInfo;\r\n          if (ahai.options) {\r\n            if (!ahai.options.headerType) {\r\n              ahai.options.headerType = 'h4';\r\n            }\r\n            return ahai.options;\r\n          }\r\n        }\r\n      },\r\n      addressHeaderAdditionalHeaderSlots() {\r\n        return {\r\n          text: this.addressHeaderAdditionalInfo\r\n        }\r\n      },\r\n      addressHeaderAdditionalInfo() {\r\n        if (this.$config.addressHeaderAdditionalInfo) {\r\n          const geocode = this.geocode;\r\n          if (!geocode) return null;\r\n          const ahai = this.$config.addressHeaderAdditionalInfo;\r\n          let returned = [];\r\n          if (ahai.preText) {\r\n            returned.push(ahai.preText);\r\n          }\r\n          returned.push(geocode.properties[ahai.data]);\r\n          console.log('returned:', returned);\r\n          return returned.join(' ');\r\n        }\r\n      },\r\n      inputAlign() {\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.position) {\r\n            const position = this.$config.addressInput.position;\r\n            switch(position) {\r\n              case 'left':\r\n              return 'flex-start';\r\n              case 'right':\r\n              return 'flex-end';\r\n              case 'center':\r\n              return 'center';\r\n            }\r\n          } else {\r\n            return 'flex-start';\r\n          }\r\n        } else {\r\n          return 'flex-start';\r\n        }\r\n      },\r\n      addressInputWidth() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.width;\r\n        } else {\r\n          return 415;\r\n        }\r\n      },\r\n      addressInputPlaceholder() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.placeholder;\r\n        } else {\r\n          return null\r\n        }\r\n      },\r\n      addressAutocompleteEnabled() {\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      fullScreenTopicsOnly() {\r\n        return this.$store.state.fullScreen.topicsOnly;\r\n      },\r\n      topicPanelContainerClass() {\r\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\r\n          return 'medium-24 small-order-2 medium-order-1';\r\n        } else if (this.fullScreenMapEnabled) {\r\n          return 'medium-1 small-order-2 medium-order-1';\r\n        } else {\r\n          return 'medium-12 small-order-2 medium-order-1';\r\n        }\r\n      },\r\n      addressContainerClass() {\r\n        if (this.fullScreenTopicsEnabled || this.fullScreenTopicsOnly) {\r\n          return 'small-24 medium-12 large-12';\r\n        } else {\r\n          return 'small-24';\r\n        }\r\n      },\r\n      geocode() {\r\n        return this.$store.state.geocode.data;\r\n      },\r\n      geocodeStatus() {\r\n        return this.$store.state.geocode.status;\r\n      },\r\n      dorParcels() {\r\n        return this.$store.state.parcels.dor.data.length > 0;\r\n      },\r\n      shouldShowGreeting() {\r\n        return !(this.geocode || this.dorParcels);\r\n      },\r\n      // this returns the address shown in the address header\r\n      address() {\r\n        const geocode = this.geocode;\r\n        const dorParcels = this.$store.state.parcels.dor.data;\r\n        const activeDorAddress = this.$store.state.parcels.dor.activeAddress;\r\n        let address;\r\n        // if (this.$config.defaultAddressTextPlaceholder) {\r\n        //   address = this.$config.defaultAddressTextPlaceholder.text;\r\n        // }\r\n\r\n        if (geocode) {\r\n          // TODO make this not ais-specific\r\n          // REVIEW what's the difference between these two?\r\n          const addressA = geocode.properties.street_address;\r\n          const addressB = geocode.street_address;\r\n\r\n          address = addressA || addressB;\r\n\r\n        // a DOR address might be found even if there is no geocode\r\n        } else if (activeDorAddress) {\r\n          address = activeDorAddress;\r\n        }\r\n\r\n        return address;\r\n      },\r\n      zipCode() {\r\n        const geocode = this.geocode;\r\n        if (!geocode) return null;\r\n        const zipCode = geocode.properties.zip_code;\r\n        const zip4 = geocode.properties.zip_4;\r\n        const parts = [zipCode];\r\n        if (zip4) parts.push(zip4);\r\n        return parts.join('-');\r\n      },\r\n    },\r\n    methods: {\r\n      closeAddressCandidateList() {\r\n        this.$store.state.shouldShowAddressCandidateList = false;\r\n      },\r\n      handleWindowResize(pixelAdjustment) {\r\n        // this is called to run when:\r\n        // 1 - TopicPanel.vue mounted\r\n        // 2 - geocodeStatus change\r\n        // 3 - any resizing of the window\r\n\r\n        // const windowHeight = $(window).height();\r\n        const windowHeight = window.innerHeight;\r\n        // const siteHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('site-header')[0]).getPropertyValue('height').replace('px', ''));\r\n        const siteHeaderHeightNum = parseInt(document.getElementsByClassName('site-header')[0].getBoundingClientRect().height);\r\n        // const appFooterHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('app-footer')[0]).getPropertyValue('height').replace('px', ''));\r\n        const appFooterHeightNum = parseInt(document.getElementsByClassName('app-footer')[0].getBoundingClientRect().height);\r\n        let topicsHeight;\r\n\r\n        if (this.shouldShowAddressHeader) {\r\n          if (document.getElementsByClassName('address-header')[0]) {\r\n            // const addressHeaderHeightNum = parseInt(window.getComputedStyle(document.getElementsByClassName('address-header')[0]).getPropertyValue('height').replace('px', ''));\r\n            const addressHeaderHeightNum = parseInt(document.getElementsByClassName('address-header')[0].getBoundingClientRect().height);\r\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - addressHeaderHeightNum;\r\n            // console.log('handleWindowResize shouldShowAddressHeader and it was found, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n            if (typeof pixelAdjustment === 'number') {\r\n              // console.log('handleWindowResize if pixelAdjustment is true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'addressHeaderHeight:', addressHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight, 'pixelAdjustment:', pixelAdjustment);\r\n              topicsHeight = topicsHeight - pixelAdjustment;\r\n            }\r\n          } else {\r\n            topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum - 103;\r\n            // console.log('handleWindowResize shouldShowAddressHeader but it was not found so it is using the hardcoded 103, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n          }\r\n        } else {\r\n          topicsHeight = windowHeight - siteHeaderHeightNum - appFooterHeightNum;\r\n          // console.log('handleWindowResize shouldShowAddressHeader is NOT true, window-height:', windowHeight, 'SiteHeaderHeight:', siteHeaderHeightNum, 'appFooterHeight:', appFooterHeightNum, 'topicsHeight:', topicsHeight);\r\n        }\r\n\r\n        // if ($(window).width() >= 750) {\r\n        if (window.innerWidth >= 750) {\r\n          this.stacked = false;\r\n          if (this.$config.defaultAddressTextPlaceholder) {\r\n            this.defaultAddressTextPlaceholderStyle = this.$config.defaultAddressTextPlaceholder.wideStyle;\r\n          }\r\n          this.addressContainerStyle = {\r\n            'height': '100%',\r\n            'align-items': 'flex-start',\r\n            'padding-left': '20px',\r\n            'padding-top': '20px',\r\n            'padding-bottom': '20px',\r\n          }\r\n          this.addressInputContainerStyle = {\r\n            'height': '100%',\r\n            'align-items': this.inputAlign,\r\n            'padding-top': '30px',\r\n            'padding-bottom': '30px',\r\n          }\r\n          this.topicsContainerStyle.height = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['overflow-y'] = 'auto';\r\n\r\n        } else {\r\n          this.stacked = true;\r\n          if (this.$config.defaultAddressTextPlaceholder) {\r\n            this.defaultAddressTextPlaceholderStyle = this.$config.defaultAddressTextPlaceholder.narrowStyle;\r\n          }\r\n          this.addressContainerStyle = {\r\n            'height': 'auto',\r\n            'align-items': 'center',\r\n            'padding-left': '0px',\r\n            'padding-top': '10px',\r\n            'padding-bottom': '10px',\r\n          }\r\n          this.addressInputContainerStyle = {\r\n            'height': 'auto',\r\n            'align-items': 'center',\r\n            'padding-top': '10px',\r\n            'padding-bottom': '10px',\r\n          }\r\n          this.topicsContainerStyle.height = 'auto';\r\n          this.topicsContainerStyle['min-height'] = topicsHeight.toString() + 'px';\r\n          this.topicsContainerStyle['overflow-y'] = 'hidden';\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style scoped>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .mb-panel-topics {\r\n    position: relative;\r\n  }\r\n\r\n  .address-header {\r\n    background: #daedfe;\r\n    color: #0f4d90;\r\n\r\n    /*this keeps the box shadow over the scrollable part of the panel*/\r\n    position: relative;\r\n    z-index: 1;\r\n\r\n    -webkit-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    -moz-box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    box-shadow: 0px 5px 7px -2px rgba(0,0,0,0.18);\r\n    margin-bottom: -5px !important;\r\n    display: inline-block;\r\n  }\r\n\r\n  .address-header-line-1 {\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    padding-top: 0px !important;\r\n    padding-bottom: 0px !important;\r\n    padding-right: 8px !important;\r\n    padding-left: 8px !important;\r\n  }\r\n\r\n  .address-header-line-2 {\r\n    padding: 0px;\r\n  }\r\n\r\n  .address-header-line-3 {\r\n    padding: 0px;\r\n  }\r\n\r\n  .address-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .address-input-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n\r\n  .topics-container {\r\n    padding: 26px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n  }\r\n\r\n  .default-address-text {\r\n    font-size: 30px;\r\n    line-height: 26px;\r\n    font-family: 'Montserrat', 'Tahoma', sans-serif;\r\n    padding-top: 0px !important;\r\n    padding-bottom: 0px !important;\r\n    padding-right: 8px !important;\r\n    padding-left: 8px !important;\r\n  }\r\n\r\n</style>\r\n","export default {\r\n  watch: {\r\n    activeFeature(nextActiveFeature, prevActiveFeature) {\r\n      // console.log('WATCH active feature', prevActiveFeature, '=>', nextActiveFeature);\r\n\r\n      const layerMap = this.$store.state.map.map._layers;\r\n      const layers = Object.values(layerMap);\r\n\r\n      let updateFeaturePrev,\r\n          updateFeatureNext,\r\n          tableId,\r\n          featureIdPrev,\r\n          featureIdNext,\r\n          matchingLayerNext,\r\n          matchingLayerPrev;\r\n\r\n      if (prevActiveFeature && prevActiveFeature.tableId && prevActiveFeature.featureId) {\r\n        updateFeaturePrev = prevActiveFeature;\r\n        tableId = updateFeaturePrev.tableId\r\n        featureIdPrev = updateFeaturePrev.featureId;\r\n        matchingLayerPrev = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdPrev && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerPrev);\r\n      }\r\n\r\n      if (nextActiveFeature && nextActiveFeature.tableId && nextActiveFeature.featureId) {\r\n        updateFeatureNext = nextActiveFeature;\r\n        tableId = updateFeatureNext.tableId\r\n        featureIdNext = updateFeatureNext.featureId;\r\n        matchingLayerNext = layers.filter(layer => {\r\n          const options = layer.options || {};\r\n          const data = options.data;\r\n          if (!data) return;\r\n          const layerFeatureId = data.featureId;\r\n          const layerTableId = data.tableId;\r\n          return layerFeatureId === featureIdNext && layerTableId === tableId;\r\n        })[0];\r\n        this.updateMarkerFillColor(matchingLayerNext);\r\n        this.bringMarkerToFront(matchingLayerNext);\r\n      }\r\n\r\n    },\r\n  },\r\n  computed: {\r\n    locationMarker() {\r\n      const latlngArray = [this.$store.state.map.location.lat, this.$store.state.map.location.lng]\r\n      const marker = {\r\n        latlng: latlngArray,\r\n        radius: 6,\r\n        fillColor: '#ff3f3f',\r\n        color: '#ff0000',\r\n        weight: 1,\r\n        opacity: 1,\r\n        fillOpacity: 1.0\r\n      }\r\n      return marker;\r\n    },\r\n\r\n    // returns map markers as simple object with a geometry property, key,\r\n    // and optional properties for symbology\r\n    markersForAddress() {\r\n      // console.log('markers-mixin.js markersForAddress computed is running');\r\n      const markers = [];\r\n      // geocoded address marker\r\n      const geocodeGeom = this.geocodeGeom;\r\n      if (this.identifyFeature === 'address-marker' && geocodeGeom) {\r\n        const latlng = [...geocodeGeom.coordinates].reverse();\r\n        const key = this.geocodeResult.properties.street_address;\r\n        const color = '#2176d2';\r\n        const markerType = 'geocode';\r\n        const icon = {\r\n          prefix: 'fas',\r\n          icon: 'map-marker-alt',\r\n          shadow: true,\r\n          size: 50,\r\n        }\r\n        const addressMarker = {latlng, key, color, markerType, icon};\r\n        markers.push(addressMarker);\r\n      }\r\n      return markers;\r\n    },\r\n\r\n    markersForTopic() {\r\n      // console.log('markers-mixin.js markersForTopic computed is running');\r\n      const markers = [];\r\n\r\n      // marker for topic from config\r\n      const topicMarkers = this.activeTopicConfig.markersForTopic;\r\n      if (topicMarkers) {\r\n        const state = this.$store.state;\r\n        const topicData = topicMarkers.data(state);\r\n        if (topicData !== null) {\r\n          // if (Array.isArray(topicData)) {\r\n          //   for (let marker of topicData) {\r\n          //     console.log('topicData marker:', marker);\r\n          //     // }\r\n          //     // if (path !== null && path !== undefined) {\r\n          //     const latlng = [marker.lat, marker.lng];\r\n          //     const key = marker.key;\r\n          //     const color = marker.color || 'green';\r\n          //     const markerType = 'overlay';\r\n          //     const icon = marker.icon;\r\n          //     const markerObject = {latlng, key, color, markerType, icon};\r\n          //     markers.push(markerObject);\r\n          //   }\r\n          // } else {\r\n            const latlng = [topicData[topicMarkers.lat], topicData[topicMarkers.lng]];\r\n            const key = topicData[topicMarkers.key];\r\n            const color = topicMarkers.color || 'green';\r\n            const markerType = 'overlay';\r\n            const icon = topicMarkers.icon;\r\n            const markerObject = {latlng, key, color, markerType, icon};\r\n            markers.push(markerObject);\r\n          // }\r\n        }\r\n      }\r\n      return markers;\r\n    },\r\n\r\n    reactiveCircleMarkers() {\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // const filteredData = this.filteredData;\r\n      let circleMarkers = [];\r\n\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      // console.log('computed circleMarkers is rerunning, filteredData:', filteredData, 'tableIds:', tableIds);\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        // console.log('tableId:', tableId, 'tableConfig:', tableConfig);\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'circle') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          // console.log('tableId', tableId)\r\n          let latlng;\r\n\r\n          // TODO - get geometry field name from config\r\n          if (item.geometry) {\r\n            const [x, y] = item.geometry.coordinates;\r\n            latlng = [y, x];\r\n          } else if (item.lat) {\r\n            latlng = [item.lat, item.lng]\r\n            // if (item.point_x) {\r\n            //   latlng = [item.point_y, item.point_x];\r\n            // } else if (item.geocode_x) {\r\n            //   latlng = [item.geocode_y, item.geocode_x];\r\n            // }\r\n          }\r\n\r\n          // check for active feature TODO - bind style props to state\r\n          let props = Object.assign({}, style);\r\n          props.latlng = latlng;\r\n          props.featureId = item._featureId;\r\n          props.tableId = tableId;\r\n          circleMarkers.push(props);\r\n        }\r\n      }\r\n\r\n      return circleMarkers;\r\n    },\r\n\r\n    // returns geojson parcels to be rendered on the map along with\r\n    // necessary props.\r\n    geojsonParcels() {\r\n      // console.log('markers-mixin.js geojsonParcels computed is running');\r\n      const features = [];\r\n\r\n      const identifyFeature = this.identifyFeature;\r\n      const activeParcelLayer = this.activeParcelLayer;\r\n\r\n      // TODO - get pwd parcel and dor parcel into the config file\r\n      // pwd parcel\r\n      if (identifyFeature === 'pwd-parcel' && activeParcelLayer === 'pwd' && this.pwdParcel) {\r\n        let props = {};\r\n        props.geojson = this.pwdParcel;\r\n        props.color = 'blue';\r\n        props.fillColor = 'blue';\r\n        props.weight = 2;\r\n        props.opacity = 1;\r\n        props.fillOpacity = 0.3;\r\n        props.key = props.geojson.properties.PARCELID;\r\n        features.push(props);\r\n\r\n      // dor parcel\r\n      } else if (identifyFeature === 'dor-parcel' && activeParcelLayer === 'dor') {\r\n        const color = 'blue';\r\n        const dorParcelFeatures = this.dorParcels.map(dorParcel => {\r\n          let props = {};\r\n          props.geojson = dorParcel;\r\n          props.color = 'blue';\r\n          props.fillColor = 'blue';\r\n          props.weight = 2;\r\n          props.opacity = 1;\r\n          props.fillOpacity = 0.3;\r\n          props.key = dorParcel.properties.OBJECTID;\r\n          return props;\r\n        });\r\n        features.push.apply(features, dorParcelFeatures);\r\n      }\r\n      return features;\r\n    },\r\n\r\n    // returns other geojson from config\r\n    geojsonForTopic() {\r\n      const features = [];\r\n      const topicGeojson = this.activeTopicConfig.geojsonForTopic;\r\n      if (topicGeojson) {\r\n        const state = this.$store.state;\r\n        const topicData = topicGeojson.data(state);\r\n        if (topicData !== null) {\r\n          for (let geojson of topicData) {\r\n            let props = Object.assign({}, topicGeojson.style);\r\n            props.key = geojson[topicGeojson.key];\r\n            props.geojson = geojson\r\n            features.push(props);\r\n          }\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    // these geojson features will have mouseover and mouseout events,\r\n    // for highlighting horizontal table rows\r\n    reactiveGeojsonFeatures() {\r\n      const features = [];\r\n\r\n      const filteredData = this.$store.state.horizontalTables.filteredData;\r\n      // get visible tables based on active topic\r\n      const tableIds = this.$store.getters.visibleTableIds;\r\n\r\n      for (let tableId of tableIds) {\r\n        const tableConfig = this.getConfigForTable(tableId) || {};\r\n        const mapOverlay = (tableConfig.options || {}).mapOverlay;\r\n\r\n        if (!mapOverlay || mapOverlay.marker !== 'geojson') {\r\n          continue;\r\n        }\r\n\r\n        const items = filteredData[tableId];\r\n\r\n        if (items.length < 1) {\r\n          continue;\r\n        }\r\n\r\n        const style = mapOverlay.style;\r\n        items.push(tableId);\r\n\r\n        // go through rows\r\n        for (let item of items) {\r\n          let props = Object.assign({}, style);\r\n\r\n          props.geojson = item.geometry;\r\n          props.key = item.id;\r\n          props.featureId = item._featureId || null;\r\n          props.tableId = items[items.length-1];\r\n          features.push(props);\r\n        }\r\n      }\r\n      return features;\r\n    },\r\n\r\n    leafletMarkers() {\r\n      const markers = [];\r\n\r\n      markers.push.apply(markers, this.markers);\r\n      markers.push.apply(markers, this.geojsonParcels);\r\n\r\n      return markers;\r\n    },\r\n  },\r\n  methods: {\r\n    getTableFromComps(comps, tableId) {\r\n      const matchingComps = comps.filter(comp => {\r\n        return (\r\n          comp.type === 'horizontal-table' &&\r\n          comp._id == tableId\r\n        );\r\n      }) || [];\r\n      return matchingComps[0];\r\n    },\r\n    getConfigForTable(tableId) {\r\n      const topics = this.$config.topics || [];\r\n\r\n      for (let topic of topics) {\r\n        const comps = topic.components || [];\r\n\r\n        // try outer comps\r\n        const table = this.getTableFromComps(comps, tableId);\r\n\r\n        if (table) return table;\r\n\r\n        // try inner comps\r\n        for (let comp of comps) {\r\n          const options = comp.options || {};\r\n\r\n          const innerComps = options.components || options.tables || [];\r\n\r\n          if (innerComps.length > 0) {\r\n            const innerTable = this.getTableFromComps(innerComps, tableId);\r\n            // console.log('table on 2nd try', innerTable, innerComps);\r\n\r\n            if (innerTable) return innerTable;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    bringMarkerToFront(circleMarker) {\r\n      // put marker on top\r\n      const el = circleMarker._path;\r\n\r\n      // remove from parent\r\n      const group = circleMarker._renderer._rootGroup;\r\n      group.removeChild(el);\r\n\r\n      // append to end (which brings it to the front)\r\n      group.appendChild(el);\r\n    },\r\n    handleMarkerMouseover(e) {\r\n      // console.log('handleMarkerMouseover is starting');\r\n      if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseover actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerClick(e) {\r\n      // console.log('handleMarkerClick is starting');\r\n      if (this.isMobileOrTablet) {\r\n        // console.log('handleMarkerClick actions are running');\r\n        const { target } = e;\r\n        const { featureId, tableId } = target.options.data;\r\n        // console.log('target:', target, 'featureId:', featureId, 'tableId:', tableId);\r\n        this.$store.commit('setActiveFeature', { featureId, tableId });\r\n      }\r\n    },\r\n    handleMarkerMouseout(e) {\r\n      // console.log('handleMarkerMouseout is starting');\r\n      // if (!this.isMobileOrTablet) {\r\n        // console.log('handleMarkerMouseout actions are running');\r\n        const { target } = e;\r\n        this.$store.commit('setActiveFeature', null);\r\n      // }\r\n    },\r\n    updateMarkerFillColor(marker) {\r\n      // console.log('updateMarkerFillColor, marker:', marker);\r\n      // get next fill color\r\n      const { featureId, tableId } = marker.options.data;\r\n      const nextFillColor = this.fillColorForOverlayMarker(featureId, tableId);\r\n\r\n      // highlight. we're doing this here (non-reactively) because binding the\r\n      // fill color property was not performing well enough.\r\n      const nextStyle = Object.assign({}, marker.options);\r\n      nextStyle.fillColor = nextFillColor;\r\n      marker.setStyle(nextStyle);\r\n    },\r\n  }\r\n};\r\n","<template>\r\n  <div id=\"map-panel-container\"\r\n       :class=\"this.mapPanelContainerClass\"\r\n  >\r\n    <full-screen-map-toggle-tab v-once />\r\n    <map_ :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\"\r\n          id=\"map-tag\"\r\n          :center=\"this.$store.state.map.center\"\r\n          :zoom=\"this.$store.state.map.zoom\"\r\n          @l-click=\"handleMapClick\"\r\n          @l-moveend=\"handleMapMove\"\r\n          zoom-control-position=\"bottomright\"\r\n          :min-zoom=\"this.$config.map.minZoom\"\r\n          :max-zoom=\"this.$config.map.maxZoom\"\r\n    >\r\n    <!-- :class=\"{ 'mb-map-with-widget': this.$store.state.cyclomedia.active || this.$store.state.pictometry.active }\" -->\r\n      <!-- loading mask -->\r\n      <div v-show=\"isGeocoding\" class=\"mb-map-loading-mask\">\r\n        <div class=\"mb-map-loading-mask-inner\">\r\n          <i class=\"fa fa-spinner fa-4x spin\"></i>\r\n          <h1>Finding address...</h1>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- basemaps -->\r\n      <esri-tiled-map-layer v-for=\"(basemap, key) in this.$config.map.basemaps\"\r\n                            v-if=\"activeBasemap === key\"\r\n                            :key=\"key\"\r\n                            :url=\"basemap.url\"\r\n                            :max-zoom=\"basemap.maxZoom\"\r\n                            :attribution=\"basemap.attribution\"\r\n      />\r\n\r\n      <!-- basemap labels and parcels outlines -->\r\n      <esri-tiled-map-layer v-for=\"(tiledLayer, key) in this.$config.map.tiledLayers\"\r\n                            v-if=\"tiledLayers.includes(key)\"\r\n                            :key=\"key\"\r\n                            :url=\"tiledLayer.url\"\r\n                            :zIndex=\"tiledLayer.zIndex\"\r\n                            :attribution=\"tiledLayer.attribution\"\r\n      />\r\n\r\n      <esri-tiled-overlay v-for=\"(tiledLayer, key) in this.$config.map.tiledOverlays\"\r\n                          v-if=\"activeTiledOverlays.includes(key)\"\r\n                          :key=\"key\"\r\n                          :url=\"tiledLayer.url\"\r\n                          :zIndex=\"tiledLayer.zIndex\"\r\n                          :opacity=\"tiledLayer.opacity\"\r\n      />\r\n\r\n      <esri-dynamic-map-layer v-for=\"(dynamicLayer, key) in this.$config.map.dynamicMapLayers\"\r\n                              v-if=\"activeDynamicMaps.includes(key)\"\r\n                              :key=\"key\"\r\n                              :url=\"dynamicLayer.url\"\r\n                              :attribution=\"dynamicLayer.attribution\"\r\n                              :transparent=\"true\"\r\n                              :opacity=\"dynamicLayer.opacity\"\r\n      />\r\n\r\n      <!-- dorParcels, pwdParcels, vacantLand, vacantBuilding -->\r\n      <esri-feature-layer v-for=\"(featureLayer, key) in this.$config.map.featureLayers\"\r\n                          v-if=\"shouldShowFeatureLayer(key, featureLayer.minZoom)\"\r\n                          :key=\"key\"\r\n                          :layerName=\"key\"\r\n                          :url=\"featureLayer.url\"\r\n                          :color=\"featureLayer.color\"\r\n                          :fillColor=\"featureLayer.color\"\r\n                          :fillOpacity=\"featureLayer.fillOpacity\"\r\n                          :weight=\"featureLayer.weight\"\r\n                          :style_=\"featureLayer.style\"\r\n                          :minZoom=\"featureLayer.minZoom\"\r\n                          :maxZoom=\"featureLayer.maxZoom\"\r\n                          :zIndex=\"featureLayer.zIndex\"\r\n                          :markerType=\"featureLayer.markerType\"\r\n                          :radius=\"featureLayer.radius\"\r\n                          :interactive=\"featureLayer.interactive\"\r\n      />\r\n\r\n      <!-- regmaps -->\r\n      <esri-dynamic-map-layer v-for=\"(item, key) in this.imageOverlayItems\"\r\n                              v-if=\"shouldShowImageOverlay(item.properties.RECMAP)\"\r\n                              :key=\"key\"\r\n                              :url=\"'//gis.phila.gov/arcgis/rest/services/Atlas/RegMaps/MapServer'\"\r\n                              :layers=\"[0]\"\r\n                              :layerDefs=\"'0:NAME=\\'g' + item.properties.RECMAP.toLowerCase() + '.tif\\''\"\r\n                              :transparent=\"true\"\r\n                              :opacity=\"0.5\"\r\n      />\r\n      <!-- :url=\"'//gis.phila.gov/arcgis/rest/services/DOR_ParcelExplorer/rtt_basemap/MapServer/'\" -->\r\n      <!-- :url=\"this.imageOverlayInfo.url\"\r\n      :opacity=\"this.imageOverlayInfo.opacity\" -->\r\n\r\n      <!-- address marker -->\r\n      <!-- REVIEW why does this need a key? it's not a list... -->\r\n      <!-- <vector-marker v-if=\"identifyFeature === 'address-marker' && geocodeGeom\"\r\n                    :latlng=\"[...geocodeGeom.coordinates].reverse()\"\r\n                    :key=\"streetAddress\"\r\n      /> -->\r\n\r\n      <!-- NEW METHOD: try rendering markers generically based on marker type -->\r\n      <!-- vector markers -->\r\n      <vector-marker v-for=\"(marker, index) in markersForAddress\"\r\n                     :latlng=\"marker.latlng\"\r\n                     :key=\"marker.key\"\r\n                     :markerColor=\"marker.color\"\r\n                     :icon=\"marker.icon\"\r\n      />\r\n\r\n      <!-- vector markers -->\r\n      <vector-marker v-for=\"(marker, index) in markersForTopic\"\r\n                     :latlng=\"marker.latlng\"\r\n                     :key=\"marker.key\"\r\n                     :markerColor=\"marker.color\"\r\n                     :icon=\"marker.icon\"\r\n      />\r\n\r\n      <!-- marker using a png and ablility to rotate it -->\r\n      <png-marker v-if=\"this.cyclomediaActive\"\r\n                  :icon=\"'images/camera.png'\"\r\n                  :latlng=\"cycloLatlng\"\r\n                  :rotationAngle=\"cycloRotationAngle\"\r\n      />\r\n\r\n      <!-- marker using custom code extending icons - https://github.com/iatkin/leaflet-svgicon -->\r\n      <svg-view-cone-marker v-if=\"this.cyclomediaActive\"\r\n                            :latlng=\"cycloLatlng\"\r\n                            :rotationAngle=\"cycloRotationAngle\"\r\n                            :hFov=\"cycloHFov\"\r\n      />\r\n\r\n\r\n      <!-- non-reactive geojson parcels -->\r\n      <geojson v-for=\"geojsonFeature in geojsonParcels\"\r\n               v-if=\"shouldShowGeojson(geojsonFeature.key)\"\r\n               :geojson=\"geojsonFeature.geojson\"\r\n               :fillColor=\"geojsonFeature.fillColor\"\r\n               :color=\"geojsonFeature.color\"\r\n               :weight=\"geojsonFeature.weight\"\r\n               :opacity=\"geojsonFeature.opacity\"\r\n               :fillOpacity=\"geojsonFeature.fillOpacity\"\r\n               :key=\"geojsonFeature.key\"\r\n               :data=\"{\r\n                 featureId: geojsonFeature.featureId,\r\n                 tableId: geojsonFeature.tableId\r\n               }\"\r\n       />\r\n\r\n      <!-- non-reactive geojson features for topics -->\r\n      <geojson v-for=\"geojsonFeature in geojsonForTopic\"\r\n               v-if=\"shouldShowGeojson(geojsonFeature.key)\"\r\n               :geojson=\"geojsonFeature.geojson\"\r\n               :fillColor=\"geojsonFeature.fillColor\"\r\n               :color=\"geojsonFeature.color\"\r\n               :weight=\"geojsonFeature.weight\"\r\n               :opacity=\"geojsonFeature.opacity\"\r\n               :fillOpacity=\"geojsonFeature.fillOpacity\"\r\n               :key=\"geojsonFeature.key\"\r\n               :data=\"{\r\n                 featureId: geojsonFeature.featureId,\r\n                 tableId: geojsonFeature.tableId\r\n               }\"\r\n       />\r\n\r\n       <!-- reactive geojson features -->\r\n       <geojson v-for=\"geojsonFeature in reactiveGeojsonFeatures\"\r\n                v-if=\"shouldShowGeojson(geojsonFeature.key)\"\r\n                @l-mouseover=\"handleMarkerMouseover\"\r\n                @l-click=\"handleMarkerClick\"\r\n                @l-mouseout=\"handleMarkerMouseout\"\r\n                :geojson=\"geojsonFeature.geojson\"\r\n                :fillColor=\"geojsonFeature.fillColor\"\r\n                :color=\"geojsonFeature.color\"\r\n                :weight=\"geojsonFeature.weight\"\r\n                :opacity=\"geojsonFeature.opacity\"\r\n                :fillOpacity=\"geojsonFeature.fillOpacity\"\r\n                :key=\"geojsonFeature.key\"\r\n                :data=\"{\r\n                  featureId: geojsonFeature.featureId,\r\n                  tableId: geojsonFeature.tableId\r\n                }\"\r\n        />\r\n\r\n       <!-- location marker -->\r\n       <circle-marker v-if=\"this.$store.state.map.location.lat != null\"\r\n                      :latlng=\"this.locationMarker.latlng\"\r\n                      :radius=\"this.locationMarker.radius\"\r\n                      :fillColor=\"this.locationMarker.fillColor\"\r\n                      :color=\"this.locationMarker.color\"\r\n                      :weight=\"this.locationMarker.weight\"\r\n                      :opacity=\"this.locationMarker.opacity\"\r\n                      :fillOpacity=\"this.locationMarker.fillOpacity\"\r\n                      :key=\"Math.random()\"\r\n       />\r\n\r\n       <!-- TODO give these a real key -->\r\n      <circle-marker v-for=\"circleMarker in reactiveCircleMarkers\"\r\n                     @l-mouseover=\"handleMarkerMouseover\"\r\n                     @l-click=\"handleMarkerClick\"\r\n                     @l-mouseout=\"handleMarkerMouseout\"\r\n                     :latlng=\"circleMarker.latlng\"\r\n                     :radius=\"circleMarker.radius\"\r\n                     :fillColor=\"circleMarker.fillColor\"\r\n                   \t :color=\"circleMarker.color\"\r\n                   \t :weight=\"circleMarker.weight\"\r\n                   \t :opacity=\"circleMarker.opacity\"\r\n                   \t :fillOpacity=\"circleMarker.fillOpacity\"\r\n                     :key=\"Math.random()\"\r\n                     :data=\"{\r\n                       featureId: circleMarker.featureId,\r\n                       tableId: circleMarker.tableId\r\n                     }\"\r\n      />\r\n\r\n       <!-- <vector-marker v-for=\"marker in threeOneOneMarkers\"\r\n                      v-if=\"activeTopicConfig.key === 'threeOneOne'\"\r\n                      :latlng=\"[marker.geometry.coordinates[1], marker.geometry.coordinates[0]]\"\r\n                      :key=\"marker.id\"\r\n                      :markerColor=\"'#b2ffb2'\"\r\n       /> -->\r\n\r\n      <!-- CONTROLS: -->\r\n      <!-- basemap control -->\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostright'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <control-corner :vSide=\"'top'\"\r\n                      :hSide=\"'almostleft'\"\r\n      >\r\n      </control-corner>\r\n\r\n      <!-- <basemap-tooltip :position=\"'topright'\"\r\n      /> -->\r\n\r\n      <div v-once>\r\n        <basemap-toggle-control v-if=\"shouldShowImageryToggle\"\r\n                                v-once\r\n                                :position=\"'topright'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <basemap-select-control :position=\"this.basemapSelectControlPosition\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <pictometry-button v-if=\"this.shouldShowPictometryButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'pictometry'\"\r\n                           :imgSrc=\"'images/pictometry.png'\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <cyclomedia-button v-if=\"this.shouldShowCyclomediaButton\"\r\n                           v-once\r\n                           :position=\"'topright'\"\r\n                           :link=\"'cyclomedia'\"\r\n                           :imgSrc=\"'images/cyclomedia.png'\"\r\n                           @click=\"handleCyclomediaButtonClick\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once\r\n           v-if=\"this.measureControlEnabled\"\r\n      >\r\n        <measure-control :position=\"'bottomleft'\" />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <legend-control v-for=\"legendControl in Object.keys(legendControls)\"\r\n                        :key=\"legendControl\"\r\n                        :position=\"'bottomleft'\"\r\n                        :options=\"legendControls[legendControl].options\"\r\n                        :items=\"legendControls[legendControl].data\"\r\n        />\r\n      </div>\r\n\r\n      <div v-once>\r\n        <location-control v-once\r\n                          v-if=\"this.geolocationEnabled\"\r\n                          :position=\"'bottomright'\"\r\n        />\r\n      </div>\r\n\r\n      <!-- <basemap-tooltip :position=\"'bottomalmostleft'\"\r\n      /> -->\r\n\r\n      <!-- <scale-control :vSide=\"'top'\"\r\n                     :hSide=\"'almostright'\"\r\n      >\r\n      </scale-control> -->\r\n\r\n      <div v-once>\r\n        <map-address-input :position=\"this.addressInputPosition\"\r\n                       :placeholder=\"this.addressInputPlaceholder\"\r\n                       :widthFromConfig=\"this.addressInputWidth\"\r\n        >\r\n        </map-address-input>\r\n      </div>\r\n      <map-address-candidate-list v-if=\"this.addressAutocompleteEnabled\"\r\n                              :position=\"this.addressInputPosition\"\r\n                              :widthFromConfig=\"this.addressInputWidth\"\r\n      />\r\n\r\n\r\n      <cyclomedia-recording-circle v-for=\"recording in cyclomediaRecordings\"\r\n                                   v-if=\"cyclomediaActive\"\r\n                                   :key=\"recording.imageId\"\r\n                                   :imageId=\"recording.imageId\"\r\n                                   :latlng=\"[recording.lat, recording.lng]\"\r\n                                   :size=\"1.2\"\r\n                                   :color=\"'#3388ff'\"\r\n                                   :weight=\"1\"\r\n                                   @l-click=\"handleCyclomediaRecordingClick\"\r\n      />\r\n    </map_>\r\n    <slot class='widget-slot' name=\"cycloWidget\" />\r\n    <slot class='widget-slot' name=\"pictWidget\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { geoJSON, featureGroup } from 'leaflet';\r\n  import { marker as Lmarker } from 'leaflet';\r\n\r\n  // mixins\r\n  import markersMixin from './markers-mixin';\r\n  import {\r\n    cyclomediaMixin,\r\n    pictometryMixin,\r\n    Map_,\r\n    Control,\r\n    MapAddressInput,\r\n    MapAddressCandidateList,\r\n    EsriTiledMapLayer,\r\n    EsriTiledOverlay,\r\n    EsriDynamicMapLayer,\r\n    EsriFeatureLayer,\r\n    Geojson,\r\n    CircleMarker,\r\n    // OpacitySlider,\r\n    VectorMarker,\r\n    PngMarker,\r\n    BasemapToggleControl,\r\n    BasemapSelectControl,\r\n    FullScreenMapToggleTab,\r\n    LocationControl,\r\n    CyclomediaButton,\r\n    PictometryButton,\r\n    CyclomediaRecordingCircle,\r\n    CyclomediaRecordingsClient,\r\n    SvgViewConeMarker,\r\n    MeasureControl,\r\n    LegendControl,\r\n    BasemapTooltip,\r\n    ControlCorner,\r\n    EsriWebMap,\r\n    EsriWebMapLayer,\r\n    PopUp,\r\n    PopUpContent,\r\n    Polygon_,\r\n    Polyline_,\r\n    ModalAbout\r\n  } from '@cityofphiladelphia/phila-vue-mapping';\r\n\r\n  export default {\r\n    name: 'MapPanel',\r\n    mixins: [\r\n      markersMixin,\r\n      cyclomediaMixin,\r\n      pictometryMixin,\r\n    ],\r\n    components: {\r\n      Map_,\r\n      Control,\r\n      MapAddressInput,\r\n      MapAddressCandidateList,\r\n      EsriTiledMapLayer,\r\n      EsriTiledOverlay,\r\n      EsriDynamicMapLayer,\r\n      EsriFeatureLayer,\r\n      Geojson,\r\n      CircleMarker,\r\n      // OpacitySlider,\r\n      VectorMarker,\r\n      PngMarker,\r\n      BasemapToggleControl,\r\n      BasemapSelectControl,\r\n      FullScreenMapToggleTab,\r\n      LocationControl,\r\n      PictometryButton,\r\n      CyclomediaButton,\r\n      CyclomediaRecordingCircle,\r\n      SvgViewConeMarker,\r\n      MeasureControl,\r\n      LegendControl,\r\n      BasemapTooltip,\r\n      ControlCorner,\r\n    },\r\n    // data: {\r\n    data() {\r\n      const data = {\r\n        zoomToShape: {\r\n          geojsonParcels: [],\r\n          geojsonForTopic: [],\r\n          markersForAddress: [],\r\n          markersForTopic: [],\r\n        },\r\n      };\r\n      return data;\r\n    },\r\n    created() {\r\n      // if there's a default address, navigate to it\r\n      const defaultAddress = this.$config.defaultAddress;\r\n      if (defaultAddress) {\r\n        this.$controller.goToDefaultAddress(defaultAddress);\r\n      }\r\n\r\n      const cyclomediaConfig = this.$config.cyclomedia || {};\r\n      if (cyclomediaConfig.enabled) {\r\n      // create cyclomedia recordings client\r\n        this.$cyclomediaRecordingsClient = new CyclomediaRecordingsClient(\r\n          this.$config.cyclomedia.recordingsUrl,\r\n          this.$config.cyclomedia.username,\r\n          this.$config.cyclomedia.password,\r\n          4326\r\n        );\r\n      }\r\n    },\r\n    computed: {\r\n      // shouldShowAddressInput() {\r\n      //   if (this.$config.addressInputLocation == 'map') {\r\n      //     return true;\r\n      //   } else {\r\n      //     return false;\r\n      //   }\r\n      // },\r\n      addressAutocompleteEnabled() {\r\n        // TODO tidy up the code\r\n        if (this.$config.addressInput) {\r\n          if (this.$config.addressInput.autocompleteEnabled === true) {\r\n            return true;\r\n          } else {\r\n            return false;\r\n          }\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      addressInputPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topleft'\r\n        } else {\r\n          return 'topalmostleft'\r\n        }\r\n      },\r\n      addressInputWidth() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.mapWidth;\r\n        } else {\r\n          return 415;\r\n        }\r\n      },\r\n      addressInputPlaceholder() {\r\n        if (this.$config.addressInput) {\r\n          return this.$config.addressInput.placeholder;\r\n        } else {\r\n          return null\r\n        }\r\n      },\r\n      basemapSelectControlPosition() {\r\n        if (this.isMobileOrTablet) {\r\n          return 'topright'\r\n        } else {\r\n          return 'topalmostright'\r\n        }\r\n      },\r\n      shouldShowAddressCandidateList() {\r\n        return this.$store.state.shouldShowAddressCandidateList;\r\n      },\r\n      measureControlEnabled() {\r\n        if (this.$config.measureControlEnabled === false) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      mapPanelContainerClass() {\r\n        // return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        if (this.fullScreenMapEnabled) {\r\n          return 'medium-24 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.fullScreenMapOnly) {\r\n          return 'medium-1 small-order-1 small-1 medium-order-2 mb-panel mb-panel-map'\r\n        } else if (this.fullScreenTopicsEnabled) {\r\n          return 'medium-1 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        } else {\r\n          return 'medium-12 small-order-1 small-24 medium-order-2 mb-panel mb-panel-map'\r\n        }\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldShowCyclomediaButton() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldShowPictometryButton() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      geolocationEnabled() {\r\n        if (this.$config.geolocation) {\r\n          return this.$config.geolocation.enabled;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      activeDorParcel() {\r\n        // return this.$store.state.activeDorParcel;\r\n        return this.$store.state.parcels.dor.activeParcel;\r\n      },\r\n      legendControls() {\r\n        return this.$config.legendControls || {};\r\n      },\r\n      imageOverlay() {\r\n        return this.$store.state.map.imageOverlay;\r\n      },\r\n      imageOverlayItems() {\r\n        // console.log('calculating imageOverlayItem');\r\n        if (this.activeTopicConfig.imageOverlayGroup) {\r\n          const overlayGroup = this.activeTopicConfig.imageOverlayGroup;\r\n          const state = this.$store.state;\r\n          const overlay = this.$config.imageOverlayGroups[overlayGroup].items(state);\r\n          // console.log('returning imageOverlayItem', overlay);\r\n          return overlay;\r\n        } else {\r\n          return [];\r\n        }\r\n      },\r\n      imageOverlayInfo() {\r\n        // console.log('config:', this.$config);\r\n        return this.$config.map.dynamicMapLayers.regmaps;\r\n      },\r\n      activeBasemap() {\r\n        const shouldShowImagery = this.$store.state.map.shouldShowImagery;\r\n        if (shouldShowImagery) {\r\n          return this.$store.state.map.imagery;\r\n        }\r\n        const defaultBasemap = this.$config.map.defaultBasemap;\r\n        const basemap = this.$store.state.map.basemap || defaultBasemap;\r\n        return basemap;\r\n      },\r\n      tiledLayers() {\r\n        const activeBasemap = this.activeBasemap;\r\n        const activeBasemapConfig = this.configForBasemap(activeBasemap)\r\n\r\n        return activeBasemapConfig.tiledLayers || [];\r\n      },\r\n      activeTiledOverlays() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.tiledOverlays) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.tiledOverlays;\r\n        }\r\n      },\r\n      activeDynamicMaps() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.dynamicMapLayers) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.dynamicMapLayers;\r\n        }\r\n      },\r\n      activeFeatureLayers() {\r\n        if (!this.activeTopicConfig || !this.activeTopicConfig.featureLayers) {\r\n          return [];\r\n        } else {\r\n          return this.activeTopicConfig.featureLayers;\r\n        }\r\n      },\r\n      activeFeature() {\r\n        return this.$store.state.activeFeature;\r\n      },\r\n      basemaps() {\r\n        return Object.values(this.$config.map.basemaps);\r\n      },\r\n      imageryBasemaps() {\r\n        return this.basemaps.filter(basemap => basemap.type === 'imagery');\r\n      },\r\n      hasImageryBasemaps() {\r\n        return this.imageryBasemaps.length > 0;\r\n      },\r\n      shouldShowImageryToggle() {\r\n        if (this.$config.map.imagery) {\r\n          return this.hasImageryBasemaps && this.$config.map.imagery.enabled;\r\n        } else {\r\n          return this.hasImageryBasemaps;\r\n        }\r\n      },\r\n      identifyFeature() {\r\n        let configFeature;\r\n        if (this.geocodeType === 'intersection') {\r\n          configFeature = \"address-marker\";\r\n        } else if (this.activeTopicConfig.identifyFeature) {\r\n          configFeature = this.activeTopicConfig.identifyFeature;\r\n        } else {\r\n          if (this.$config) {\r\n            configFeature = this.$config.map.defaultIdentifyFeature;\r\n          }\r\n        }\r\n        return configFeature;\r\n      },\r\n      activeTopic() {\r\n        return this.$store.state.activeTopic;\r\n      },\r\n      activeTopicConfig() {\r\n        const key = this.activeTopic;\r\n        let config;\r\n\r\n        // if no active topic, return null\r\n        if (key) {\r\n          config = this.$config.topics.filter((topic) => {\r\n            return topic.key === key;\r\n          })[0];\r\n        }\r\n\r\n        return config || {};\r\n      },\r\n      activeParcelLayer() {\r\n        return this.activeTopicConfig.parcels;\r\n      },\r\n      dorParcels() {\r\n        return this.$store.state.parcels.dor.data;\r\n      },\r\n      pwdParcel() {\r\n        return this.$store.state.parcels.pwd;\r\n      },\r\n      geocodeResult() {\r\n        return this.$store.state.geocode.data || {};\r\n      },\r\n      geocodeGeom() {\r\n        return this.geocodeResult.geometry;\r\n      },\r\n      geocodeType() {\r\n        return this.geocodeResult.ais_feature_type;\r\n      },\r\n      streetAddress() {\r\n        return this.geocodeResult.properties.street_address;\r\n      },\r\n      picOrCycloActive() {\r\n        if (this.cyclomediaActive || this.pictometryActive) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      mapBounds() {\r\n        // TODO calculate map bounds based on leaflet markers above\r\n      },\r\n      boundsBasedOnShape() {\r\n        return this.$store.state.map.boundsBasedOnShape;\r\n      },\r\n      isGeocoding() {\r\n        return this.$store.state.geocode.status === 'waiting';\r\n      },\r\n    },\r\n    watch: {\r\n      picOrCycloActive(value) {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      },\r\n      geojsonForTopic(nextGeojson) {\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        let dzts = this.$data.zoomToShape;\r\n        if (!czts || !czts.includes('geojsonForTopic')) {\r\n          dzts.geojsonForTopic = [];\r\n          return;\r\n        } else {\r\n          dzts.geojsonForTopic = nextGeojson;\r\n          // console.log('exiting geojsonForTopic');\r\n          this.checkBoundsChanges();\r\n        }\r\n      },\r\n\r\n      geojsonParcels(nextGeojson) {\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        let dzts = this.$data.zoomToShape;\r\n        if (!czts || !czts.includes('geojsonParcels')) {\r\n          dzts.geojsonParcels = [];\r\n          return;\r\n        } else {\r\n          dzts.geojsonParcels = nextGeojson;\r\n          // console.log('exiting geojsonParcels');\r\n          this.checkBoundsChanges();\r\n        }\r\n      },\r\n\r\n      markersForAddress(nextMarkers) {\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        let dzts = this.$data.zoomToShape;\r\n        if (!czts || !czts.includes('markersForAddress')) {\r\n          dzts.markersForAddress = [];\r\n          return;\r\n        } else {\r\n          dzts.markersForAddress = nextMarkers;\r\n          // console.log('exiting markersForAddress')\r\n          this.checkBoundsChanges();\r\n        }\r\n      },\r\n\r\n      // watches computed markersForTopic, adds info to data zoomToShape.markersForTopic\r\n      // it does not update zoomToShape unless there is a change\r\n      // because the markers computed recalculates extremely often, this is needed\r\n      markersForTopic(nextMarkers) {\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        let dzts = this.$data.zoomToShape;\r\n        if (!czts || !czts.includes('markersForTopic')) {\r\n        // if (!czts.includes('markersForTopic')) {\r\n          dzts.markersForTopic = [];\r\n          return;\r\n        } else {\r\n          dzts.markersForTopic = nextMarkers;\r\n          // console.log('exiting markersForTopic');\r\n          this.checkBoundsChanges();\r\n        }\r\n      },\r\n\r\n      fullScreenTopicsEnabled() {\r\n        this.$nextTick(() => {\r\n          this.$store.state.map.map.invalidateSize();\r\n        })\r\n      },\r\n    },\r\n    methods: {\r\n      checkBoundsChanges() {\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        if (!czts) {\r\n          return;\r\n        }\r\n        let dzts = this.$data.zoomToShape;\r\n        // console.log('dzts:', dzts, 'czts:', czts);\r\n        let tf = [];\r\n        for (let shape of czts) {\r\n          if (dzts[shape] !== false && dzts[shape].length > 0) {\r\n            tf.push(true);\r\n          } else {\r\n            tf.push(false);\r\n          }\r\n        }\r\n        // console.log('MapPanel.vue checkBoundsChanges, tf:', tf);\r\n        if (tf.includes(false)) {\r\n          return;\r\n        } else {\r\n          this.setMapToBounds();\r\n        }\r\n      },\r\n\r\n      setMapToBounds() {\r\n        // console.log('setMapToBounds is running');\r\n        let featureArray = []\r\n        let czts = this.activeTopicConfig.zoomToShape;\r\n        if (czts) {\r\n          if (czts.includes('geojsonParcels')) {\r\n            for (let geojsonFeature of this.geojsonParcels) {\r\n              featureArray.push(geoJSON(geojsonFeature.geojson))\r\n              // featureArray.push(L.geoJSON(geojsonFeature.geojson))\r\n            }\r\n          }\r\n          if (czts.includes('geojsonForTopic')) {\r\n            for (let geojsonFeature of this.geojsonForTopic) {\r\n              featureArray.push(geoJSON(geojsonFeature.geojson))\r\n              // featureArray.push(L.geoJSON(geojsonFeature.geojson))\r\n            }\r\n          }\r\n          if (czts.includes('markersForAddress')) {\r\n            for (let marker of this.markersForAddress) {\r\n              featureArray.push(Lmarker(marker.latlng))\r\n              // featureArray.push(L.marker(marker.latlng))\r\n            }\r\n          }\r\n          if (czts.includes('markersForTopic')) {\r\n            for (let marker of this.markersForTopic) {\r\n              featureArray.push(Lmarker(marker.latlng))\r\n              // featureArray.push(L.marker(marker.latlng))\r\n            }\r\n          }\r\n          const group = new featureGroup(featureArray);\r\n          // const group = new L.featureGroup(featureArray);\r\n          const bounds = group.getBounds();\r\n          this.$store.commit('setMapBounds', bounds);\r\n        }\r\n      },\r\n      configForBasemap(basemap) {\r\n        return this.$config.map.basemaps[basemap] || {};\r\n      },\r\n      shouldShowGeojson(key) {\r\n        if (this.activeTopicConfig.basemap === 'pwd') {\r\n          return true;\r\n        } else {\r\n          return key === this.activeDorParcel;\r\n        }\r\n      },\r\n      shouldShowImageOverlay(key) {\r\n        return key === this.imageOverlay;\r\n      },\r\n      shouldShowFeatureLayer(key) {\r\n        if (this.activeFeatureLayers.includes(key)) {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n      handleMapClick(e) {\r\n        // console.log('MapPanel.vue handleMapClick e:', e);\r\n        // latLng = L.latLng(e.lat, e.lng)\r\n        this.$controller.handleMapClick(e);\r\n      },\r\n\r\n      handleMapMove(e) {\r\n        const map = this.$store.state.map.map;\r\n\r\n        const pictometryConfig = this.$config.pictometry || {};\r\n\r\n        const center = map.getCenter();\r\n        const { lat, lng } = center;\r\n        const coords = [lng, lat];\r\n\r\n        if (pictometryConfig.enabled) {\r\n          // update state for pictometry\r\n          this.$store.commit('setPictometryMapCenter', coords);\r\n\r\n          const zoom = map.getZoom();\r\n          this.$store.commit('setPictometryMapZoom', zoom);\r\n        }\r\n\r\n        const cyclomediaConfig = this.$config.cyclomedia || {};\r\n\r\n        if (cyclomediaConfig.enabled) {\r\n          // update cyclo recordings\r\n          this.updateCyclomediaRecordings();\r\n          this.$store.commit('setCyclomediaLatLngFromMap', [lat, lng]);\r\n        }\r\n      },\r\n      fillColorForOverlayMarker(markerId, tableId) {\r\n        // get map overlay style and hover style for table\r\n        const tableConfig = this.getConfigForTable(tableId);\r\n        const mapOverlay = tableConfig.options.mapOverlay;\r\n        const { style, hoverStyle } = mapOverlay;\r\n\r\n        // compare id to active feature id\r\n        const activeFeature = this.activeFeature;\r\n        const useHoverStyle = (\r\n          markerId === activeFeature.featureId &&\r\n          tableId === activeFeature.tableId\r\n        );\r\n        const curStyle = useHoverStyle ? hoverStyle : style;\r\n\r\n        return curStyle.fillColor;\r\n      },\r\n    }, // end of methods\r\n  }; //end of export\r\n</script>\r\n\r\n<style scoped>\r\n  .mb-panel-map {\r\n    /*this allows the loading mask to fill the div*/\r\n    position: relative;\r\n  }\r\n\r\n  .mb-map-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  .widget-slot {\r\n    display: inline-block;\r\n    float: left;\r\n  }\r\n\r\n  .mb-map-loading-mask {\r\n    /*display: inline;*/\r\n    position: absolute;\r\n    top: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: rgba(0, 0 ,0 , 0.25);\r\n    z-index: 1000;\r\n    text-align: center;\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .mb-map-loading-mask-inner {\r\n    position: absolute;\r\n    top: 40%;\r\n    left: 40%;\r\n  }\r\n\r\n  /*small retina*/\r\n  /*@media\r\n  (-webkit-min-device-pixel-ratio: 2),\r\n  (min-resolution: 192dpi),\r\n  (max-width: 39.9375em) {\r\n    .mb-search-control-input {\r\n      max-width: 250px;\r\n    }\r\n  }*/\r\n\r\n</style>\r\n","<template>\r\n  <div id=\"mb-root\"\r\n       :class=\"rootClass\"\r\n       :style=\"mbRootStyle\"\r\n  >\r\n\r\n    <!-- <header-comp v-if=\"shouldShowHeader\" /> -->\r\n\r\n    <!-- <div id=\"mb-root\"\r\n         :class=\"rootClass\"\r\n         :style=\"mbRootStyle\"\r\n    > -->\r\n        <topic-panel :class=\"this.shouldShowTopicPanel\" />\r\n\r\n        <map-panel :class=\"this.shouldShowMapPanel\"\r\n                   v-if=\"this.fullScreenTopicsOnly !== true\"\r\n        >\r\n          <cyclomedia-widget v-if=\"this.shouldLoadCyclomediaWidget\"\r\n                             slot=\"cycloWidget\"\r\n                             v-show=\"cyclomediaActive\"\r\n                             screen-percent=\"2\"\r\n          />\r\n          <pictometry-widget v-if=\"this.shouldLoadPictometryWidget\"\r\n                             slot=\"pictWidget\"\r\n                             v-show=\"pictometryActive\"\r\n                             :apiKey=\"this.ak\"\r\n                             :secretKey=\"this.sk\"\r\n          >\r\n            <pictometry-png-marker v-if=\"this.pictometryShowAddressMarker\"\r\n                        :latlng=\"[this.geocodeData.geometry.coordinates[1], this.geocodeData.geometry.coordinates[0]]\"\r\n                        :icon=\"'images/markers.png'\"\r\n                        :height=\"60\"\r\n                        :width=\"40\"\r\n                        :offsetX=\"0\"\r\n                        :offsetY=\"0\"\r\n            />\r\n            <pictometry-layer v-if=\"this.pictometryActive\" />\r\n            <pictometry-png-marker v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                        :latlng=\"cycloLatlng\"\r\n                        :icon=\"'images/camera2.png'\"\r\n                        :height=\"20\"\r\n                        :width=\"30\"\r\n                        :offsetX=\"-2\"\r\n                        :offsetY=\"-2\"\r\n            />\r\n            <pictometry-view-cone v-if=\"this.cyclomediaActive && this.pictometryActive\"\r\n                       :latlng=\"cycloLatlng\"\r\n                       :rotationAngle=\"cycloRotationAngle\"\r\n                       :hFov=\"cycloHFov\"\r\n            />\r\n          </pictometry-widget>\r\n        </map-panel>\r\n\r\n        <!-- <popover\r\n                 v-if=\"popoverOpen\"\r\n                 :options=\"this.popoverOptions\"\r\n                 :slots=\"{'text': this.popoverText}\"\r\n        /> -->\r\n        <!-- v-if=\"popoverOpen && popoverText.length > 0\" -->\r\n    <!-- </div> -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // import HeaderComp from './HeaderComp.vue';\r\n  import TopicPanel from './TopicPanel.vue';\r\n  import MapPanel from './MapPanel.vue';\r\n\r\n  import {\r\n    CyclomediaWidget,\r\n    PictometryWidget,\r\n    PictometryLayer,\r\n    PictometryViewCone,\r\n    PictometryPngMarker\r\n  } from '@cityofphiladelphia/phila-vue-mapping';\r\n  import { Popover } from '@cityofphiladelphia/phila-vue-comps';\r\n\r\n  export default {\r\n    components: {\r\n      // HeaderComp,\r\n      TopicPanel,\r\n      MapPanel,\r\n      CyclomediaWidget,\r\n      PictometryWidget,\r\n      PictometryLayer,\r\n      PictometryPngMarker,\r\n      PictometryViewCone,\r\n      Popover,\r\n    },\r\n    data() {\r\n      const data = {\r\n        // this will only affect the app size if the app is set to \"plugin\" mode\r\n        mbRootStyle: {\r\n          'height': '100px'\r\n        }\r\n      };\r\n      return data;\r\n    },\r\n    created() {\r\n      console.log('mapboard created, this.$config:', this.$config);\r\n      if (this.$config.panels) {\r\n        if (!this.$config.panels.includes('map')) {\r\n          this.$store.commit('setTopicsOnly', true);\r\n        } else if (!this.$config.panels.includes('topics')) {\r\n          this.$store.commit('setMapOnly', true);\r\n        }\r\n      }\r\n      window.addEventListener('click', this.closeAddressCandidateList);\r\n      window.addEventListener('resize', this.handleWindowResize);\r\n      this.handleWindowResize();\r\n    },\r\n    mounted() {\r\n      this.$controller.appDidLoad();\r\n      if (this.$config.initialPopover && window.location.hash == '') {\r\n        this.$store.commit('setPopoverOpen', true);\r\n        this.$store.commit('setPopoverOptions', this.$config.initialPopover.options);\r\n        if (this.$config.initialPopover.slots) {\r\n          this.$store.commit('setPopoverText', this.$config.initialPopover.slots.text);\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      shouldShowHeader() {\r\n        if (this.$config.header) {\r\n          return this.$config.header.enabled;\r\n        } else {\r\n          return false;\r\n        }\r\n      },\r\n      rootClass() {\r\n        if (this.$config.plugin) {\r\n          return 'grid-x';\r\n        } else {\r\n          return 'cell medium-auto grid-x';\r\n        }\r\n      },\r\n      isMobileOrTablet() {\r\n        return this.$store.state.isMobileOrTablet;\r\n      },\r\n      shouldLoadCyclomediaWidget() {\r\n        return this.$config.cyclomedia.enabled && !this.isMobileOrTablet;\r\n      },\r\n      shouldLoadPictometryWidget() {\r\n        return this.$config.pictometry.enabled && !this.isMobileOrTablet;\r\n      },\r\n      fullScreenMapOnly() {\r\n        return this.$store.state.fullScreen.mapOnly;\r\n      },\r\n      fullScreenMapEnabled() {\r\n        return this.$store.state.fullScreenMapEnabled;\r\n      },\r\n      fullScreenTopicsOnly() {\r\n        return this.$store.state.fullScreen.topicsOnly;\r\n      },\r\n      fullScreenTopicsEnabled() {\r\n        return this.$store.state.fullScreenTopicsEnabled;\r\n      },\r\n      shouldShowTopicPanel() {\r\n        let value;\r\n        if (!this.fullScreenMapEnabled && !this.fullScreenMapOnly) {\r\n          value = 'topic-panel-true';\r\n        } else {\r\n          value = 'topic-panel-false';\r\n        }\r\n        return value;\r\n      },\r\n      shouldShowMapPanel() {\r\n        let value;\r\n        if (!this.fullScreenTopicsEnabled && !this.fullScreenTopicsOnly) {\r\n          value = 'map-panel-true';\r\n        } else {\r\n          value = 'map-panel-false';\r\n        }\r\n        return value;\r\n      },\r\n      cyclomediaActive() {\r\n        return this.$store.state.cyclomedia.active\r\n      },\r\n      cycloLatlng() {\r\n        if (this.$store.state.cyclomedia.orientation.xyz !== null) {\r\n          const xyz = this.$store.state.cyclomedia.orientation.xyz;\r\n          return [xyz[1], xyz[0]];\r\n        } else {\r\n          const center = this.$config.map.center;\r\n          return center;\r\n        }\r\n      },\r\n      cycloRotationAngle() {\r\n        return this.$store.state.cyclomedia.orientation.yaw * (180/3.14159265359);\r\n      },\r\n      cycloHFov() {\r\n        return this.$store.state.cyclomedia.orientation.hFov;\r\n      },\r\n      pictometryActive() {\r\n        return this.$store.state.pictometry.active\r\n      },\r\n      pictometryZoom() {\r\n        return this.$store.state.pictometry.zoom\r\n      },\r\n      pictometryShowAddressMarker() {\r\n        if (!this.pictometryActive || !this.geocodeData) {\r\n          return false;\r\n        } else if (this.pictometryZoom < 20 && this.cyclomediaActive) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      },\r\n      geocodeData() {\r\n        return this.$store.state.geocode.data\r\n      },\r\n      ak() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.apiKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.apiKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.apiKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.apiKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.apiKey;\r\n        }\r\n      },\r\n      sk() {\r\n        const host = window.location.hostname;\r\n        if (host === 'atlas.phila.gov') {\r\n          return this.$config.pictometry.secretKey;\r\n        }\r\n        if (host === 'atlas-dev.phila.gov') {\r\n          return this.$config.pictometryDev.secretKey;\r\n        }\r\n        if (host === 'cityatlas.phila.gov') {\r\n          return this.$config.pictometryCity.secretKey;\r\n        }\r\n        if (host === 'cityatlas-dev.phila.gov') {\r\n          return this.$config.pictometryCityDev.secretKey;\r\n        }\r\n        if (host === '10.8.101.67') {\r\n          return this.$config.pictometryLocal.secretKey;\r\n        }\r\n      },\r\n      popoverOpen() {\r\n        return this.$store.state.popover.open;\r\n      },\r\n      popoverText() {\r\n        return this.$store.state.popover.text;\r\n      },\r\n      popoverOptions() {\r\n        return this.$store.state.popover.options;\r\n      }\r\n    },\r\n    watch: {\r\n      pictometryShowAddressMarker(nextValue) {\r\n        console.log('watch pictometryShowAddressMarker', nextValue);\r\n      }\r\n    },\r\n    methods: {\r\n      closeAddressCandidateList() {\r\n        this.$store.commit('setShouldShowAddressCandidateList', false);\r\n      },\r\n      handleWindowResize() {\r\n        // this only actually affects the size if it is set to \"plugin mode\"\r\n        // if ($(window).width() >= 750) {\r\n        if (window.innerWidth >= 750) {\r\n          this.mbRootStyle.height = '600px'\r\n        } else {\r\n          this.mbRootStyle.height = 'auto';\r\n        }\r\n      }\r\n    },\r\n  };\r\n</script>\r\n\r\n<style>\r\n  /*don't highlight any form elements*/\r\n  input:focus,\r\n  select:focus,\r\n  textarea:focus,\r\n  button:focus {\r\n    outline: none;\r\n  }\r\n\r\n  .mb-panel-topics-with-widget {\r\n    height: 50%;\r\n  }\r\n\r\n  /* standards applies padding to buttons, which causes some weirdness with\r\n  buttons on the map panel. override here. */\r\n  button {\r\n    padding: inherit;\r\n  }\r\n\r\n  .topic-panel-false {\r\n    /* display: none; */\r\n  }\r\n\r\n  @media screen and (min-width: 46.875em) {\r\n    .topic-panel-false {\r\n      display: none;\r\n    }\r\n\r\n    .map-panel-false {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n</style>\r\n","function generateUniqueId() {\r\n  return Math.random().toString(36).substring(7);\r\n}\r\n\r\nexport default generateUniqueId;\r\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'spinner';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f110';\nvar svgPathData = 'M304 48c0 26.51-21.49 48-48 48s-48-21.49-48-48 21.49-48 48-48 48 21.49 48 48zm-48 368c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zm208-208c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.49-48-48-48zM96 256c0-26.51-21.49-48-48-48S0 229.49 0 256s21.49 48 48 48 48-21.49 48-48zm12.922 99.078c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.491-48-48-48zm294.156 0c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48c0-26.509-21.49-48-48-48zM108.922 60.922c-26.51 0-48 21.49-48 48s21.49 48 48 48 48-21.49 48-48-21.491-48-48-48z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faSpinner = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'book';\nvar width = 448;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f02d';\nvar svgPathData = 'M448 360V24c0-13.3-10.7-24-24-24H96C43 0 0 43 0 96v320c0 53 43 96 96 96h328c13.3 0 24-10.7 24-24v-16c0-7.5-3.5-14.3-8.9-18.7-4.2-15.4-4.2-59.3 0-74.7 5.4-4.3 8.9-11.1 8.9-18.6zM128 134c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm0 64c0-3.3 2.7-6 6-6h212c3.3 0 6 2.7 6 6v20c0 3.3-2.7 6-6 6H134c-3.3 0-6-2.7-6-6v-20zm253.4 250H96c-17.7 0-32-14.3-32-32 0-17.6 14.4-32 32-32h285.4c-1.9 17.1-1.9 46.9 0 64z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faBook = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'wrench';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0ad';\nvar svgPathData = 'M507.73 109.1c-2.24-9.03-13.54-12.09-20.12-5.51l-74.36 74.36-67.88-11.31-11.31-67.88 74.36-74.36c6.62-6.62 3.43-17.9-5.66-20.16-47.38-11.74-99.55.91-136.58 37.93-39.64 39.64-50.55 97.1-34.05 147.2L18.74 402.76c-24.99 24.99-24.99 65.51 0 90.5 24.99 24.99 65.51 24.99 90.5 0l213.21-213.21c50.12 16.71 107.47 5.68 147.37-34.22 37.07-37.07 49.7-89.32 37.91-136.73zM64 472c-13.25 0-24-10.75-24-24 0-13.26 10.75-24 24-24s24 10.74 24 24c0 13.25-10.75 24-24 24z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faWrench = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'university';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f19c';\nvar svgPathData = 'M496 128v16a8 8 0 0 1-8 8h-24v12c0 6.627-5.373 12-12 12H60c-6.627 0-12-5.373-12-12v-12H24a8 8 0 0 1-8-8v-16a8 8 0 0 1 4.941-7.392l232-88a7.996 7.996 0 0 1 6.118 0l232 88A8 8 0 0 1 496 128zm-24 304H40c-13.255 0-24 10.745-24 24v16a8 8 0 0 0 8 8h464a8 8 0 0 0 8-8v-16c0-13.255-10.745-24-24-24zM96 192v192H60c-6.627 0-12 5.373-12 12v20h416v-20c0-6.627-5.373-12-12-12h-36V192h-64v192h-64V192h-64v192h-64V192H96z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faUniversity = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar prefix = 'fas';\nvar iconName = 'gavel';\nvar width = 512;\nvar height = 512;\nvar ligatures = [];\nvar unicode = 'f0e3';\nvar svgPathData = 'M504.971 199.362l-22.627-22.627c-9.373-9.373-24.569-9.373-33.941 0l-5.657 5.657L329.608 69.255l5.657-5.657c9.373-9.373 9.373-24.569 0-33.941L312.638 7.029c-9.373-9.373-24.569-9.373-33.941 0L154.246 131.48c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l5.657-5.657 39.598 39.598-81.04 81.04-5.657-5.657c-12.497-12.497-32.758-12.497-45.255 0L9.373 412.118c-12.497 12.497-12.497 32.758 0 45.255l45.255 45.255c12.497 12.497 32.758 12.497 45.255 0l114.745-114.745c12.497-12.497 12.497-32.758 0-45.255l-5.657-5.657 81.04-81.04 39.598 39.598-5.657 5.657c-9.373 9.373-9.373 24.569 0 33.941l22.627 22.627c9.373 9.373 24.569 9.373 33.941 0l124.451-124.451c9.372-9.372 9.372-24.568 0-33.941z';\n\nexports.definition = {\n  prefix: prefix,\n  iconName: iconName,\n  icon: [\n    width,\n    height,\n    ligatures,\n    unicode,\n    svgPathData\n  ]};\n\nexports.faGavel = exports.definition;\nexports.prefix = prefix;\nexports.iconName = iconName;\nexports.width = width;\nexports.height = height;\nexports.ligatures = ligatures;\nexports.unicode = unicode;\nexports.svgPathData = svgPathData;","import Vue from 'vue';\r\nimport axios from 'axios';\r\nimport createStore from './store';\r\nimport configMixin from './util/config-mixin';\r\nimport Mapboard from './components/Mapboard.vue';\r\nimport mergeDeep from './util/merge-deep';\r\nimport generateUniqueId from './util/unique-id';\r\n\r\n// Font Awesome Icons\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons/faSpinner';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons/faBook';\r\nimport { faWrench } from '@fortawesome/free-solid-svg-icons/faWrench';\r\nimport { faUniversity } from '@fortawesome/free-solid-svg-icons/faUniversity';\r\nimport { faGavel } from '@fortawesome/free-solid-svg-icons/faGavel';\r\nlibrary.add(faSpinner, faBook, faWrench, faUniversity, faGavel);\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome'\r\n\r\nimport philaVueDatafetch from '@cityofphiladelphia/phila-vue-datafetch';\r\nconst controllerMixin = philaVueDatafetch.controllerMixin;\r\n\r\n// helper function to auto-assign ids to horizontal tables\r\nfunction assignTableIds(comps) {\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.components || options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (innerComps) {\r\n      assignTableIds(innerComps);\r\n      // return;\r\n    }\r\n\r\n    // skip comps that aren't horizontal tables\r\n    if (comp.type !== 'horizontal-table') {\r\n      continue;\r\n    }\r\n\r\n     const id = generateUniqueId();\r\n     comp._id = id;\r\n     // the id also needs to get passed to the horizontal table component, so\r\n     // use the options object.\r\n     comp.options.tableId = id;\r\n  }\r\n}\r\n\r\nfunction assignHorizontalTableGroupIds(comps) {\r\n  for (let comp of comps) {\r\n    const options = comp.options || {};\r\n    const innerComps = options.tables;\r\n\r\n    // if this is a \"group\" component, recurse\r\n    if (!innerComps) {\r\n      continue;\r\n    }\r\n\r\n    // skip comps that aren't horizontal table groups\r\n    if (comp.type !== 'horizontal-table-group') {\r\n      continue;\r\n    }\r\n\r\n     const id = generateUniqueId();\r\n     comp._id = id;\r\n     // the id also needs to get passed to the horizontal table component, so\r\n     // use the options object.\r\n     comp.options.horizontalTableGroupId = id;\r\n  }\r\n}\r\n\r\nfunction initMapboard(clientConfig) {\r\n  const baseConfigUrl = clientConfig.baseConfig;\r\n  // console.log('baseConfigUrl:', baseConfigUrl);\r\n\r\n  // get base config\r\n  return axios.get(baseConfigUrl).then(response => {\r\n    // console.log('in axios, clientConfig:', clientConfig);\r\n    const data = response.data;\r\n    // const data = baseConfigUrl;\r\n\r\n    // parse raw js. yes, it's ok to use eval :)\r\n    // http://stackoverflow.com/a/87260/676001\r\n    const baseConfigFn = eval(data);\r\n    const { gatekeeperKey } = clientConfig;\r\n    const baseConfig = baseConfigFn({ gatekeeperKey });\r\n\r\n    // deep merge base config and client config\r\n    const config = mergeDeep(baseConfig, clientConfig);\r\n    // const config = mergeDeep(baseConfigUrl, clientConfig);\r\n\r\n    // assign table ids\r\n    for (let topic of config.topics) {\r\n      assignTableIds(topic.components);\r\n      assignHorizontalTableGroupIds(topic.components);\r\n    }\r\n\r\n    // make config accessible from each component via this.$config\r\n    Vue.use(configMixin, config);\r\n\r\n    // create store\r\n    const store = createStore(config);\r\n\r\n    // mix in controller\r\n    Vue.use(controllerMixin, { config, store });\r\n    // Vue.use(controllerMixin, { config, store, eventBus });\r\n\r\n    Vue.component('font-awesome-icon', FontAwesomeIcon);\r\n    // Vue.config.productionTip = false\r\n\r\n    const customComps = clientConfig.customComps || [];\r\n    // console.log('mapboard main.js, customComps:', customComps);\r\n    for (let key of Object.keys(customComps)) {\r\n      Vue.component(key, customComps[key]);\r\n    }\r\n\r\n    // mount main vue\r\n    const vm = new Vue({\r\n      el: config.el || '#mapboard',\r\n      render: h => h(Mapboard),\r\n      store\r\n    });\r\n\r\n  }).catch(err => {\r\n    console.error('Error loading base config:', err);\r\n  });\r\n}\r\n\r\nexport default initMapboard;\r\n\r\n// also expose the vue component as a named export\r\nexport { Mapboard };\r\n"],"names":["const","userAgent","navigator","vendor","window","opera","test","substr","isObject","item","Array","isArray","mergeDeep","target","source","let","output","Object","assign","keys","forEach","key","pvdStore","philaVueDatafetch","pvmStore","philaVueMapping","pvcStore","philaVueComps","getHorizontalTableIdsFromComps","comps","tableIds","comp","options","innerComps","components","tables","innerTableIds","concat","type","tableId","_id","push","createFilteredData","config","topics","compTableIds","filteredData","index","length","getHorizontalTableGroupIdsFromComps","tableGroupId","createHorizontalTableGroups","tableGroupIds","compTableGroupId","horizontalTableGroups","activeTable","activeTableId","createStore","sources","createSources","parcels","createParcels","initialState","isMobileOrTablet","isMobileDevice","fullScreen","mapOnly","topicsOnly","fullScreenMapEnabled","candidates","addressEntered","horizontalTables","activeFeature","featureId","appData","propertyBalance","modals","open","map","initialImagery","imagery","mb","state","getters","visibleTableIds","activeTopic","filter","topic","compTableGroup","array","mutations","setIsMobileOrTablet","payload","setMapOnly","setTopicsOnly","setFullScreenMapEnabled","setLocation","location","lat","lng","setWatchPositionOn","watchPositionOn","setHorizontalTableGroupActiveTable","setHorizontalTableFilteredData","data","setMapFilters","filters","setMap","setMapBounds","bounds","setMapBoundsBasedOnShape","boundsBasedOnShape","setActiveParcel","parcelLayer","activeParcel","activeAddress","activeMapreg","setActiveFeature","nextActiveFeature","setImageOverlay","imageOverlay","setImageOverlayOpacity","imageOverlayOpacity","setCandidates","setAddressEntered","setPropertyBalance","setDidToggleModal","name","mergeStore","store","center","zoom","pictometry","Vuex","Store","Vue","mixin","created","this","$config","use","render","Greeting","TopicComponentGroup","Topic","AnyHeader","AddressInput","AddressCandidateList","FullScreenTopicsToggleTab","defaultAddressTextPlaceholderStyle","topicsContainerStyle","overflow-y","height","min-height","addressContainerStyle","align-items","padding-left","padding-top","padding-bottom","addressInputContainerStyle","stacked","mounted","addEventListener","closeAddressCandidateList","handleWindowResize","watch","geocodeStatus","computed","greetingText","greeting","message","greetingOptions","shouldShowAddressHeader","fullScreenTopicsOnly","shouldShowGreeting","addressHeaderAdditionalHeaderOptions","addressHeaderAdditionalInfo","ahai","headerType","addressHeaderAdditionalHeaderSlots","text","geocode","returned","preText","properties","console","log","join","inputAlign","addressInput","position","addressInputWidth","width","addressInputPlaceholder","placeholder","addressAutocompleteEnabled","autocompleteEnabled","$store","fullScreenTopicsEnabled","topicPanelContainerClass","addressContainerClass","status","dorParcels","dor","address","activeDorAddress","addressA","street_address","addressB","zipCode","zip_code","zip4","zip_4","parts","methods","shouldShowAddressCandidateList","pixelAdjustment","topicsHeight","windowHeight","innerHeight","siteHeaderHeightNum","parseInt","document","getElementsByClassName","getBoundingClientRect","appFooterHeightNum","innerWidth","defaultAddressTextPlaceholder","wideStyle","toString","narrowStyle","prevActiveFeature","updateFeaturePrev","updateFeatureNext","featureIdPrev","featureIdNext","matchingLayerNext","matchingLayerPrev","layerMap","_layers","layers","values","layer","layerFeatureId","layerTableId","updateMarkerFillColor","bringMarkerToFront","locationMarker","latlng","radius","fillColor","color","weight","opacity","fillOpacity","markersForAddress","markers","geocodeGeom","identifyFeature","addressMarker","coordinates","reverse","geocodeResult","prefix","icon","shadow","size","markersForTopic","topicMarkers","activeTopicConfig","topicData","markerObject","reactiveCircleMarkers","circleMarkers","mapOverlay","getConfigForTable","marker","items","style","geometry","x","props","_featureId","geojsonParcels","features","activeParcelLayer","pwdParcel","geojson","PARCELID","dorParcelFeatures","dorParcel","OBJECTID","apply","geojsonForTopic","topicGeojson","reactiveGeojsonFeatures","id","leafletMarkers","getTableFromComps","table","innerTable","circleMarker","el","_path","group","_renderer","_rootGroup","removeChild","appendChild","handleMarkerMouseover","e","commit","handleMarkerClick","handleMarkerMouseout","nextFillColor","fillColorForOverlayMarker","nextStyle","setStyle","on","mixins","markersMixin","cyclomediaMixin","pictometryMixin","Map_","Control","MapAddressInput","MapAddressCandidateList","EsriTiledMapLayer","EsriTiledOverlay","EsriDynamicMapLayer","EsriFeatureLayer","Geojson","CircleMarker","VectorMarker","PngMarker","BasemapToggleControl","BasemapSelectControl","FullScreenMapToggleTab","LocationControl","PictometryButton","CyclomediaButton","CyclomediaRecordingCircle","SvgViewConeMarker","MeasureControl","LegendControl","BasemapTooltip","ControlCorner","zoomToShape","defaultAddress","enabled","$cyclomediaRecordingsClient","cyclomedia","addressInputPosition","basemapSelectControlPosition","measureControlEnabled","mapPanelContainerClass","cycloLatlng","orientation","xyz","cycloRotationAngle","yaw","cycloHFov","shouldShowCyclomediaButton","shouldShowPictometryButton","geolocationEnabled","activeDorParcel","legendControls","imageOverlayItems","imageOverlayGroup","imageOverlayGroups","overlayGroup","imageOverlayInfo","dynamicMapLayers","regmaps","defaultBasemap","tiledLayers","activeBasemap","configForBasemap","activeTiledOverlays","activeDynamicMaps","activeFeatureLayers","basemaps","imageryBasemaps","hasImageryBasemaps","shouldShowImageryToggle","configFeature","geocodeType","pwd","streetAddress","picOrCycloActive","cyclomediaActive","mapBounds","isGeocoding","value","$nextTick","invalidateSize","czts","dzts","$data","includes","checkBoundsChanges","nextMarkers","tf","setMapToBounds","featureArray","geojsonFeature","geoJSON","Lmarker","shouldShowGeojson","shouldShowImageOverlay","shouldShowFeatureLayer","handleMapClick","$controller","getCenter","coords","pictometryConfig","getZoom","updateCyclomediaRecordings","markerId","TopicPanel","MapPanel","CyclomediaWidget","PictometryWidget","PictometryLayer","PictometryPngMarker","PictometryViewCone","Popover","mbRootStyle","panels","appDidLoad","initialPopover","hash","slots","shouldShowHeader","header","rootClass","plugin","shouldLoadCyclomediaWidget","shouldLoadPictometryWidget","fullScreenMapOnly","shouldShowTopicPanel","shouldShowMapPanel","active","hFov","pictometryActive","pictometryZoom","pictometryShowAddressMarker","geocodeData","ak","host","hostname","apiKey","pictometryDev","pictometryCity","pictometryCityDev","pictometryLocal","sk","secretKey","popoverOpen","popover","popoverText","popoverOptions","nextValue","generateUniqueId","Math","random","substring","defineProperty","exports","ligatures","svgPathData","iconName","definition","add","faSpinner","faBook","faWrench","faUniversity","faGavel","controllerMixin","assignTableIds","assignHorizontalTableGroupIds","horizontalTableGroupId","initMapboard","clientConfig","baseConfigUrl","baseConfig","axios","get","then","response","baseConfigFn","eval","gatekeeperKey","configMixin","component","FontAwesomeIcon","customComps","vm","h","Mapboard","catch","err","error"],"mappings":"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"}